 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 1 - 10/07/24 19:32:40


       1/       0 :                     ; Netronic TinyBasic For The ELF II Recreation
       2/       0 :                     ; By Richard Peters, Richard11092000@cox.net
       3/       0 :                     ; Special THANKS to TOM PITTMAN for Writing Program,
       4/       0 :                     ; To LEE A. HART for Posting Necessary Parts
       5/       0 :                     ; And To Dave Ruske for creating COMACELF group
       6/       0 :                     ; Which Made This Recreation Possible
       7/       0 :                     ; Assembled With QELFEXE V2.0 Multiformat Assembler
       8/       0 :                     ; Current Code Running In Tinybasi.zip Emulator
       9/       0 :                     ; Requires Giant Board And ROM Monitor
      10/       0 :                     ; To Use LOAD And SAVE to Tape
      11/       0 :                     ; Designed to run In RAM Starting at 0000
      12/       0 :                     ; I Have Done What I Could To Make This Source
      13/       0 :                     ; Moveable And To Follow Itself, But I Still Could
      14/       0 :                     ; Could Have Missed Something. I Also Tried To Figure
      15/       0 :                     ; Out Some Of The IL Code and Add Comments To It.
      16/       0 :                     ; If There Is Something To Add Or Change, Let Me Know.
      17/       0 :                     ; Code Has Only Been Verified With What I Have
      18/       0 :                     ; Hope The Above Changes Soon.
      19/       0 :                     ; Last Update 01/29/2004 09:40PM
      20/       0 :                     ;
      21/       0 :                     ; INTERNAL MACRO DEFINITIONS
      22/       0 :                     ;
      23/       0 :                     ; CALL   = SEP R4 + DW   SUB LOCATION
      24/       0 :                     ; RETURN = SEP R5
      25/       0 :                     ; SEP R7 = SEP R7 + DB   LOW LOCATION OF BYTE
      26/       0 :                     ;
      27/       0 :                     
      28/       0 :                     FETCH  MACRO address
      29/       0 :                             SEP R7
      30/       0 :                     	db (address)&255
      31/       0 :                             ENDM
      32/       0 :                             
      33/       0 :                     CALL    MACRO address
      34/       0 :                             SEP R4
      35/       0 :                     	dw address
      36/       0 :                             ENDM
      37/       0 :                     
      38/       0 :                     RETURN  MACRO
      39/       0 :                             SEP R5
      40/       0 :                             ENDM
      41/       0 :                     
      42/       0 :                     SERIAL_B MACRO address
      43/       0 :                     		B4 address
      44/       0 :                     		ENDM
      45/       0 :                     
      46/       0 :                     SERIAL_BN MACRO address
      47/       0 :                     		BN4 address
      48/       0 :                     		ENDM
      49/       0 :                     		
      50/       0 :                     KB_B MACRO address
      51/       0 :                     		B3 address
      52/       0 :                     		ENDM
      53/       0 :                     
      54/       0 :                     KB_BN MACRO address
      55/       0 :                     		BN3 address
      56/       0 :                     		ENDM
      57/       0 :                     
      58/       0 :                     KB_INP MACRO address
      59/       0 :                     		INP   7
      60/       0 :                     		ENDM
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 2 - 10/07/24 19:32:40


      61/       0 :                     
      62/       0 :                     LDI0 MACRO
      63/       0 :                             GHI RD 
      64/       0 :                             ENDM
      65/       0 :                     
      66/       0 :                     
      67/       0 : =0H                 R0         EQU     0         ;REGISTER DEFINITION
      68/       0 : =1H                 R1         EQU     1         ;REGISTER DEFINITION
      69/       0 : =2H                 R2         EQU     2         ;REGISTER DEFINITION
      70/       0 : =3H                 R3         EQU     3         ;REGISTER DEFINITION
      71/       0 : =4H                 R4         EQU     4         ;REGISTER DEFINITION
      72/       0 : =5H                 R5         EQU     5         ;REGISTER DEFINITION
      73/       0 : =6H                 R6         EQU     6         ;REGISTER DEFINITION
      74/       0 : =7H                 R7         EQU     7         ;REGISTER DEFINITION
      75/       0 : =8H                 R8         EQU     8         ;REGISTER DEFINITION
      76/       0 : =9H                 R9         EQU     9         ;REGISTER DEFINITION
      77/       0 : =0AH                RA         EQU     10        ;REGISTER DEFINITION
      78/       0 : =0BH                RB         EQU     11        ;REGISTER DEFINITION
      79/       0 : =0CH                RC         EQU     12        ;REGISTER DEFINITION
      80/       0 : =0DH                RD         EQU     13        ;REGISTER DEFINITION
      81/       0 : =0EH                RE         EQU     14        ;REGISTER DEFINITION
      82/       0 : =0FH                RF         EQU     15        ;REGISTER DEFINITION
      83/       0 :                     ;
      84/       0 :                     ; The Following Register And EQU Assignments Are Not Used
      85/       0 :                     ; In Every Part Of Program
      86/       0 :                     ;
      87/       0 :                     ; REGISTER ASSIGNMENTS:
      88/       0 :                     ;
      89/       0 :                     ;      0 ; PC (VIA RESET) AT ENTRY
      90/       0 :                     ;      1 ; INTERRUPT PROGRAM COUNTER
      91/       0 :                     ;      2 ; STACK POINTER
      92/       0 :                     ;      3 ; NORMAL PROGRAM COUNTER
      93/       0 :                     ;      4 ; BASIC: SCRT "CALL" PC
      94/       0 :                     ;      5 ; BASIC: SCRT "RETURN" PC
      95/       0 :                     ;      6 ; BASIC: SCRT RETURN ADDR.
      96/       0 :                     ;      7 ; BASIC: PC FOR "FECH"
      97/       0 : =8H                 XX         EQU     8         ;BASIC: WORK REGISTER
      98/       0 : =9H                 PC         EQU     9         ;IL PROGRAM COUNTER
      99/       0 : =0AH                AC         EQU     10        ;BASIC: 16-BIT ACCUMULATOR
     100/       0 : =0BH                BP         EQU     11        ;BASIC POINTER
     101/       0 :                     ;     12                     SERIAL AND TAPE ROUTINES
     102/       0 : =0DH                PZ         EQU     13        ;BASE: PAGE 0 POINTER
     103/       0 :                     ;     14 ;      RE.0=BAUD RATE CONSTANT
     104/       0 :                     ;            IF RE.0=0 USES 1861 AND KEYBOARD P7,EF3
     105/       0 :                     ;               RE.1=  USED FOR INPUT,OUTPUT
     106/       0 : =0FH                X          EQU     15        ;BASIC: SCRATCH REGISTER
     107/       0 :                     ;
     108/       0 :                     ; DISPLAY BUFFER EQU
     109/       0 :                     ;
     110/       0 : =0DB0H              BUFF       EQU     0DB0h     ;ONLY CHANGE PAGE, UNLESS YOU
     111/       0 : =0F08H              BUFE       EQU     BUFF+344  ;WANT TO CHANGE INTERUPT ROUTINE
     112/       0 : =0F40H              BUFX       EQU     BUFE+56   ;ALSO LIMITED TO 1DB0 BY PLOT
     113/       0 :                     ;
     114/       0 : =0F000H             MONITOR    EQU     0F000h    ;Monitor address
     115/       0 :                     ;Putting C8 in first byte allows Monitor To Run instead of Tiny
     116/       0 : C0 01 00            PAGE       LBR     COLDV
     117/       3 : C0 F0 00                       LBR     MONITOR
     118/       6 : D0                             SEP     R0
     119/       7 : 00                             IDL
     120/       8 :                     ;
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 3 - 10/07/24 19:32:40


     121/       8 :                     ;  DATA AREA, COULD BE EQUATES
     122/       8 :                     ;
     123/       8 : 0F                  TVXY       DB      00Fh       ;DISPLAY CURSOR LOCATION
     124/       9 : 00                             DB      000h
     125/       A : 00                             DB      000h       ;BIT LOCATION OF CURSOR
     126/       B : 00                             DB      000h
     127/       C : E0                  MASK       DB      0E0h
     128/       D : 9A                  TIME_      DB      09Ah
     129/       E : 27                             DB      027h
     130/       F : 3A                             DB      03Ah
     131/      10 : 00                             DB      000h
     132/      11 : 00                             DB      000h
     133/      12 : 00                             DB      000h
     134/      13 : 08                  BS         DB      008h
     135/      14 : 1B                  CAN        DB      01Bh
     136/      15 : 00                  PAD        DB      000h
     137/      16 : 00                  TAPEMODE   DB      000h
     138/      17 : 19                  SPARE      DB      019h
     139/      18 : 19                  XEQ        DB      019h
     140/      19 : 34                  LEND       DB      034h
     141/      1A : 80                  AEPTR      DB      080h
     142/      1B : 00                  TTYCC      DB      000h
     143/      1C : 07 73               NXA        DW      STMT       ;START OF Statements
     144/      1E : 07 66               AIL        DW      STRT       ;START OF IL
     145/      20 : 0F 40               BASIC      DW      00F40h     ;LOWEST ADD. FOR PROGRAM
     146/      22 : 3F F7               STACK      DW      03FF7h     ;HIGHEST ADD. FOR PROGRAM
     147/      24 : 10 9B               MEND       DW      0109Bh     ;PROGRAM END + STACK RESERVE
     148/      26 : 3F F7               TOPS       DW      03FF7h     ;TOP OF GOSUB STACK
     149/      28 : 00 AA               LINO       DW      000AAh     ;CURRENT BASIC LINE NUMBER
     150/      2A : 10 83               WORK       DW      01083h
     151/      2C : 00 34                          DW      00034h
     152/      2E : 00 33               SP         DW      00033h
     153/      30 : 00 00               LINE       DW      00000h     ;INPUT LINE BUFFER
     154/      32 :                     ;
     155/      80 :                                ORG     080h
     156/      80 : 00 00               AESTK      DW      00000h     ;RANDOM NUMBER GEN.
     157/      82 : 00 00                          DW      00000h     ;VAR. A
     158/      84 : 00 00                          DW      00000h     ;VAR. B
     159/      86 : 00 00                          DW      00000h     ;VAR. C
     160/      88 : 00 00                          DW      00000h     ;VAR. D
     161/      8A : 00 00                          DW      00000h     ;VAR. E
     162/      8C : 00 00                          DW      00000h     ;VAR. F
     163/      8E : 00 00                          DW      00000h     ;VAR. G
     164/      90 : 00 00                          DW      00000h     ;VAR. H
     165/      92 : 00 00                          DW      00000h     ;VAR. I
     166/      94 : 00 00                          DW      00000h     ;VAR. J
     167/      96 : 00 00                          DW      00000h     ;VAR. K
     168/      98 : 00 00                          DW      00000h     ;VAR. L
     169/      9A : 00 00                          DW      00000h     ;VAR. M
     170/      9C : 00 00                          DW      00000h     ;VAR. N
     171/      9E : 00 00                          DW      00000h     ;VAR. O
     172/      A0 : 00 00                          DW      00000h     ;VAR. P
     173/      A2 : 00 00                          DW      00000h     ;VAR. Q
     174/      A4 : 00 00                          DW      00000h     ;VAR. R
     175/      A6 : 00 00                          DW      00000h     ;VAR. S
     176/      A8 : 00 00                          DW      00000h     ;VAR. T
     177/      AA : 00 00                          DW      00000h     ;VAR. U
     178/      AC : 00 00                          DW      00000h     ;VAR. V
     179/      AE : 00 00                          DW      00000h     ;VAR. W
     180/      B0 : 00 00                          DW      00000h     ;VAR. X
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 4 - 10/07/24 19:32:40


     181/      B2 : 00 00                          DW      00000h     ;VAR. Y
     182/      B4 : 00 00                          DW      00000h     ;VAR. Z
     183/      B6 : A7                  Z165       PLO     R7         ;I/O ROUTINES
     184/      B7 : C3 02 1A                       LBDF    PEND       ;GOTO WARM START
     185/      BA : 9D                             GHI     RD
     186/      BB : (MACRO)             Z149       KB_B      Z148     ;CHECK FOR KEYBOARD OR SERIAL
     186/      BB : 36 E1                               B3 Z148
     187/      BD : (MACRO)                        SERIAL_B      Z149 ;INPUT
     187/      BD : 37 BB                               B4 Z149
     188/      BF : (MACRO)             Z150       KB_B      Z148
     188/      BF : 36 E1                               B3 Z148
     189/      C1 : (MACRO)                        SERIAL_BN    Z150  ;FINED TIMING OF SERIAL INPUT
     189/      C1 : 3F BF                               BN4 Z150
     190/      C3 : 7B                             SEQ
     191/      C4 : AE                  Z153       PLO     RE
     192/      C5 : F8 08                          LDI     8
     193/      C7 : FF 01               Z151       SMI     1
     194/      C9 : 3A C7                          BNZ     Z151
     195/      CB : 8E                             GLO     RE
     196/      CC : FC 02                          ADI     2
     197/      CE : 39 D3                          BNQ     Z152
     198/      D0 : (MACRO)                        SERIAL_B      Z153
     198/      D0 : 37 C4                               B4 Z153
     199/      D2 : 7A                             REQ
     200/      D3 : (MACRO)             Z152       SERIAL_BN    Z153       ;MUST GOTO #C4
     200/      D3 : 3F C4                               BN4 Z153
     201/      D5 : C4                             NOP                     ;|
     202/      D6 : C4                             NOP                     ;|
     203/      D7 : FF 01                          SMI     1               ;|
     204/      D9 : (MACRO)                        SERIAL_BN    Z154       ;|
     204/      D9 : 3F DE                               BN4 Z154
     205/      DB : 3A D4                          BNZ     Z152+1          ;BECAUSE OF THIS
     206/      DD : 1E                             INC     RE
     207/      DE : 8E                  Z154       GLO     RE
     208/      DF : FF 06                          SMI     6
     209/      E1 : BE                  Z148       PHI     RE
     210/      E2 : F8 0C                          LDI     00Ch
     211/      E4 : (MACRO)                        CALL    OUTPUTR    ;OUTPUT 0C  CLEARSCREEN
     211/      E4 : D4                          SEP R4
     211/      E5 : 0A 82                       dw OUTPUTR
     212/      E7 : C0 02 04                       LBR     CLEAR
     213/      EA : FC 00               BRKTST     ADI     0          ;BREAK TEST
     214/      EC : 9E                             GHI     RE
     215/      ED : 3A F2                          BNZ     Z156
     216/      EF : (MACRO)                        KB_BN     Z157
     216/      EF : 3E FF                               BN3 Z157
     217/      F1 : C8                             LSKP
     218/      F2 : (MACRO)             Z156       SERIAL_B      Z157
     218/      F2 : 37 FF                               B4 Z157
     219/      F4 : FF 00                          SMI     0
     220/      F6 : 9E                  SERIAL_DELAY       GHI     RE
     221/      F7 : FA FE                          ANI     0FEh
     222/      F9 : AE                  Z158       PLO     RE
     223/      FA : CE                             LSZ
     224/      FB : 2E                             DEC     RE
     225/      FC : 8E                             GLO     RE
     226/      FD : 3A F9                          BNZ     Z158
     227/      FF : (MACRO)             Z157       RETURN
     227/      FF : D5                          SEP R5
     228/     100 : C4                  COLDV      NOP                ;COLD START
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 5 - 10/07/24 19:32:40


     229/     101 : 30 B0                          BR      COLD
     230/     103 : C0 01 ED                       LBR     WARM       ;WARM START ENTRY
     231/     106 : C0 0A 59            KEYV       LBR     INPUTR     ;BRANCH TO CHARATER INPUT
     232/     109 : C0 0A 82            TYPEV      LBR     OUTPUTR    ;BRANCH TO CHARATER OUPUT
     233/     10C : C0 00 EA            BREAKV     LBR     BRKTST     ;BRANCH TO BREAK TEST
     234/     10F :                     ; DEFAULTS LOADED TO DIRECT PAGE
     235/     10F : 08                             DB      008h       ;BACKSPACE CODE
     236/     110 : 1B                             DB      01Bh       ;LINE CANCEL CODE
     237/     111 : 00                             DB      000h       ;PAD CHARATER
     238/     112 : 00                             DB      000h       ;TAPE MODE ENABLE FLAG 80=ENABLED
     239/     113 : 19                             DB      019h       ;SPARE STACK SIZE
     240/     114 : 30 22               ILPEEK     BR      PEEK       ;BRANCH TO PEEK
     241/     116 : 00                             DB      000h
     242/     117 : 00                             DB      000h
     243/     118 : 58                  ILPOKE     DB      058h       ;POKE
     244/     119 : D5                             DB      0D5h
     245/     11A : 07 66                          DW      STRT       ;ADDRESS OF IL PROGRAM START
     246/     11C : 0F 40               CONST      DW      00F40h     ;DEFAULT START OF PROGRAM SPACE
     247/     11E : 7F                             DB      07Fh       ;END MEM STOP
     248/     11F : 00                             DB      000h
     249/     120 :                     ; END DEFAULTS
     250/     120 : 48                             LDA     R8         ;DOUBLE PEEK ENTRY
     251/     121 : 38                             SKP
     252/     122 : 9D                  PEEK       GHI     RD         ;PEEK ENTRY
     253/     123 : BA                             PHI     RA
     254/     124 : 48                             LDA     R8
     255/     125 : (MACRO)                        RETURN
     255/     125 : D5                          SEP R5
     256/     126 : C0 07 51            ILINPOUT   LBR     IO
     257/     129 : D3                  CALL_S     SEP     R3
     258/     12A : BF                  CALL_      PHI     RF         ;CALL ROUTINE
     259/     12B : E2                             SEX     R2
     260/     12C : 86                             GLO     R6
     261/     12D : 73                             STXD
     262/     12E : 96                             GHI     R6
     263/     12F : 73                             STXD
     264/     130 : 83                             GLO     R3
     265/     131 : A6                             PLO     R6
     266/     132 : 93                             GHI     R3
     267/     133 : B6                             PHI     R6
     268/     134 : 46                             LDA     R6
     269/     135 : B3                             PHI     R3
     270/     136 : 46                             LDA     R6
     271/     137 : A3                             PLO     R3
     272/     138 : 9F                             GHI     RF
     273/     139 : 30 29                          BR      CALL_S
     274/     13B : D3                  RETURN_S   SEP     R3
     275/     13C : BF                  RETURN_    PHI     RF         ;RETURN ROUTINE
     276/     13D : E2                             SEX     R2
     277/     13E : 96                             GHI     R6
     278/     13F : B3                             PHI     R3
     279/     140 : 86                             GLO     R6
     280/     141 : A3                             PLO     R3
     281/     142 : 12                             INC     R2
     282/     143 : 42                             LDA     R2
     283/     144 : B6                             PHI     R6
     284/     145 : 02                             LDN     R2
     285/     146 : A6                             PLO     R6
     286/     147 : 9F                             GHI     RF
     287/     148 : 30 3B                          BR      RETURN_S
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 6 - 10/07/24 19:32:40


     288/     14A : D3                             SEP     R3
     289/     14B : 43                  FETCH_     LDA     R3         ;LOAD TEMP IMMEDIATE ROUTINE
     290/     14C : AD                             PLO     RD
     291/     14D : F8 00                          LDI     (PAGE)&255 ;MEMORY BASE PAGE
     292/     14F : BD                             PHI     RD
     293/     150 : 4D                             LDA     RD
     294/     151 : ED                             SEX     RD         ;AND SET X TO D AND +
     295/     152 : 30 4A                          BR      FETCH_-1
     296/     154 : 02 98               TABLE      DW      BACK
     297/     156 : 02 A0                          DW      HOP
     298/     158 : 03 1F                          DW      MATCH
     299/     15A : 02 DD                          DW      TSTV
     300/     15C : 02 F0                          DW      TSTN
     301/     15E : 02 D4                          DW      TEND
     302/     160 : 05 81                          DW      RTN
     303/     162 : 03 49                          DW      HOOK
     304/     164 : 01 ED                          DW      WARM
     305/     166 : 05 4E                          DW      XINIT
     306/     168 : 02 04                          DW      CLEAR
     307/     16A : 06 A2                          DW      INSRT
     308/     16C : 02 D3                          DW      RETN
     309/     16E : 02 D3                          DW      RETN
     310/     170 : 05 AA                          DW      GETLN
     311/     172 : 02 D3                          DW      RETN
     312/     174 : 02 D3                          DW      RETN
     313/     176 : 03 C5                          DW      STRNG
     314/     178 : 03 D5                          DW      CRLF
     315/     17A : 04 03                          DW      TAB
     316/     17C : 03 79                          DW      PRS
     317/     17E : 04 18                          DW      PRN
     318/     180 : 06 3C                          DW      LIST
     319/     182 : 02 D3                          DW      RETN
     320/     184 : 05 29                          DW      NXT
     321/     186 : 04 6C                          DW      CMPR
     322/     188 : 04 CB                          DW      IDIV
     323/     18A : 04 A7                          DW      IMUL
     324/     18C : 04 98                          DW      ISUB
     325/     18E : 04 9B                          DW      IADD
     326/     190 : 05 0E                          DW      INEG
     327/     192 : 05 60                          DW      XFER
     328/     194 : 05 6D                          DW      RSTR
     329/     196 : 06 81                          DW      SAV
     330/     198 : 02 B6                          DW      STORE
     331/     19A : 03 67                          DW      IND
     332/     19C : 04 48                          DW      RSBP
     333/     19E : 04 4B                          DW      SVBP
     334/     1A0 : 02 D3                          DW      RETN
     335/     1A2 : 02 D3                          DW      RETN
     336/     1A4 : 02 C9                          DW      BPOP
     337/     1A6 : 02 C5                          DW      APOP
     338/     1A8 : 03 4E                          DW      DUPS
     339/     1AA : 03 44                          DW      LITN
     340/     1AC : 03 41                          DW      LIT1
     341/     1AE : 02 D3                          DW      RETN
     342/     1B0 :                     TBEND:
     343/     1B0 :                     ; COLD & WARM START INITIALIZATION ;
     344/     1B0 :                     ;
     345/     1B0 :                     ; COLD START;
     346/     1B0 :                     ;
     347/     1B0 : F8 B3               COLD       LDI     ($+3)&255   ;CHANGE PROGRAM COUNTER
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 7 - 10/07/24 19:32:40


     348/     1B2 : A3                             PLO     R3        ;FROM R0 TO R3
     349/     1B3 : F8 01                          LDI     ($)>>8
     350/     1B5 : B3                             PHI     R3
     351/     1B6 : D3                             SEP     R3
     352/     1B7 :                     ; DETERMINE SIZE OF USER RAM
     353/     1B7 : BA                             PHI     AC        ;GET LOW END ADDR.
     354/     1B8 : F8 1C                          LDI     (CONST)&255 ;OF USER PROGRAM
     355/     1BA : AA                             PLO     AC        ;RAM (AT "CONST")
     356/     1BB : 4A                             LDA     AC
     357/     1BC : B2                             PHI     R2        ;..AND PUT IN R2
     358/     1BD : 4A                             LDA     AC
     359/     1BE : A2                             PLO     R2
     360/     1BF : 4A                             LDA     AC        ;SET PZ TO WRAP POINT
     361/     1C0 : BD                             PHI     PZ        ;(END OF SEARCH)
     362/     1C1 : F8 FF                          LDI     0FFh
     363/     1C3 : AD                             PLO     PZ
     364/     1C4 : 0D                             LDN     PZ        ;..AND SAVE BYTE
     365/     1C5 : BF                             PHI     X         ;NOW AT ADDR. PZ
     366/     1C6 : E2                  SCAN       SEX     R2        ;REPEAT TO SEARCH RAM..
     367/     1C7 : 12                             INC     R2        ;- GET NEXT BYTE
     368/     1C8 : F0                             LDX
     369/     1C9 : AF                             PLO     X         ;- SAVE A COPY
     370/     1CA : FB FF                          XRI     0FFh      ;- COMPLEMENT IT
     371/     1CC : 52                             STR     R2        ;- STORE IT
     372/     1CD : F3                             XOR               ;- SEE IF IT WORKED
     373/     1CE : ED                             SEX     PZ
     374/     1CF : C6                             LSNZ              ;- IF MATCHES, IS RAM
     375/     1D0 : 9F                             GHI     X         ;SET CARRY IF AT
     376/     1D1 : F3                             XOR               ;WRAP POINT..
     377/     1D2 : FC FF                          ADI     0FFh      ;- ELSE IS NOT RAM
     378/     1D4 : 8F                             GLO     X         ;RESTORE ORIGINAL BYTE
     379/     1D5 : 52                             STR     R2
     380/     1D6 : 3B C6                          BNF     SCAN      ;- ..UNTIL END OR WRAP POINT
     381/     1D8 : 22                             DEC     R2
     382/     1D9 : 0A                             LDN     AC        ;RAM SIZED: SET
     383/     1DA : BD                             PHI     PZ        ;POINTER PZ TO
     384/     1DB : F8 23                          LDI     STACK+1   ;WORK AREA
     385/     1DD : AD                             PLO     PZ
     386/     1DE : 82                             GLO     R2        ;STORE RAM END ADDRESS
     387/     1DF : 73                             STXD
     388/     1E0 : 92                             GHI     R2
     389/     1E1 : 73                             STXD              ;GET & STORE RAM BEGINNIG
     390/     1E2 : 2A                             DEC     AC        ;REPEAT TO COPY PARAMETERS..
     391/     1E3 : 2A                             DEC     AC        ;- POINT TO NEXT
     392/     1E4 : 0A                             LDN     AC        ;- GET PARAMETER
     393/     1E5 : 73                             STXD              ;- STORE IN WORK AREA
     394/     1E6 : 8D                             GLO     PZ
     395/     1E7 : FB 12                          XRI     BS-1      ;- TEST FOR LAST PARAMETER
     396/     1E9 : 3A E3                          BNZ     $-6       ;- ..UNTIL LAST COPIED
     397/     1EB : F6                             SHR               ;SET DF=0 FOR "CLEAR"
     398/     1EC : C8                             LSKP
     399/     1ED :                     ;
     400/     1ED :                     ; WARM START:
     401/     1ED :                     ;
     402/     1ED : FF 00               WARM       SMI     0         ;SET DF=1 FOR "DON'T CLEAR"
     403/     1EF : F8 F2                          LDI     ($+3)&255
     404/     1F1 : A3                             PLO     R3        ;BE SURE PROGRAM COUNTER IS R3
     405/     1F2 : F8 01                          LDI     ($)>>8
     406/     1F4 : B3                             PHI     R3
     407/     1F5 : D3                             SEP     R3
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 8 - 10/07/24 19:32:40


     408/     1F6 : B4                             PHI     R4        ;INITIALIZE R4, R5, R7
     409/     1F7 : B5                             PHI     R5        ;ASSUMES CALL,RETURN,FETCH
     410/     1F8 : B7                             PHI     R7        ;IS IN SAME PAGE AS WARM
     411/     1F9 : F8 2A                          LDI     (CALL_)&255
     412/     1FB : A4                             PLO     R4
     413/     1FC : F8 3C                          LDI     (RETURN_)&255
     414/     1FE : A5                             PLO     R5
     415/     1FF : F8 4B                          LDI     (FETCH_)&255
     416/     201 : C0 00 B6                       LBR     Z165       ;GOTO #00B6
     417/     204 : (MACRO)             CLEAR      FETCH   BASIC;- MARK PROGRAM EMPTY
     417/     204 : D7                          SEP R7
     417/     205 : 20                          db (BASIC)&255
     418/     206 : BB                             PHI     BP
     419/     207 : 4D                             LDA     PZ
     420/     208 : AB                             PLO     BP
     421/     209 : (MACRO)                        LDI0               ;WITH LINE# = 0
     421/     209 : 9D                          GHI RD 
     422/     20A : 5B                             STR     BP
     423/     20B : 1B                             INC     BP
     424/     20C : 5B                             STR     BP
     425/     20D : (MACRO)                        FETCH   SPARE-1 ;SET MEND = START + SPARE
     425/     20D : D7                          SEP R7
     425/     20E : 16                          db (SPARE-1)&255
     426/     20F : 8B                             GLO     BP         ;GET START
     427/     210 : F4                             ADD                ;ADD ;LOW BYTE OF SPARE
     428/     211 : BF                             PHI     X          ;SAVE TEMPORARILY
     429/     212 : (MACRO)                        FETCH   MEND       ;GET MEND
     429/     212 : D7                          SEP R7
     429/     213 : 24                          db (MEND)&255
     430/     214 : 9F                             GHI     X
     431/     215 : 73                             STXD               ;STORE LOW BYTE OF MEND
     432/     216 : 9B                             GHI     BP
     433/     217 : 7C 00                          ADCI    0          ;ADD CARRY
     434/     219 : 73                             STXD               ;STORE ;HIGH BYTE OF MEND
     435/     21A : (MACRO)             PEND       FETCH   STACK ;SET STACK TO END OF MEMORY
     435/     21A : D7                          SEP R7
     435/     21B : 22                          db (STACK)&255
     436/     21C : B2                             PHI     R2
     437/     21D : 4D                             LDA     PZ
     438/     21E : A2                             PLO     R2
     439/     21F : (MACRO)                        FETCH   TOPS
     439/     21F : D7                          SEP R7
     439/     220 : 26                          db (TOPS)&255
     440/     221 : 82                             GLO     R2        ;SET TOPS TO EMPTY
     441/     222 : 73                             STXD              ;(I.E. STACK END)
     442/     223 : 92                             GHI     R2
     443/     224 : 73                             STXD
     444/     225 : (MACRO)                        CALL    FORCE     ;SET TAPE MODE "OFF"
     444/     225 : D4                          SEP R4
     444/     226 : 03 CC                       dw FORCE
     445/     228 : (MACRO)             IIL        FETCH   AIL       ;SET IL PC
     445/     228 : D7                          SEP R7
     445/     229 : 1E                          db (AIL)&255
     446/     22A : B9                             PHI     PC
     447/     22B : 4D                             LDA     PZ
     448/     22C : A9                             PLO     PC        ;CONTINUE INTO "NEXT"
     449/     22D :                     ;
     450/     22D :                     ; EXECUTE NEXT INTERMEDIATE LANGUAGE (IL) INSTRUCTION
     451/     22D :                     ;
     452/     22D : E2                  NEXT       SEX     R2        ;GET OPCODE
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 9 - 10/07/24 19:32:40


     453/     22E : 49                             LDA     PC
     454/     22F : FF 30                          SMI     030h      ;IF JUMP OR BRANCH,
     455/     231 : 33 4B                          BDF     TBR       ;GO HANDLE IT
     456/     233 : FD D7                          SDI     0D7h      ;IF STACK BYTE EXCHANGE,
     457/     235 : 33 85                          BDF     XCHG      ;GO HANDLE IT
     458/     237 : FE                             SHL               ;ELSE ;MULTIPLY BY 2
     459/     238 : FC B0                          ADI     (TBEND)&255  ;TO POINT INTO TABLE
     460/     23A : A6                             PLO     R6
     461/     23B : F8 2D                          LDI     (NEXT)&255   ;& SET RETURN TO HERE
     462/     23D : 22                             DEC     R2           ;(DUMMY STACK ENTRY)
     463/     23E : 22                             DEC     R2
     464/     23F : 73                             STXD
     465/     240 : 93                             GHI     R3
     466/     241 : 73                             STXD
     467/     242 : 97                  DOIT       GHI     R7        ;TABLE PAGE
     468/     243 : B6                             PHI     R6
     469/     244 : 46                             LDA     R6        ;FETCH SERVICE ADDRESS
     470/     245 : 52                             STR     R2
     471/     246 : 46                             LDA     R6
     472/     247 : A6                             PLO     R6
     473/     248 : F0                             LDX
     474/     249 : B6                             PHI     R6
     475/     24A : D5                             SEP     R5        ;GO DO IT
     476/     24B :                     ;
     477/     24B : FF 10               TBR        SMI     010h      ;IF JUMP OR CALL,
     478/     24D : 3B 6A                          BNF     TJMP      ;GO DO IT
     479/     24F : A6                             PLO     R6        ;ELSE BRANCH; SAVE OPCODE
     480/     250 : FA 1F                          ANI     01Fh      ;COMPUTE DESTINATION
     481/     252 : 32 5C                          BZ      TBERR     ;IF BRANCh, 0ADh DR = 0, GOTO ERROR
     482/     254 : 52                             STR     R2        ;PUSh, 0ADh DRESS ONTO STACK
     483/     255 : 89                             GLO     PC        ;ADD RELATIVE OFFSET
     484/     256 : F4                             ADD               ;LOW BYTE
     485/     257 : 73                             STXD
     486/     258 : 99                             GHI     PC        ;HIGH BYTE W. CARRY
     487/     259 : 7C 00                          ADCI    0
     488/     25B : 38                             SKP
     489/     25C : 73                  TBERR      STXD              ;STORE 0 FOR ERROR
     490/     25D : 73                             STXD
     491/     25E : 86                             GLO     R6        ;NOW COMPUTE SERVICE ADDRESS
     492/     25F : F6                             SHR               ;WHICH ;IS HIGH 3 BITS
     493/     260 : F6                             SHR
     494/     261 : F6                             SHR
     495/     262 : F6                             SHR
     496/     263 : FA FE                          ANI     0FEh
     497/     265 : FC 54                          ADI     (TABLE)&255 ;INDEX INTO TABLE
     498/     267 : A6                             PLO     R6
     499/     268 : 30 42                          BR      DOIT
     500/     26A :                     ;
     501/     26A : FC 08               TJMP       ADI     8         ;NOTE IF JUMP IN CARRY
     502/     26C : FA 07                          ANI     7         ;GET ADDRESS
     503/     26E : B6                             PHI     R6
     504/     26F : 49                             LDA     PC
     505/     270 : A6                             PLO     R6
     506/     271 : 33 7A                          BDF     JMP       ;JUMP
     507/     273 : 89                             GLO     PC        ;PUSH PC
     508/     274 : 73                             STXD
     509/     275 : 99                             GHI     PC
     510/     276 : 73                             STXD
     511/     277 : (MACRO)                        CALL    STEST     ;CHECK STACK DEPTH
     511/     277 : D4                          SEP R4
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 10 - 10/07/24 19:32:40


     511/     278 : 03 37                       dw STEST
     512/     27A :                     ;
     513/     27A : (MACRO)             JMP        FETCH   AIL       ;ADD JUMP ADDRESS TO IL BASE
     513/     27A : D7                          SEP R7
     513/     27B : 1E                          db (AIL)&255
     514/     27C : 86                             GLO     R6
     515/     27D : F4                             ADD
     516/     27E : A9                             PLO     PC
     517/     27F : 96                             GHI     R6
     518/     280 : 2D                             DEC     PZ
     519/     281 : 74                             ADC
     520/     282 : B9                             PHI     PC
     521/     283 : 30 2D                          BR      NEXT
     522/     285 :                     ;
     523/     285 : FD 07               XCHG       SDI     7         ;SAVE OFFSET
     524/     287 : 52                             STR     R2
     525/     288 : (MACRO)                        FETCH   AEPTR
     525/     288 : D7                          SEP R7
     525/     289 : 1A                          db (AEPTR)&255
     526/     28A : AD                             PLO     PZ
     527/     28B : E2                             SEX     R2
     528/     28C : F4                             ADD
     529/     28D : A6                             PLO     R6        ;R6 IS OTHER POINTER
     530/     28E : 9D                             GHI     PZ
     531/     28F : B6                             PHI     R6
     532/     290 : 0D                             LDN     PZ        ;NOW SWAP THEM:
     533/     291 : 52                             STR     R2        ;SAVE OLD TOP
     534/     292 : 06                             LDN     R6        ;GET INNER BYTE
     535/     293 : 5D                             STR     PZ        ;PUT ON TOP
     536/     294 : 02                             LDN     R2        ;GET OLD TOP
     537/     295 : 56                             STR     R6        ;PUT IN
     538/     296 : 30 2D                          BR      NEXT
     539/     298 :                     ;
     540/     298 : 86                  BACK       GLO     R6        ;REMOVE OFFSET
     541/     299 : FF 20                          SMI     020h      ;FOR BACKWARDS HOP
     542/     29B : A6                             PLO     R6
     543/     29C : 96                             GHI     R6
     544/     29D : 7F 00                          SMBI    0
     545/     29F : 38                             SKP
     546/     2A0 :                     ;
     547/     2A0 : 96                  HOP        GHI     R6        ;FORWARD HOP
     548/     2A1 : C2 03 7F                       LBZ     ERR       ;IF ZERO, GOTO ERROR
     549/     2A4 : B9                             PHI     PC        ;ELSE PUT INTO PC
     550/     2A5 : 86                             GLO     R6
     551/     2A6 : A9                             PLO     PC
     552/     2A7 : 30 2D                          BR      NEXT
     553/     2A9 :                     ;
     554/     2A9 : 1B                             INC     BP        ;ADVANCE TO NEXT NON-BLANK CHAR.
     555/     2AA : 0B                  NONBL      LDN     BP        ;GET CHARACTER
     556/     2AB : FF 20                          SMI     020h      ;IF BLANK,
     557/     2AD : 32 A9                          BZ      NONBL-1   ;INCREMENT POINTER AND TRY AGAIN
     558/     2AF : FF 10                          SMI     010h      ;IF NUMERIC (0-9),
     559/     2B1 : C7                             LSNF
     560/     2B2 : FD 09                          SDI     9         ;SET DF=1
     561/     2B4 : 0B                  NONBX      LDN     BP        ;GET CHARACTER
     562/     2B5 : (MACRO)                        RETURN              AND ;RETURN
     562/     2B5 : D5                          SEP R5
     563/     2B6 :                     ;
     564/     2B6 : (MACRO)             STORE      CALL    APOP      ;GET VARIABLE
     564/     2B6 : D4                          SEP R4
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 11 - 10/07/24 19:32:40


     564/     2B7 : 02 C5                       dw APOP
     565/     2B9 : 4D                             LDA     PZ        ;GET POINTER
     566/     2BA : AD                             PLO     PZ
     567/     2BB : 9A                             GHI     AC        ;STORE THE NUMBER
     568/     2BC : 5D                             STR     PZ
     569/     2BD : 1D                             INC     PZ
     570/     2BE : 8A                             GLO     AC
     571/     2BF : 5D                             STR     PZ
     572/     2C0 : 30 C9                          BR      BPOP      ;GO POP POINTER
     573/     2C2 :                     ;
     574/     2C2 : (MACRO)                        CALL    APOP      ;POP 4 BYTES
     574/     2C2 : D4                          SEP R4
     574/     2C3 : 02 C5                       dw APOP
     575/     2C5 : (MACRO)             APOP       CALL    BPOP      ;POP 2 BYTES
     575/     2C5 : D4                          SEP R4
     575/     2C6 : 02 C9                       dw BPOP
     576/     2C8 : BA                             PHI     AC        ;FIRST BYTE TO AC.1
     577/     2C9 : (MACRO)             BPOP       FETCH   AEPTR ;POP 1 BYTE
     577/     2C9 : D7                          SEP R7
     577/     2CA : 1A                          db (AEPTR)&255
     578/     2CB : 2D                             DEC     PZ
     579/     2CC : FC 01                          ADI     1         ;INCREMENT
     580/     2CE : 5D                             STR     PZ
     581/     2CF : AD                             PLO     PZ
     582/     2D0 : 2D                             DEC     PZ
     583/     2D1 : 4D                             LDA     PZ        ;LEAVE IT IN D
     584/     2D2 : AA                             PLO     AC        ;AND AC.0
     585/     2D3 : (MACRO)             RETN       RETURN
     585/     2D3 : D5                          SEP R5
     586/     2D4 :                     ;
     587/     2D4 : (MACRO)             TEND       CALL    NONBL     ;GET NEXT CHARACTER
     587/     2D4 : D4                          SEP R4
     587/     2D5 : 02 AA                       dw NONBL
     588/     2D7 : FB 0D                          XRI     00Dh      ;IF CARRIAGE RETURN,
     589/     2D9 : 32 2D                          BZ      NEXT      ;THEN FALL THRU IN IL
     590/     2DB : 30 A0                          BR      HOP       ;ELSE TAKE BRANCH
     591/     2DD :                     ;
     592/     2DD : (MACRO)             TSTV       CALL    NONBL     ;GET NEXT CHARACTER
     592/     2DD : D4                          SEP R4
     592/     2DE : 02 AA                       dw NONBL
     593/     2E0 : FF 41                          SMI     041h      ;IF LESS THAN 'A',
     594/     2E2 : 3B A0                          BNF     HOP       ;THEN HOP
     595/     2E4 : FF 1A                          SMI     01Ah      ;IF GREATER THAN 'Z'
     596/     2E6 : 33 A0                          BDF     HOP       ;THEN HOP
     597/     2E8 : 1B                             INC     BP        ;ELSE IS LETTER A-Z
     598/     2E9 : 9F                             GHI     X         ;GET SAVED COPY
     599/     2EA : FE                             SHL               ;CONVERT ;TO VARIABLE'S ADDRESS
     600/     2EB : (MACRO)                        CALL    BPUSH     ;AND PUSH ONTO STACK
     600/     2EB : D4                          SEP R4
     600/     2EC : 03 59                       dw BPUSH
     601/     2EE : 30 2D                          BR      NEXT
     602/     2F0 :                     ;
     603/     2F0 : (MACRO)             TSTN       CALL    NONBL     ;GET NEXT CHARACTER
     603/     2F0 : D4                          SEP R4
     603/     2F1 : 02 AA                       dw NONBL
     604/     2F3 : 3B A0                          BNF     HOP       ;IF NOT A DIGIT, HOP
     605/     2F5 : (MACRO)                        LDI0              ;ELSE COMPUTE NUMBER
     605/     2F5 : 9D                          GHI RD 
     606/     2F6 : BA                             PHI     AC        ;INITIALLY 0
     607/     2F7 : AA                             PLO     AC
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 12 - 10/07/24 19:32:40


     608/     2F8 : (MACRO)                        CALL    APUSH     ;PUSH ONTO STACK
     608/     2F8 : D4                          SEP R4
     608/     2F9 : 03 54                       dw APUSH
     609/     2FB : 4B                  NUMB       LDA     BP        ;GET CHARACTER
     610/     2FC : FA 0F                          ANI     00Fh      ;CONVERT FROM ASCII TO NUMBER
     611/     2FE : AA                             PLO     AC
     612/     2FF : (MACRO)                        LDI0        
     612/     2FF : 9D                          GHI RD 
     613/     300 : BA                             PHI     AC
     614/     301 : F8 0A                          LDI     10        ;ADD 10 TIMES THE..
     615/     303 : AF                             PLO     X
     616/     304 : ED                             SEX     PZ
     617/     305 : 1D                  NM10       INC     PZ
     618/     306 : 8A                             GLO     AC        ;..PREVIOUS VALUE..
     619/     307 : F4                             ADD
     620/     308 : AA                             PLO     AC
     621/     309 : 9A                             GHI     AC
     622/     30A : 2D                             DEC     PZ        ;..WHICH IS ON STACK.
     623/     30B : 74                             ADC
     624/     30C : BA                             PHI     AC
     625/     30D : 2F                             DEC     X         ;COUNT THE ITERATIONS
     626/     30E : 8F                             GLO     X
     627/     30F : 3A 05                          BNZ     NM10
     628/     311 : 9A                             GHI     AC        ;SAVE NEW VALUE
     629/     312 : 5D                             STR     PZ
     630/     313 : 1D                             INC     PZ
     631/     314 : 8A                             GLO     AC
     632/     315 : 73                             STXD
     633/     316 : (MACRO)                        CALL    NONBL     ;IF ANY MORE DIGITS,
     633/     316 : D4                          SEP R4
     633/     317 : 02 AA                       dw NONBL
     634/     319 : C3 02 FB                       LBDF    NUMB      ;THEN DO IT AGAIN
     635/     31C : C0 02 2D            NHOP       LBR     NEXT      ;UNTIL DONE
     636/     31F :                     ;
     637/     31F : 9B                  MATCH      GHI     BP        ;SAVE PB IN CASE NO MATCH
     638/     320 : BA                             PHI     AC
     639/     321 : 8B                             GLO     BP
     640/     322 : AA                             PLO     AC
     641/     323 : (MACRO)             MAL        CALL    NONBL     ;GET A BYTE (IN CAPS)
     641/     323 : D4                          SEP R4
     641/     324 : 02 AA                       dw NONBL
     642/     326 :                     ;
     643/     326 : 1B                             INC     BP        ;COMPARE THEM
     644/     327 : 52                             STR     R2
     645/     328 : 49                             LDA     PC
     646/     329 : F3                             XOR
     647/     32A : 32 23                          BZ      MAL       ;STILL EQUAL
     648/     32C : FB 80                          XRI     80H       ;END?
     649/     32E : 32 1C                          BZ      NHOP      ;YES
     650/     330 : 9A                             GHI     AC        ;NO GOOD
     651/     331 : BB                             PHI     BP        ;PUT POINTER BACK
     652/     332 : 8A                             GLO     AC
     653/     333 : AB                             PLO     BP
     654/     334 : C0 02 A0            JHOP       LBR     HOP       ;THEN TAKE BRANCH
     655/     337 :                     ;
     656/     337 : (MACRO)             STEST      FETCH   MEND ;POINT TO PROGRAM END
     656/     337 : D7                          SEP R7
     656/     338 : 24                          db (MEND)&255
     657/     339 : 82                             GLO     R2        ;COMPARE TO STACK TOP
     658/     33A : F5                             SD
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 13 - 10/07/24 19:32:40


     659/     33B : 2D                             DEC     PZ
     660/     33C : 92                             GHI     R2
     661/     33D : 75                             SDB
     662/     33E : 33 7F                          BDF     ERR       ;AHA; OVERFLOW
     663/     340 : (MACRO)                        RETURN            ;ELSE ;EXIT
     663/     340 : D5                          SEP R5
     664/     341 :                     ;
     665/     341 : 49                  LIT1       LDA     PC        ;ONE BYTE
     666/     342 : 30 59                          BR      BPUSH
     667/     344 : 49                  LITN       LDA     PC        ;TWO BYTES
     668/     345 : BA                             PHI     AC        ;FIRST IS HIGH BYTE,
     669/     346 : 49                             LDA     PC        ;THEN LOW BYTE
     670/     347 : 30 55                          BR      APUSH+1   ;PUSH RESULT ONTO STACK
     671/     349 :                     ;
     672/     349 : (MACRO)             HOOK       CALL    HOOP      ;GO DO IT, LEAVE EXIT HERE
     672/     349 : D4                          SEP R4
     672/     34A : 06 25                       dw HOOP
     673/     34C : 30 55                          BR      APUSH+1   ;PUSH RESULT ONTO STACK
     674/     34E :                     ;
     675/     34E : (MACRO)             DUPS       CALL    APOP      ;POP 2 BYTES INTO AC
     675/     34E : D4                          SEP R4
     675/     34F : 02 C5                       dw APOP
     676/     351 : (MACRO)                        CALL    APUSH     ;THEN PUSH TWICE
     676/     351 : D4                          SEP R4
     676/     352 : 03 54                       dw APUSH
     677/     354 : 8A                  APUSH      GLO     AC        ;PUSH 2 BYTES
     678/     355 : (MACRO)                        CALL    BPUSH
     678/     355 : D4                          SEP R4
     678/     356 : 03 59                       dw BPUSH
     679/     358 : 9A                             GHI     AC
     680/     359 : 52                  BPUSH      STR     R2        ;PUSH ONE BYTE (IN D)
     681/     35A : (MACRO)                        FETCH   LEND ;CHECK FOR OVERFLOW
     681/     35A : D7                          SEP R7
     681/     35B : 19                          db (LEND)&255
     682/     35C : F7                             SM                ;COMPARE ;AEPTR TO LEND
     683/     35D : 33 7F                          BDF     ERR       ;OOPS!
     684/     35F : F8 01                          LDI     1
     685/     361 : F5                             SD
     686/     362 : 5D                             STR     PZ
     687/     363 : AD                             PLO     PZ
     688/     364 : 02                             LDN     R2        ;GET SAVED BYTE
     689/     365 : 5D                             STR     PZ        ;STORE INTO STACK
     690/     366 : (MACRO)             SEP5       RETURN            ;  & RETURN
     690/     366 : D5                          SEP R5
     691/     367 :                     ;
     692/     367 : (MACRO)             IND        CALL    BPOP      ;GET POINTER
     692/     367 : D4                          SEP R4
     692/     368 : 02 C9                       dw BPOP
     693/     36A : AD                             PLO     PZ
     694/     36B : 4D                             LDA     PZ        ;GET VARIABLE
     695/     36C : BA                             PHI     AC
     696/     36D : 4D                             LDA     PZ
     697/     36E : 30 55                          BR      APUSH+1   ;GO PUSH IT
     698/     370 :                     ;
     699/     370 : FB 2F               QUOTE      XRI     02Fh      ;TEST FOR QUOTE
     700/     372 : 32 66                          BZ      SEP5      ;IF QUOTE, GO EXIT
     701/     374 : FB 22                          XRI     022h      ;ELSE RESTORE CHARACTER
     702/     376 : (MACRO)                        CALL    TYPER
     702/     376 : D4                          SEP R4
     702/     377 : 03 F4                       dw TYPER
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 14 - 10/07/24 19:32:40


     703/     379 : 4B                  PRS        LDA     BP        ;GET NEXT BYTE
     704/     37A : FB 0D                          XRI     00Dh      ;IF NOT CARRIAGE RETURN,
     705/     37C : 3A 70                          BNZ     QUOTE     ;THEN CONTINUE
     706/     37E : 29                             DEC     PC        ;ELSE CONTINUE INTO ERROR
     707/     37F :                     ;
     708/     37F : (MACRO)             ERR        FETCH   XEQ       ;ERROR:
     708/     37F : D7                          SEP R7
     708/     380 : 18                          db (XEQ)&255
     709/     381 : B8                             PHI     XX        ;SAVE XEQ FLAG
     710/     382 : (MACRO)                        CALL    FORCE     ;TURN TAPE MODE OFF
     710/     382 : D4                          SEP R4
     710/     383 : 03 CC                       dw FORCE
     711/     385 : F8 21                          LDI     "!"       ;PRINT "!" ON NEW LINE
     712/     387 : (MACRO)                        CALL    TYPER
     712/     387 : D4                          SEP R4
     712/     388 : 03 F4                       dw TYPER
     713/     38A : (MACRO)                        FETCH   AIL
     713/     38A : D7                          SEP R7
     713/     38B : 1E                          db (AIL)&255
     714/     38C : 89                             GLO     PC        ;CONVERT IL PC TO ERROR#
     715/     38D : F7                             SM                ;BY ;SUBTRACTING
     716/     38E : AA                             PLO     AC        ;IL START FROM PC
     717/     38F : 99                             GHI     PC
     718/     390 : 2D                             DEC     PZ        ;X MUST POINT TO
     719/     391 : 77                             SMB               ;PAGE0 ;REGISTER PZ=RD
     720/     392 : BA                             PHI     AC
     721/     393 : (MACRO)                        CALL    PRNA      ;PRINT ERROR#
     721/     393 : D4                          SEP R4
     721/     394 : 04 15                       dw PRNA
     722/     396 : 98                             GHI     XX        ;GET XEQ FLAG
     723/     397 : 32 A9                          BZ      BELL      ;IF XEQ SET,
     724/     399 : F8 BD                          LDI     (ATMSG)&255 ;- THEN TYPE "AT"
     725/     39B : A9                             PLO     PC
     726/     39C : 93                             GHI     R3
     727/     39D : B9                             PHI     PC
     728/     39E : (MACRO)                        CALL    STRNG
     728/     39E : D4                          SEP R4
     728/     39F : 03 C5                       dw STRNG
     729/     3A1 : (MACRO)                        FETCH   LINO ;- GET LINE NUMBER
     729/     3A1 : D7                          SEP R7
     729/     3A2 : 28                          db (LINO)&255
     730/     3A3 : BA                             PHI     AC        ;- AND PRINT IT, TOO
     731/     3A4 : 4D                             LDA     PZ
     732/     3A5 : AA                             PLO     AC
     733/     3A6 : (MACRO)                        CALL    PRNA
     733/     3A6 : D4                          SEP R4
     733/     3A7 : 04 15                       dw PRNA
     734/     3A9 : F8 07               BELL       LDI     7         ;RING THE BELL
     735/     3AB : (MACRO)                        CALL    TYPEV
     735/     3AB : D4                          SEP R4
     735/     3AC : 01 09                       dw TYPEV
     736/     3AE : (MACRO)                        CALL    CRLF      ;PRINT <CR><LF>
     736/     3AE : D4                          SEP R4
     736/     3AF : 03 D5                       dw CRLF
     737/     3B1 : (MACRO)             FIN        FETCH   TTYCC-1
     737/     3B1 : D7                          SEP R7
     737/     3B2 : 1A                          db (TTYCC-1)&255
     738/     3B3 : (MACRO)                        LDI0              ;TURN TAPE MODE OFF
     738/     3B3 : 9D                          GHI RD 
     739/     3B4 : 5D                             STR     PZ
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 15 - 10/07/24 19:32:40


     740/     3B5 : (MACRO)             EXIT       FETCH   TOPS ;RESET STACK POINTER
     740/     3B5 : D7                          SEP R7
     740/     3B6 : 26                          db (TOPS)&255
     741/     3B7 : B2                             PHI     R2
     742/     3B8 : 4D                             LDA     PZ
     743/     3B9 : A2                             PLO     R2
     744/     3BA : C0 02 28                       LBR     IIL       ;RESTART IL FROM BEGINNING
     745/     3BD :                     ;
     746/     3BD : 20 41 54            ATMSG      DB      ' ','A','T' ;ERROR MESSAGE TEMPLATE
     747/     3C0 : 20 A3                          DB      ' ', 0A3H
     748/     3C2 :                     ;
     749/     3C2 : (MACRO)             TSTR       CALL    TYPER-2   ;PRINT CHARACTER STRING
     749/     3C2 : D4                          SEP R4
     749/     3C3 : 03 F2                       dw TYPER-2
     750/     3C5 : 49                  STRNG      LDA     PC        ;GET NEXT CHARACTER OF STRING
     751/     3C6 : FC 80                          ADI     080h      ;IF HI BIT=0,
     752/     3C8 : 3B C2                          BNF     TSTR      ;THEN GO PRINT & CONTINUE
     753/     3CA : 30 F2                          BR      TYPER-2   ;PRINT LAST CHAR AND EXIT
     754/     3CC :                     ;
     755/     3CC : (MACRO)             FORCE      FETCH   AEPTR-1
     755/     3CC : D7                          SEP R7
     755/     3CD : 19                          db (AEPTR-1)&255
     756/     3CE : F8 80                          LDI     AESTK     ;CLEAR A.E.STACK
     757/     3D0 : 73                             STXD
     758/     3D1 : (MACRO)                        LDI0              ;SET "NOT EXECUTING"
     758/     3D1 : 9D                          GHI RD 
     759/     3D2 : 73                             STXD              ;LEND=0 ZERO LINE LENGTH
     760/     3D3 : 73                             STXD              ;XEQ=0 NOT EXECUTING
     761/     3D4 : C8                             LSKP              ;CONTINUE TO CRLF
     762/     3D5 :                     ;
     763/     3D5 : (MACRO)             CRLF       FETCH   TTYCC ;GET COLUMN COUNT
     763/     3D5 : D7                          SEP R7
     763/     3D6 : 1B                          db (TTYCC)&255
     764/     3D7 : FE                             SHL               ;IF IN TAPE MODE (MSB=1),
     765/     3D8 : 33 66                          BDF     SEP5      ;THEN JUST EXIT
     766/     3DA : (MACRO)                        FETCH   PAD       ;GET # OF PAD CHARS
     766/     3DA : D7                          SEP R7
     766/     3DB : 15                          db (PAD)&255
     767/     3DC : AA                             PLO     AC        ;& SAVE IT
     768/     3DD : F8 0D                          LDI     00Dh      ;TYPE <CR>
     769/     3DF : (MACRO)             PADS       CALL    TYPEV
     769/     3DF : D4                          SEP R4
     769/     3E0 : 01 09                       dw TYPEV
     770/     3E2 : (MACRO)                        FETCH   TTYCC-1 ;POINT PZ TO COLUMN COUNTER
     770/     3E2 : D7                          SEP R7
     770/     3E3 : 1A                          db (TTYCC-1)&255
     771/     3E4 : 8A                             GLO     AC        ;GET # OF PADS TO GO
     772/     3E5 : FE                             SHL               ;MSB SELECTS NULL OR DELETE
     773/     3E6 : 32 EF                          BZ      PLF       ;UNTIL NO MORE PADS..
     774/     3E8 : 2A                             DEC     AC        ;DECREMENT # OF PADS TO GO
     775/     3E9 : (MACRO)                        LDI0              ;PAD=NULL=0 IF MSB=0
     775/     3E9 : 9D                          GHI RD 
     776/     3EA : C7                             LSNF
     777/     3EB : F8 FF                          LDI     0FFh      ;PAD=DELETE=FFH IF MSB=1
     778/     3ED : 30 DF                          BR      PADS      ;..REPEAT
     779/     3EF :                     ;
     780/     3EF : 73                  PLF        STXD              ;SET COLUMN COUNTER TTYCC=0
     781/     3F0 : F8 8A                          LDI     08Ah      ;TYPE <LF>
     782/     3F2 :                     ;
     783/     3F2 : FF 80                          SMI     080h      ;FIX HI BIT
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 16 - 10/07/24 19:32:40


     784/     3F4 : BF                  TYPER      PHI     X         ;SAVE CHAR
     785/     3F5 : (MACRO)                        FETCH   TTYCC ;CHECK OUTPUT MODE
     785/     3F5 : D7                          SEP R7
     785/     3F6 : 1B                          db (TTYCC)&255
     786/     3F7 : 2D                             DEC     PZ
     787/     3F8 : FC 81                          ADI     081h      ;INCREMENT COLUMN COUNTER TTYCC
     788/     3FA : FC 80                          ADI     080h      ;WITHOUT DISTURBING MSB
     789/     3FC : 3B 66                          BNF     SEP5      ;IF MSB=1, IN TAPE MODE, NOT PRINTIN
     790/     3FE : 5D                             STR     PZ        ;ELSE UPDATE COLUMN COUNTER
     791/     3FF : 9F                             GHI     X         ;GET CHAR
     792/     400 : C0 01 09                       LBR     TYPEV     ;AND GO TYPE IT
     793/     403 :                     ;
     794/     403 : F8 20               TAB        LDI     020h
     795/     405 : (MACRO)                        CALL    TYPER
     795/     405 : D4                          SEP R4
     795/     406 : 03 F4                       dw TYPER
     796/     408 : (MACRO)                        FETCH   TTYCC ;GET COLUMN COUNT
     796/     408 : D7                          SEP R7
     796/     409 : 1B                          db (TTYCC)&255
     797/     40A : FA 07               TABS       ANI     7          ;LOW 3 BITS
     798/     40C : 3A 03                          BNZ     TAB
     799/     40E : (MACRO)                        RETURN
     799/     40E : D5                          SEP R5
     800/     40F : (MACRO)                        CALL    TYPER
     800/     40F : D4                          SEP R4
     800/     410 : 03 F4                       dw TYPER
     801/     412 : 2A                             DEC     AC        ;DECREMENT SPACES TO GO
     802/     413 : 30 0A                          BR      TABS      ;...REPEAT
     803/     415 :                     ;
     804/     415 : (MACRO)             PRNA       CALL    APUSH     ;NUMBER IN AC
     804/     415 : D4                          SEP R4
     804/     416 : 03 54                       dw APUSH
     805/     418 : (MACRO)             PRN        FETCH   AEPTR ;CHECK SIGN
     805/     418 : D7                          SEP R7
     805/     419 : 1A                          db (AEPTR)&255
     806/     41A : AD                             PLO     PZ
     807/     41B : (MACRO)                        CALL    DNEG      ;IF NEGATIVE,
     807/     41B : D4                          SEP R4
     807/     41C : 05 13                       dw DNEG
     808/     41E : 3B 25                          BNF     PRP
     809/     420 : F8 2D                          LDI     '-'       ;PRINT '-'
     810/     422 : (MACRO)                        CALL    TYPER
     810/     422 : D4                          SEP R4
     810/     423 : 03 F4                       dw TYPER
     811/     425 : (MACRO)             PRP        LDI0              ;PUSH ZERO FLAG
     811/     425 : 9D                          GHI RD 
     812/     426 : 73                             STXD              ;WHICH ;MARKS NUMBER END
     813/     427 : BA                             PHI     AC        ;PUSh, 010h  (=DIVISOR)
     814/     428 : F8 0A                          LDI     10
     815/     42A : (MACRO)                        CALL    APUSH+1
     815/     42A : D4                          SEP R4
     815/     42B : 03 55                       dw APUSH+1
     816/     42D : 1D                             INC     PZ
     817/     42E : (MACRO)             PDVL       CALL    PDIV      ;DIVIDE BY 10
     817/     42E : D4                          SEP R4
     817/     42F : 04 E3                       dw PDIV
     818/     431 : 8A                             GLO     AC        ;REMAINDER IS NEXT DIGIT
     819/     432 : F6                             SHR               ;BUT ;DOUBLED; HALVE IT
     820/     433 : F9 30                          ORI     030h      ;CONVERT TO ASCII
     821/     435 : 73                             STXD              ;PUSH ;IT
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 17 - 10/07/24 19:32:40


     822/     436 : 1D                             INC     PZ        ;IS QUOTIENT=0?
     823/     437 : 4D                             LDA     PZ
     824/     438 : ED                             SEX     PZ
     825/     439 : F1                             OR
     826/     43A : 2D                             DEC     PZ        ;RESTORE POINTER
     827/     43B : 2D                             DEC     PZ
     828/     43C : 3A 2E                          BNZ     PDVL      ;..REPEAT
     829/     43E : 12                  PRNL       INC     R2        ;NOW, TO PRINT IT
     830/     43F : 02                             LDN     R2        ;GET CHAR
     831/     440 : C2 02 C2                       LBZ     APOP-3    ;UNTIL ZERO (END FLAG)..
     832/     443 : (MACRO)                        CALL    TYPER     ;PRINT IT
     832/     443 : D4                          SEP R4
     832/     444 : 03 F4                       dw TYPER
     833/     446 : 30 3E                          BR      PRNL      ;..REPEAT
     834/     448 :                     ;
     835/     448 : (MACRO)             RSBP       FETCH   SP        ;GET SP
     835/     448 : D7                          SEP R7
     835/     449 : 2E                          db (SP)&255
     836/     44A : 38                             SKP
     837/     44B : 9B                  SVBP       GHI     BP        ;GET BP
     838/     44C : FB 00                          XRI     (LINE)>>8 ;IN THE LINE?
     839/     44E : 3A 5E                          BNZ     SWAP      ;NO, NOT IN SAME PAGE
     840/     450 : 8B                             GLO     BP
     841/     451 : 52                             STR     R2
     842/     452 : F0                             LDX
     843/     453 : FF 80                          SMI     (AESTK)&255
     844/     455 : 33 5E                          BDF     SWAP      ;NO, BEYOND ITS END
     845/     457 : (MACRO)                        FETCH   SP
     845/     457 : D7                          SEP R7
     845/     458 : 2E                          db (SP)&255
     846/     459 : 8B                             GLO     BP        ;YES, JUST COPY BP TO SP
     847/     45A : 73                             STXD
     848/     45B : 9B                             GHI     BP
     849/     45C : 5D                             STR     PZ
     850/     45D : (MACRO)             TYX        RETURN
     850/     45D : D5                          SEP R5
     851/     45E :                     ;
     852/     45E : (MACRO)             SWAP       FETCH   SP        ;EXCHANGE BP AND SP
     852/     45E : D7                          SEP R7
     852/     45F : 2E                          db (SP)&255
     853/     460 : B8                             PHI     XX        ;PUT SP IN TEMP
     854/     461 : 0D                             LDN     PZ
     855/     462 : A8                             PLO     XX
     856/     463 : 8B                             GLO     BP        ;STORE BP IN SP
     857/     464 : 73                             STXD
     858/     465 : 9B                             GHI     BP
     859/     466 : 5D                             STR     PZ
     860/     467 : 98                             GHI     XX        ;STORE TEMP IN BP
     861/     468 : BB                             PHI     BP
     862/     469 : 88                             GLO     XX
     863/     46A : AB                             PLO     BP
     864/     46B : (MACRO)                        RETURN
     864/     46B : D5                          SEP R5
     865/     46C :                     ;
     866/     46C : (MACRO)             CMPR       CALL    APOP      ;GET FIRST NUMBER
     866/     46C : D4                          SEP R4
     866/     46D : 02 C5                       dw APOP
     867/     46F : 9A                             GHI     AC        ;PUSH ONTO STACK WITH BIAS
     868/     470 : FB 80                          XRI     080h      ;(FOR 2'S COMPLEMENT)
     869/     472 : 73                             STXD              ;(BACKWARDS)
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 18 - 10/07/24 19:32:40


     870/     473 : 8A                             GLO     AC
     871/     474 : 73                             STXD
     872/     475 : (MACRO)                        CALL    BPOP      ;GET AND SAVE
     872/     475 : D4                          SEP R4
     872/     476 : 02 C9                       dw BPOP
     873/     478 : AF                             PLO     X         ;COMPARE BITS
     874/     479 : (MACRO)                        CALL    APOP      ;GET SECOND NUMBER
     874/     479 : D4                          SEP R4
     874/     47A : 02 C5                       dw APOP
     875/     47C : 12                             INC     R2
     876/     47D : 8A                             GLO     AC        ;COMARE THEM
     877/     47E : F7                             SM                ;LOW BYTE
     878/     47F : AA                             PLO     AC
     879/     480 : 12                             INC     R2
     880/     481 : 9A                             GHI     AC        ;HIGH BYTE
     881/     482 : FB 80                          XRI     080h      ;BIAS: 0 TO 65535 INSTEAD
     882/     484 : 77                             SMB               ;OF -32768 TO +32767
     883/     485 : 52                             STR     R2
     884/     486 : 3B 92                          BNF     CLT       ;LESS IF NO CARRY OUT
     885/     488 : 8A                             GLO     AC
     886/     489 : F1                             OR
     887/     48A : 32 8F                          BZ      CEQ       ;EQUAL IF BOTH BYTES 0
     888/     48C : 8F                             GLO     X         ;ELSE GREATER
     889/     48D : F6                             SHR               ;MOVE PROPER BIT
     890/     48E : 38                             SKP
     891/     48F : 8F                  CEQ        GLO     X         ;(BIT 1)
     892/     490 : F6                             SHR
     893/     491 : 38                             SKP
     894/     492 : 8F                  CLT        GLO     X         ;(BIT 0)
     895/     493 : F6                             SHR               ;TO CARRY
     896/     494 : C7                             LSNF
     897/     495 : C4                             NOP
     898/     496 : 19                  SKIP       INC     PC        ;SKIP ONE BYTE IF TRUE
     899/     497 : (MACRO)                        RETURN
     899/     497 : D5                          SEP R5
     900/     498 :                     ;
     901/     498 : (MACRO)             ISUB       CALL    INEG      ;SUBTRACT IS ADD NEGATIVE
     901/     498 : D4                          SEP R4
     901/     499 : 05 0E                       dw INEG
     902/     49B : (MACRO)             IADD       CALL    APOP      ;PUT ADDEND IN AC
     902/     49B : D4                          SEP R4
     902/     49C : 02 C5                       dw APOP
     903/     49E : ED                             SEX     PZ
     904/     49F : 1D                             INC     PZ        ;ADD TO AUGEND
     905/     4A0 : 8A                             GLO     AC
     906/     4A1 : F4                             ADD
     907/     4A2 : 73                             STXD
     908/     4A3 : 9A                             GHI     AC        ;CARRY INTO HIGH BYTE
     909/     4A4 : 74                             ADC
     910/     4A5 : 5D                             STR     PZ
     911/     4A6 : (MACRO)                        RETURN
     911/     4A6 : D5                          SEP R5
     912/     4A7 :                     ;
     913/     4A7 : (MACRO)             IMUL       CALL    APOP      ;MULTIPLIER IN AC
     913/     4A7 : D4                          SEP R4
     913/     4A8 : 02 C5                       dw APOP
     914/     4AA : F8 10                          LDI     010h      ;BIT COUNTER IN X
     915/     4AC : AF                             PLO     X
     916/     4AD : 4D                             LDA     PZ        ;MULTIPLICAND IN XX
     917/     4AE : B8                             PHI     XX
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 19 - 10/07/24 19:32:40


     918/     4AF : 0D                             LDN     PZ
     919/     4B0 : A8                             PLO     XX
     920/     4B1 : 0D                  MULL       LDN     PZ        ;SHIFT PRODUCT LEFT
     921/     4B2 : FE                             SHL               ;(ON STACK)
     922/     4B3 : 5D                             STR     PZ
     923/     4B4 : 2D                             DEC     PZ
     924/     4B5 : 0D                             LDN     PZ
     925/     4B6 : 7E                             SHLC              ;DISCARD HIGh, 016h  BITS
     926/     4B7 : 5D                             STR     PZ
     927/     4B8 : (MACRO)                        CALL    SHAL      ;GET A BIT
     927/     4B8 : D4                          SEP R4
     927/     4B9 : 05 22                       dw SHAL
     928/     4BB : 3B C5                          BNF     MULC      ;NOT THIS TIME
     929/     4BD : ED                             SEX     PZ        ;IF MULTIPLIER BIT=1,
     930/     4BE : 1D                             INC     PZ
     931/     4BF : 88                             GLO     XX        ;ADD MULTIPLICAND
     932/     4C0 : F4                             ADD
     933/     4C1 : 73                             STXD
     934/     4C2 : 98                             GHI     XX
     935/     4C3 : 74                             ADC
     936/     4C4 : 5D                             STR     PZ
     937/     4C5 : 2F                  MULC       DEC     X         ;REPEAT 16 TIMES
     938/     4C6 : 8F                             GLO     X
     939/     4C7 : 1D                             INC     PZ
     940/     4C8 : 3A B1                          BNZ     MULL
     941/     4CA : (MACRO)                        RETURN
     941/     4CA : D5                          SEP R5
     942/     4CB :                     ;
     943/     4CB : (MACRO)             IDIV       CALL    APOP      ;GET DIVISOR
     943/     4CB : D4                          SEP R4
     943/     4CC : 02 C5                       dw APOP
     944/     4CE : 9A                             GHI     AC
     945/     4CF : 52                             STR     R2        ;CHECK FOR DIVIDE BY ZERO
     946/     4D0 : 8A                             GLO     AC
     947/     4D1 : F1                             OR
     948/     4D2 : C2 03 7F                       LBZ     ERR       ;IF YES, FORGET IT
     949/     4D5 : 0D                             LDN     PZ        ;COMPARE SIGN OF DIVISOR
     950/     4D6 : F3                             XOR
     951/     4D7 : 73                             STXD              ;SAVE FOR LATER
     952/     4D8 : (MACRO)                        CALL    DNEG      ;MAKE DIVEDEND POSITIVE
     952/     4D8 : D4                          SEP R4
     952/     4D9 : 05 13                       dw DNEG
     953/     4DB : 2D                             DEC     PZ        ;SAME FOR DIVISOR
     954/     4DC : 2D                             DEC     PZ
     955/     4DD : (MACRO)                        CALL    DNEG
     955/     4DD : D4                          SEP R4
     955/     4DE : 05 13                       dw DNEG
     956/     4E0 : 1D                             INC     PZ
     957/     4E1 : (MACRO)                        LDI0        
     957/     4E1 : 9D                          GHI RD 
     958/     4E2 : C8                             LSKP
     959/     4E3 : (MACRO)             PDIV       LDI0              ;MARK "NO SIGN CHANGE"
     959/     4E3 : 9D                          GHI RD 
     960/     4E4 : 73                             STXD              ;FOR PRN ENTRY
     961/     4E5 : AA                             PLO     AC        ;CLEAR HIGH END
     962/     4E6 : BA                             PHI     AC        ;OF DIVIDEND IN AC
     963/     4E7 : F8 11                          LDI     17        ;COUNTER TO X
     964/     4E9 : AF                             PLO     X
     965/     4EA : ED                  DIVL       SEX     PZ        ;DO TRIAL SUBTRACT
     966/     4EB : 8A                             GLO     AC
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 20 - 10/07/24 19:32:40


     967/     4EC : F7                             SM
     968/     4ED : 52                             STR     R2        ;HOLD LOW BYTE FOR NOW
     969/     4EE : 2D                             DEC     PZ
     970/     4EF : 9A                             GHI     AC
     971/     4F0 : 77                             SMB
     972/     4F1 : 3B F6                          BNF     $+5       ;IF NEGATIVE, CANCEL  IT
     973/     4F3 : BA                             PHI     AC        ;IF POSITIVE, MAKE IT REAL
     974/     4F4 : 02                             LDN     R2
     975/     4F5 : AA                             PLO     AC
     976/     4F6 : 1D                             INC     PZ        ;SHIFT EVERYTHING LEFT
     977/     4F7 : 1D                             INC     PZ
     978/     4F8 : 1D                             INC     PZ
     979/     4F9 : F0                             LDX
     980/     4FA : 7E                             SHLC
     981/     4FB : 73                             STXD
     982/     4FC : F0                             LDX
     983/     4FD : 7E                             SHLC
     984/     4FE : 73                             STXD
     985/     4FF : 8A                             GLO     AC        ;HIGh, 016h 
     986/     500 : 7E                             SHLC
     987/     501 : (MACRO)                        CALL    SHCL
     987/     501 : D4                          SEP R4
     987/     502 : 05 24                       dw SHCL
     988/     504 : 2F                             DEC     X         ;DO IT 16 TIMES MORE
     989/     505 : 8F                             GLO     X
     990/     506 : CA 04 EA                       LBNZ    DIVL
     991/     509 : 12                             INC     R2        ;CHECK SIGN OF QUOTIENT
     992/     50A : 02                             LDN     R2
     993/     50B : FE                             SHL
     994/     50C : 3B 21                          BNF     NEGX      ;POSITIVE IS DONE
     995/     50E : (MACRO)             INEG       FETCH   AEPTR ;POINT TO STACK
     995/     50E : D7                          SEP R7
     995/     50F : 1A                          db (AEPTR)&255
     996/     510 : AD                             PLO     PZ
     997/     511 : 30 18                          BR      NEG
     998/     513 : ED                  DNEG       SEX     PZ
     999/     514 : F0                             LDX               ;FOR DIVIDE,
    1000/     515 : FE                             SHL               ;TEST SIGN
    1001/     516 : 3B 21                          BNF     NEGX      ;IF POSITIVE, LEAVE IT ALONE
    1002/     518 : 1D                  NEG        INC     PZ        ;IF NEGATIVE,
    1003/     519 : (MACRO)                        LDI0              ;SUBTRACT IT FROM 0
    1003/     519 : 9D                          GHI RD 
    1004/     51A : F7                             SM
    1005/     51B : 73                             STXD
    1006/     51C : (MACRO)                        LDI0        
    1006/     51C : 9D                          GHI RD 
    1007/     51D : 77                             SMB
    1008/     51E : 5D                             STR     PZ
    1009/     51F : FF 00                          SMI     0         ;AND SET CARRY=1
    1010/     521 : (MACRO)             NEGX       RETURN
    1010/     521 : D5                          SEP R5
    1011/     522 :                     ;
    1012/     522 : 8A                  SHAL       GLO     AC        ;USED BY MULTIPLY
    1013/     523 : FE                             SHL
    1014/     524 : AA                  SHCL       PLO     AC        ;AND DIVIDE
    1015/     525 : 9A                             GHI     AC
    1016/     526 : 7E                             SHLC
    1017/     527 : BA                             PHI     AC
    1018/     528 : (MACRO)                        RETURN
    1018/     528 : D5                          SEP R5
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 21 - 10/07/24 19:32:40


    1019/     529 :                     ;
    1020/     529 : (MACRO)             NXT        FETCH   XEQ       ;IF DIRECT EXECUTION
    1020/     529 : D7                          SEP R7
    1020/     52A : 18                          db (XEQ)&255
    1021/     52B : C2 03 B1                       LBZ     FIN       ;QUIT WITh, 0DFh =0
    1022/     52E : 4B                  -          LDA     BP        ;ELSE SCAN TO NEXT <CR>
    1023/     52F : FB 0D                          XRI     00Dh
    1024/     531 : 3A 2E                          BNZ     -
    1025/     533 : (MACRO)                        CALL    GLINO     ;GET LINE NUMBER
    1025/     533 : D4                          SEP R4
    1025/     534 : 06 98                       dw GLINO
    1026/     536 : 32 4B                          BZ      BERR      ;ZERO IS ERROR
    1027/     538 : (MACRO)             CONT       CALL    BREAKV    ;TEST FOR BREAK
    1027/     538 : D4                          SEP R4
    1027/     539 : 01 0C                       dw BREAKV
    1028/     53B : 33 46                          BDF     BREAK     ;IF BREAK,
    1029/     53D : (MACRO)                        FETCH   NXA       ;RECOVER RESTART POINT
    1029/     53D : D7                          SEP R7
    1029/     53E : 1C                          db (NXA)&255
    1030/     53F : B9                             PHI     PC        ;WHICH WAS SAVED BY INIT
    1031/     540 : 4D                             LDA     PZ
    1032/     541 : A9                             PLO     PC
    1033/     542 : (MACRO)             RUN        FETCH   XEQ-1 ;TURN OFF RUN MODE
    1033/     542 : D7                          SEP R7
    1033/     543 : 17                          db (XEQ-1)&255
    1034/     544 : 5D                             STR     PZ         ;(NON-ZERO)
    1035/     545 : (MACRO)                        RETURN
    1035/     545 : D5                          SEP R5
    1036/     546 :                     ;
    1037/     546 : (MACRO)             BREAK      FETCH   AIL       ;SET BREAK ADDR=0
    1037/     546 : D7                          SEP R7
    1037/     547 : 1E                          db (AIL)&255
    1038/     548 : B9                             PHI     PC        ;I.E. PC=IL START
    1039/     549 : 4D                             LDA     PZ
    1040/     54A : A9                             PLO     PC
    1041/     54B : C0 03 7F            BERR       LBR     ERR
    1042/     54E :                     ;
    1043/     54E : (MACRO)             XINIT      FETCH   BASIC ;POINT TO START OF BASIC PROGRAM
    1043/     54E : D7                          SEP R7
    1043/     54F : 20                          db (BASIC)&255
    1044/     550 : BB                             PHI     BP
    1045/     551 : 4D                             LDA     PZ
    1046/     552 : AB                             PLO     BP
    1047/     553 : (MACRO)                        CALL    GLINO     ;GET LINE NUMBER
    1047/     553 : D4                          SEP R4
    1047/     554 : 06 98                       dw GLINO
    1048/     556 : 32 4B                          BZ      BERR      ;IF 0, IS ERROR (NO PROGRAM)
    1049/     558 : (MACRO)                        FETCH   NXA       ;SAVE STATEMENT
    1049/     558 : D7                          SEP R7
    1049/     559 : 1C                          db (NXA)&255
    1050/     55A : 89                             GLO     PC        ;ANALYZER ADDRESS
    1051/     55B : 73                             STXD
    1052/     55C : 99                             GHI     PC
    1053/     55D : 5D                             STR     PZ
    1054/     55E : 30 42                          BR      RUN       ;GO START UP
    1055/     560 :                     ;
    1056/     560 : (MACRO)             XFER       CALL    FIND      ;GET THE LINE
    1056/     560 : D4                          SEP R4
    1056/     561 : 05 FE                       dw FIND
    1057/     563 : 32 38                          BZ      CONT      ;IF WE GOT IT, GO CONTINUE
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 22 - 10/07/24 19:32:40


    1058/     565 : (MACRO)             GOAL       FETCH   LINO ;ELSE FAILED
    1058/     565 : D7                          SEP R7
    1058/     566 : 28                          db (LINO)&255
    1059/     567 : 8A                             GLO     AC        ;MARK DESTINATION
    1060/     568 : 73                             STXD
    1061/     569 : 9A                             GHI     AC
    1062/     56A : 5D                             STR     PZ
    1063/     56B : 30 4B                          BR      BERR      ;GO HANDLE ERROR
    1064/     56D :                     ;
    1065/     56D : (MACRO)             RSTR       CALL    TTOP      ;CHECK FOR UNDERFLOW
    1065/     56D : D4                          SEP R4
    1065/     56E : 05 8B                       dw TTOP
    1066/     570 : 42                             LDA     R2        ;GET THE NUMBER
    1067/     571 : BA                             PHI     AC        ;FROM STACK INTO AC
    1068/     572 : 02                             LDN     R2
    1069/     573 : AA                             PLO     AC
    1070/     574 : (MACRO)                        FETCH   TOPS
    1070/     574 : D7                          SEP R7
    1070/     575 : 26                          db (TOPS)&255
    1071/     576 : 82                             GLO     R2        ;RESET TOPS FROM R2
    1072/     577 : 73                             STXD
    1073/     578 : 92                             GHI     R2
    1074/     579 : 73                             STXD
    1075/     57A : (MACRO)                        CALL    FIND+3    ;POINT TO THIS LINE
    1075/     57A : D4                          SEP R4
    1075/     57B : 06 01                       dw FIND+3
    1076/     57D : 3A 65                          BNZ     GOAL      ;NOT THERE ANY MORE
    1077/     57F : 30 88                          BR      BNEXT     ;OK
    1078/     581 :                     ;
    1079/     581 : (MACRO)             RTN        CALL    TTOP      ;CHECK FOR UNDERFLOW
    1079/     581 : D4                          SEP R4
    1079/     582 : 05 8B                       dw TTOP
    1080/     584 : 42                             LDA     R2        ;(2 ALREADY INCLUDED)
    1081/     585 : B9                             PHI     PC        ;PIP ADDRESS TO PC
    1082/     586 : 02                             LDN     R2
    1083/     587 : A9                             PLO     PC
    1084/     588 : C0 02 2D            BNEXT      LBR     NEXT
    1085/     58B :                     ;
    1086/     58B : (MACRO)             TTOP       FETCH   STACK ;GET TOP OF STACK
    1086/     58B : D7                          SEP R7
    1086/     58C : 22                          db (STACK)&255
    1087/     58D : 12                             INC     R2
    1088/     58E : 12                             INC     R2
    1089/     58F : 82                             GLO     R2        ;MATCH TO STACK POINTER
    1090/     590 : FC 02                          ADI     2         ;(ADJUSTED FOR RETURN)
    1091/     592 : F3                             XOR
    1092/     593 : 2D                             DEC     PZ
    1093/     594 : 3A 9C                          BNZ     TTOK      ;NOT EQUAL
    1094/     596 : 92                             GHI     R2
    1095/     597 : 7C 00                          ADCI    0
    1096/     599 : F3                             XOR
    1097/     59A : 32 4B                          BZ      BERR      ;MATCH IS EMPTY STACK
    1098/     59C :                     ;
    1099/     59C : 12                  TTOK       INC     R2        ;(ONCE HERE SAVES TWICE)
    1100/     59D : (MACRO)                        RETURN
    1100/     59D : D5                          SEP R5
    1101/     59E :                     ;
    1102/     59E : (MACRO)             TAPE       FETCH   PAD+1 ;TURN OFF TYPEOUT
    1102/     59E : D7                          SEP R7
    1102/     59F : 16                          db (PAD+1)&255
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 23 - 10/07/24 19:32:40


    1103/     5A0 : 38                             SKP
    1104/     5A1 : (MACRO)             NTAPE      LDI0              ;TURN ON TYPEOUT
    1104/     5A1 : 9D                          GHI RD 
    1105/     5A2 : FE                             SHL               ;(FLAG TO CARRY)
    1106/     5A3 : (MACRO)                        FETCH   TTYCC-1
    1106/     5A3 : D7                          SEP R7
    1106/     5A4 : 1A                          db (TTYCC-1)&255
    1107/     5A5 : (MACRO)                        LDI0        
    1107/     5A5 : 9D                          GHI RD 
    1108/     5A6 : 76                             SHRC              ;00 OR 80H
    1109/     5A7 : 5D                             STR     PZ
    1110/     5A8 : 30 B2                          BR      KLOOP
    1111/     5AA : F8 30               GETLN      LDI     (LINE)&255  ;POINT TO LINE
    1112/     5AC : AB                             PLO     BP
    1113/     5AD : (MACRO)                        CALL    APUSH     ;MARK STACK LIMIT
    1113/     5AD : D4                          SEP R4
    1113/     5AE : 03 54                       dw APUSH
    1114/     5B0 : 9D                             GHI     PZ
    1115/     5B1 : BB                             PHI     BP
    1116/     5B2 : (MACRO)             KLOOP      CALL    KEYV      ;GET AN ECHOED BYTE
    1116/     5B2 : D4                          SEP R4
    1116/     5B3 : 01 06                       dw KEYV
    1117/     5B5 : FA 7F                          ANI     7FH       ;SET HIGH BIT TO 0
    1118/     5B7 : 32 B2                          BZ      KLOOP     ;IGNORE NULL
    1119/     5B9 : 52                             STR     R2
    1120/     5BA : FB 7F                          XRI     07Fh
    1121/     5BC : 32 B2                          BZ      KLOOP     ;IGNORE DELETE
    1122/     5BE : FB 75                          XRI     075h      ;IF <LF>,
    1123/     5C0 : 32 9E                          BZ      TAPE      ;THEN TURN TAPE MODE ON
    1124/     5C2 : FB 19                          XRI     019h      ;IF <XOFF> (DC3=13H),
    1125/     5C4 : 32 A1                          BZ      NTAPE     ;THEN TURN TAPE MODE OFF
    1126/     5C6 : (MACRO)                        FETCH   CAN-1
    1126/     5C6 : D7                          SEP R7
    1126/     5C7 : 13                          db (CAN-1)&255
    1127/     5C8 : 02                             LDN     R2
    1128/     5C9 : F3                             XOR               ;IF CANCEL,
    1129/     5CA : 32 D7                          BZ      CANCL     ;THEN GO TO CANCEL
    1130/     5CC : 2D                             DEC     PZ
    1131/     5CD : 02                             LDN     R2
    1132/     5CE : F3                             XOR
    1133/     5CF : 3A DD                          BNZ     STOK      ;NO
    1134/     5D1 : 2B                             DEC     BP        ;YES
    1135/     5D2 : 8B                             GLO     BP
    1136/     5D3 : FF 30                          SMI     (LINE)&255  ;ANYTHING LEFT?
    1137/     5D5 : 33 B2                          BDF     KLOOP       ;YES
    1138/     5D7 : F8 30               CANCL      LDI     (LINE)&255  ;IF NO, CANCEL THIS LINE
    1139/     5D9 : AB                             PLO     BP
    1140/     5DA : F8 0D                          LDI     00Dh      ;BY FORCING A <CR>
    1141/     5DC : 38                             SKP
    1142/     5DD : 02                  STOK       LDN     R2        ;STORE CHARACTER IN LINE
    1143/     5DE : 5B                             STR     BP
    1144/     5DF : (MACRO)                        FETCH   AEPTR-1
    1144/     5DF : D7                          SEP R7
    1144/     5E0 : 19                          db (AEPTR-1)&255
    1145/     5E1 : 8B                             GLO     BP        ;CHECK FOR OVERFLOW
    1146/     5E2 : F7                             SM
    1147/     5E3 : 3B EC                          BNF     CHIN      ;OK
    1148/     5E5 : F8 07                          LDI     7         ;IF NOT, RING BELL
    1149/     5E7 : (MACRO)                        CALL    TYPER
    1149/     5E7 : D4                          SEP R4
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 24 - 10/07/24 19:32:40


    1149/     5E8 : 03 F4                       dw TYPER
    1150/     5EA : 0B                             LDN     BP        ;NOW LOOK AT CHAR
    1151/     5EB : 38                             SKP
    1152/     5EC : 4B                  CHIN       LDA     BP        ;INCREMENT POINTER
    1153/     5ED : FB 0D                          XRI     00Dh      ;IF NOT <CR>,
    1154/     5EF : 3A B2                          BNZ     KLOOP     ;THEN GET ANOTHER
    1155/     5F1 : (MACRO)                        CALL    CRLF      ;ELSE ECHO <LF>
    1155/     5F1 : D4                          SEP R4
    1155/     5F2 : 03 D5                       dw CRLF
    1156/     5F4 : (MACRO)                        FETCH   LEND-1 ;AND MARK END
    1156/     5F4 : D7                          SEP R7
    1156/     5F5 : 18                          db (LEND-1)&255
    1157/     5F6 : 8B                             GLO     BP
    1158/     5F7 : 5D                             STR     PZ
    1159/     5F8 : F8 30                          LDI     (LINE)&255  ;RESET BP TO FRONT
    1160/     5FA : AB                             PLO     BP
    1161/     5FB : C0 02 C5                       LBR     APOP      ;AND GO POP DUMMY
    1162/     5FE :                     ;
    1163/     5FE : (MACRO)             FIND       CALL    APOP      ;GET LINE NUMBER
    1163/     5FE : D4                          SEP R4
    1163/     5FF : 02 C5                       dw APOP
    1164/     601 : 8A                             GLO     AC
    1165/     602 : 52                             STR     R2        ;CHECK FOR ZERO
    1166/     603 : 9A                             GHI     AC
    1167/     604 : F1                             OR
    1168/     605 : C2 03 7F                       LBZ     ERR       ;IF 0, GO TO ERROR
    1169/     608 : (MACRO)             FINDX      FETCH   BASIC ;START AT FRONT
    1169/     608 : D7                          SEP R7
    1169/     609 : 20                          db (BASIC)&255
    1170/     60A : BB                             PHI     BP
    1171/     60B : 4D                             LDA     PZ
    1172/     60C : AB                             PLO     BP
    1173/     60D : (MACRO)             FLINE      CALL    GLINO     ;GET LINE NUMBER
    1173/     60D : D4                          SEP R4
    1173/     60E : 06 98                       dw GLINO
    1174/     610 : C6                             LSNZ              ;NOT THER IF 0
    1175/     611 : 8D                             GLO     PZ        ;SET NON-ZERO,
    1176/     612 : (MACRO)             FEND       RETURN            ;AND RETURN
    1176/     612 : D5                          SEP R5
    1177/     613 : ED                             SEX     PZ
    1178/     614 : 8A                             GLO     AC        ;COMPARE THEM
    1179/     615 : F5                             SD
    1180/     616 : 52                             STR     R2        ;(SAVE LOW BYTE OF DIFFERENCE)
    1181/     617 : 9A                             GHI     AC
    1182/     618 : 2D                             DEC     PZ
    1183/     619 : 75                             SDB
    1184/     61A : E2                             SEX     R2
    1185/     61B : F1                             OR                ;(D=0 IF EQUAL)
    1186/     61C : 33 12                          BDF     FEND      ;LESS OR EQUAL IS END
    1187/     61E : 4B                             LDA     BP        ;NOT THERE YET
    1188/     61F : FB 0D                          XRI     00Dh      ;SCAN TO NEXT <CR>
    1189/     621 : 3A 1E                          BNZ     $-3
    1190/     623 : 30 0D                          BR      FLINE
    1191/     625 :                     ;
    1192/     625 : (MACRO)             HOOP       CALL    HOOP+3    ;ADJUST STACK
    1192/     625 : D4                          SEP R4
    1192/     626 : 06 28                       dw HOOP+3
    1193/     628 : (MACRO)                        CALL    APOP      ;SET UP PARAMETERS:
    1193/     628 : D4                          SEP R4
    1193/     629 : 02 C5                       dw APOP
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 25 - 10/07/24 19:32:40


    1194/     62B : 4D                             LDA     PZ        ;AC
    1195/     62C : B8                             PHI     XX        ;MIDDLE ARGUMENT TO XX
    1196/     62D : 4D                             LDA     PZ
    1197/     62E : A8                             PLO     XX
    1198/     62F : 4D                             LDA     PZ        ;SUBROUTINE ADDRESS BECOMES
    1199/     630 : B6                             PHI     R6        ;"RETURN ADDRESS"
    1200/     631 : 4D                             LDA     PZ
    1201/     632 : A6                             PLO     R6
    1202/     633 : 8D                             GLO     PZ        ;FIX STACK POINTER
    1203/     634 : 52                             STR     R2
    1204/     635 : (MACRO)                        FETCH   AEPTR-1
    1204/     635 : D7                          SEP R7
    1204/     636 : 19                          db (AEPTR-1)&255
    1205/     637 : 02                             LDN     R2        ;BY PUTTING CURRENT VALUE
    1206/     638 : 5D                             STR     PZ        ;VALUE BACK INTO IT
    1207/     639 : AD                             PLO     PZ        ;LEAVE PZ AT STACK TOP
    1208/     63A : 8A                             GLO     AC        ;LEAVE AC.0 IN D
    1209/     63B : (MACRO)                        RETURN              GO ;DO IT
    1209/     63B : D5                          SEP R5
    1210/     63C :                     ;
    1211/     63C : (MACRO)             LIST       FETCH   WORK+2
    1211/     63C : D7                          SEP R7
    1211/     63D : 2C                          db (WORK+2)&255
    1212/     63E : 8B                             GLO     BP        ;SAVE POINTERS
    1213/     63F : 73                             STXD
    1214/     640 : 9B                             GHI     BP
    1215/     641 : 5D                             STR     PZ
    1216/     642 : (MACRO)                        CALL    FIND      ;GET LIST LIMITS
    1216/     642 : D4                          SEP R4
    1216/     643 : 05 FE                       dw FIND
    1217/     645 : (MACRO)                        FETCH   WORK ;SAVE UPPER
    1217/     645 : D7                          SEP R7
    1217/     646 : 2A                          db (WORK)&255
    1218/     647 : 8B                             GLO     BP
    1219/     648 : 73                             STXD
    1220/     649 : 9B                             GHI     BP
    1221/     64A : 73                             STXD
    1222/     64B : (MACRO)                        CALL    FIND      ;TWO ITEMS MARK BOUNDS
    1222/     64B : D4                          SEP R4
    1222/     64C : 05 FE                       dw FIND
    1223/     64E : 2B                             DEC     BP        ;BACK UP OVER LINE#
    1224/     64F : 2B                             DEC     BP
    1225/     650 : (MACRO)             LLINE      FETCH   WORK ;END?
    1225/     650 : D7                          SEP R7
    1225/     651 : 2A                          db (WORK)&255
    1226/     652 : 8B                             GLO     BP
    1227/     653 : F7                             SM
    1228/     654 : 2D                             DEC     PZ
    1229/     655 : 9B                             GHI     BP
    1230/     656 : 77                             SMB
    1231/     657 : 33 7B                          BDF     LIX       ;SO IF BP>BOUNDS,
    1232/     659 : 4B                             LDA     BP        ;GET LINE#
    1233/     65A : BA                             PHI     AC
    1234/     65B : 4B                             LDA     BP
    1235/     65C : AA                             PLO     AC
    1236/     65D : 3A 62                          BNZ     $+5
    1237/     65F : 9A                             GHI     AC
    1238/     660 : 32 7B                          BZ      LIX       ;QUIT IF ZERO (PROGRAM END)
    1239/     662 : (MACRO)                        CALL    PRNA      ;ELSE PRINT LINE#
    1239/     662 : D4                          SEP R4
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 26 - 10/07/24 19:32:40


    1239/     663 : 04 15                       dw PRNA
    1240/     665 : F8 2D                          LDI     02Dh      ;THEN A SPACE
    1241/     667 : FB 0D               LLOOP      XRI     00Dh      ;(RESTORE BITS FROM <CR> TEST)
    1242/     669 : (MACRO)                        CALL    TYPER
    1242/     669 : D4                          SEP R4
    1242/     66A : 03 F4                       dw TYPER
    1243/     66C : (MACRO)                        CALL    BREAKV    ;TEST FOR BREAK
    1243/     66C : D4                          SEP R4
    1243/     66D : 01 0C                       dw BREAKV
    1244/     66F : 33 7B                          BDF     LIX       ;IF YES, THEN QUIT
    1245/     671 : 4B                             LDA     BP        ;NOW PRINT TEXT
    1246/     672 : FB 0D                          XRI     00Dh      ;UNTIL <CR>
    1247/     674 : 3A 67                          BNZ     LLOOP
    1248/     676 : (MACRO)                        CALL    CRLF      ;END LINE WITH <CR><LF>
    1248/     676 : D4                          SEP R4
    1248/     677 : 03 D5                       dw CRLF
    1249/     679 : 30 50                          BR      LLINE     ;..REPEAT UNTIL DONE
    1250/     67B :                     ;
    1251/     67B : (MACRO)             LIX        FETCH   WORK+2 ;RESTORE BP
    1251/     67B : D7                          SEP R7
    1251/     67C : 2C                          db (WORK+2)&255
    1252/     67D : BB                             PHI     BP
    1253/     67E : 4D                             LDA     PZ
    1254/     67F : AB                             PLO     BP
    1255/     680 : (MACRO)                        RETURN
    1255/     680 : D5                          SEP R5
    1256/     681 :                     ;
    1257/     681 : (MACRO)             SAV        FETCH   TOPS ;ADJUST STACK TOP
    1257/     681 : D7                          SEP R7
    1257/     682 : 26                          db (TOPS)&255
    1258/     683 : 82                             GLO     R2
    1259/     684 : 73                             STXD
    1260/     685 : 92                             GHI     R2
    1261/     686 : 5D                             STR     PZ
    1262/     687 : (MACRO)                        FETCH   XEQ       ;IF NOT EXECUTING
    1262/     687 : D7                          SEP R7
    1262/     688 : 18                          db (XEQ)&255
    1263/     689 : 2D                             DEC     PZ
    1264/     68A : CE                             LSZ               ;USE ZERO INSTEAD
    1265/     68B : (MACRO)                        FETCH   LINO
    1265/     68B : D7                          SEP R7
    1265/     68C : 28                          db (LINO)&255
    1266/     68D : AA                             PLO     AC        ;HOLD HIGH BYTE
    1267/     68E : 4D                             LDA     PZ        ;GET LOW BYTE
    1268/     68F : 12                             INC     R2
    1269/     690 : 12                             INC     R2
    1270/     691 : E2                             SEX     R2
    1271/     692 : 73                             STXD              ;PUSH ONTO STACK
    1272/     693 : 8A                             GLO     AC        ;NOW THE HIGH BYTE
    1273/     694 : 73                             STXD
    1274/     695 : C0 02 2D                       LBR     NEXT
    1275/     698 :                     ;
    1276/     698 : (MACRO)             GLINO      FETCH   LINO-1    ;SETUP POINTER
    1276/     698 : D7                          SEP R7
    1276/     699 : 27                          db (LINO-1)&255
    1277/     69A : 4B                             LDA     BP        ;GET 1ST BYTE
    1278/     69B : 5D                             STR     PZ        ;STORE IN RAM
    1279/     69C : 1D                             INC     PZ
    1280/     69D : 4B                             LDA     BP        ;2ND BYTE
    1281/     69E : 73                             STXD
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 27 - 10/07/24 19:32:40


    1282/     69F : F1                             OR                ;D=0 IF LINE#=0
    1283/     6A0 : 1D                             INC     PZ
    1284/     6A1 : (MACRO)                        RETURN
    1284/     6A1 : D5                          SEP R5
    1285/     6A2 :                     ;
    1286/     6A2 : (MACRO)             INSRT      CALL    SWAP      ;SAVE POINTER IN NEW LINE
    1286/     6A2 : D4                          SEP R4
    1286/     6A3 : 04 5E                       dw SWAP
    1287/     6A5 : (MACRO)                        CALL    FIND      ;FIND INSERT POINT
    1287/     6A5 : D4                          SEP R4
    1287/     6A6 : 05 FE                       dw FIND
    1288/     6A8 : FC FF                          ADI     0FFh      ;IF DONE, SET DF
    1289/     6AA : (MACRO)                        LDI0        
    1289/     6AA : 9D                          GHI RD 
    1290/     6AB : AF                             PLO     X         ;X IS SIZE DIFFERENCE
    1291/     6AC : 33 BA                          BDF     NEW
    1292/     6AE : 9B                             GHI     BP        ;SAVE INSERT POINT
    1293/     6AF : BD                             PHI     PZ
    1294/     6B0 : 8B                             GLO     BP
    1295/     6B1 : AD                             PLO     PZ
    1296/     6B2 : 2F                             DEC     X         ;MEASURE OLD LINE LENGTH
    1297/     6B3 : 2F                             DEC     X         ;-3 FOR LINE# AND <CR>
    1298/     6B4 : 2F                             DEC     X         ;REPEAT..
    1299/     6B5 : 4D                             LDA     PZ        ;-1 FOR EACH BYTE OF TEXT
    1300/     6B6 : FB 0D                          XRI     00Dh      ;..UNTIL <CR>
    1301/     6B8 : 3A B4                          BNZ     $-4
    1302/     6BA : 2B                  NEW        DEC     BP        ;BACK OVER LINE#
    1303/     6BB : 2B                             DEC     BP
    1304/     6BC : (MACRO)                        CALL    SWAP      ;TRADE LINE POINTERS
    1304/     6BC : D4                          SEP R4
    1304/     6BD : 04 5E                       dw SWAP
    1305/     6BF : (MACRO)                        FETCH   LINO
    1305/     6BF : D7                          SEP R7
    1305/     6C0 : 28                          db (LINO)&255
    1306/     6C1 : 0B                             LDN     BP
    1307/     6C2 : FB 0D                          XRI     00Dh      ;IF NEW LINE IS NULL,
    1308/     6C4 : 73                             STXD
    1309/     6C5 : 5D                             STR     PZ
    1310/     6C6 : 32 D9                          BZ      HMUCH     ;THEN GO MARK IT
    1311/     6C8 : 9A                             GHI     AC        ;ELSE SAVE LINE NUMBER
    1312/     6C9 : 5D                             STR     PZ
    1313/     6CA : 1D                             INC     PZ
    1314/     6CB : 8A                             GLO     AC
    1315/     6CC : 5D                             STR     PZ
    1316/     6CD : 9B                             GHI     BP        ;MEASURE ITS LENGTH
    1317/     6CE : BA                             PHI     AC
    1318/     6CF : 8B                             GLO     BP
    1319/     6D0 : AA                             PLO     AC
    1320/     6D1 : 1F                             INC     X         ;LINE#
    1321/     6D2 : 1F                             INC     X         ;ENDING <CR>
    1322/     6D3 : 1F                             INC     X
    1323/     6D4 : 4A                             LDA     AC
    1324/     6D5 : FB 0D                          XRI     00Dh      ;AND ALL CHARS UNTIL FINAL <CR>
    1325/     6D7 : 3A D3                          BNZ     $-4
    1326/     6D9 : (MACRO)             HMUCH      FETCH   SP        ;FIGURE AMOUNT OF MOVE
    1326/     6D9 : D7                          SEP R7
    1326/     6DA : 2E                          db (SP)&255
    1327/     6DB : BA                             PHI     AC
    1328/     6DC : 4D                             LDA     PZ
    1329/     6DD : AA                             PLO     AC
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 28 - 10/07/24 19:32:40


    1330/     6DE : (MACRO)                        FETCH   MEND ;=DISTANCE FROM INSERT
    1330/     6DE : D7                          SEP R7
    1330/     6DF : 24                          db (MEND)&255
    1331/     6E0 : 8A                             GLO     AC        ;TO END OF PROGRAM
    1332/     6E1 : F7                             SM
    1333/     6E2 : AA                             PLO     AC        ;LEAVE IT IN AC, NEGATIVE
    1334/     6E3 : 2D                             DEC     PZ
    1335/     6E4 : 9A                             GHI     AC
    1336/     6E5 : 77                             SMB
    1337/     6E6 : BA                             PHI     AC
    1338/     6E7 : 1D                             INC     PZ
    1339/     6E8 : 8F                             GLO     X         ;NOW COMPUTE NEW MEND,
    1340/     6E9 : F4                             ADD               ;WHICH IS SUM OF OFFSET,
    1341/     6EA : BF                             PHI     X
    1342/     6EB : 8F                             GLO     X
    1343/     6EC : FA 80                          ANI     080h      ;WITH SIGN EXTEND,
    1344/     6EE : CE                             LSZ
    1345/     6EF : F8 FF                          LDI     0FFh
    1346/     6F1 : 2D                             DEC     PZ
    1347/     6F2 : 74                             ADC               ;PLUS OLD MEND
    1348/     6F3 : E2                             SEX     R2
    1349/     6F4 : 73                             STXD              ;PUSH ONTO STACK
    1350/     6F5 : B8                             PHI     XX
    1351/     6F6 : 9F                             GHI     X
    1352/     6F7 : 73                             STXD              ;(BACKWARDS)
    1353/     6F8 : 52                             STR     R2        ;CHECK FOR OVERFLOW
    1354/     6F9 : 82                             GLO     R2
    1355/     6FA : F5                             SD
    1356/     6FB : 98                             GHI     XX
    1357/     6FC : 52                             STR     R2
    1358/     6FD : 92                             GHI     R2
    1359/     6FE : 75                             SDB
    1360/     6FF : C3 03 7E                       LBDF    ERR-1     ;IF YES, THEN QUIT
    1361/     702 : 8F                             GLO     X         ;ELSE NO, PREPARE TO MOVE
    1362/     703 : 32 30                          BZ      STUFF     ;NO MOVE NEEDED
    1363/     705 : 52                             STR     R2
    1364/     706 : FE                             SHL
    1365/     707 : 3B 1E                          BNF     MORE      ;ADD SOME SPACE
    1366/     709 : (MACRO)                        FETCH   SP        ;DELETE SOME
    1366/     709 : D7                          SEP R7
    1366/     70A : 2E                          db (SP)&255
    1367/     70B : BF                             PHI     X         ;X IS DESTINATION
    1368/     70C : 4D                             LDA     PZ
    1369/     70D : AF                             PLO     X
    1370/     70E : E2                             SEX     R2
    1371/     70F : F7                             SM
    1372/     710 : A8                             PLO     XX        ;XX IS SOURCE
    1373/     711 : 9F                             GHI     X
    1374/     712 : 7C 00                          ADCI    0
    1375/     714 : B8                             PHI     XX
    1376/     715 : 48                             LDA     XX        ;NOW MOVE IT
    1377/     716 : 5F                             STR     X
    1378/     717 : 1F                             INC     X
    1379/     718 : 1A                             INC     AC
    1380/     719 : 9A                             GHI     AC
    1381/     71A : 3A 15                          BNZ     $-5
    1382/     71C : 30 30                          BR      STUFF
    1383/     71E : 9F                  MORE       GHI     X         ;SET UP POINTERS
    1384/     71F : AF                             PLO     X         ;X IS DESTINATION
    1385/     720 : 98                             GHI     XX
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 29 - 10/07/24 19:32:40


    1386/     721 : BF                             PHI     X
    1387/     722 : (MACRO)                        FETCH   MEND
    1387/     722 : D7                          SEP R7
    1387/     723 : 24                          db (MEND)&255
    1388/     724 : B8                             PHI     XX
    1389/     725 : 4D                             LDA     PZ
    1390/     726 : A8                             PLO     XX        ;XX IS SOURCE
    1391/     727 : 2A                             DEC     AC
    1392/     728 : EF                             SEX     X         ;NOW MOVE IT
    1393/     729 : 08                             LDN     XX
    1394/     72A : 28                             DEC     XX
    1395/     72B : 73                             STXD
    1396/     72C : 1A                             INC     AC
    1397/     72D : 9A                             GHI     AC
    1398/     72E : 3A 29                          BNZ     $-5
    1399/     730 : (MACRO)             STUFF      FETCH   MEND ;UPDATE MEND
    1399/     730 : D7                          SEP R7
    1399/     731 : 24                          db (MEND)&255
    1400/     732 : 12                             INC     R2
    1401/     733 : 42                             LDA     R2
    1402/     734 : 73                             STXD
    1403/     735 : 02                             LDN     R2
    1404/     736 : 5D                             STR     PZ
    1405/     737 : (MACRO)                        FETCH   SP        ;POINT INTO PROGRAM
    1405/     737 : D7                          SEP R7
    1405/     738 : 2E                          db (SP)&255
    1406/     739 : BA                             PHI     AC
    1407/     73A : 4D                             LDA     PZ
    1408/     73B : AA                             PLO     AC
    1409/     73C : (MACRO)                        FETCH   LINO ;INSERT NEW LINE
    1409/     73C : D7                          SEP R7
    1409/     73D : 28                          db (LINO)&255
    1410/     73E : AF                             PLO     X
    1411/     73F : F1                             OR                ;IF THERE IS ONE
    1412/     740 : 32 4E                          BZ      INSX      ;NO, EXIT
    1413/     742 : 8F                             GLO     X         ;ELSE INSERT LINE NUMBER
    1414/     743 : 5A                             STR     AC
    1415/     744 : 1A                             INC     AC
    1416/     745 : 4D                             LDA     PZ
    1417/     746 : 5A                             STR     AC
    1418/     747 : 1A                             INC     AC
    1419/     748 : 4B                             LDA     BP        ;NOW REST OF LINE
    1420/     749 : 5A                             STR     AC
    1421/     74A : FB 0D                          XRI     00Dh      ;TO <CR>
    1422/     74C : 3A 47                          BNZ     $-5
    1423/     74E : C0 03 B5            INSX       LBR     EXIT
    1424/     751 : 73                  IO         STXD              ;PUSH OUT BYTE
    1425/     752 : 52                             STR     R2
    1426/     753 : (MACRO)                        LDI0              ;CLEAR AC
    1426/     753 : 9D                          GHI RD 
    1427/     754 : BA                             PHI     AC
    1428/     755 : 2D                             DEC     PZ
    1429/     756 : 43                             LDA     R3        ;STORE RETURN IN RAM
    1430/     757 : D5                             SEP     R5        ;(THIS IS NOT EXECUTED)
    1431/     758 : 5D                             STR     PZ
    1432/     759 : 2D                             DEC     PZ
    1433/     75A : 88                             GLO     XX        ;MAKE IO INSTRUCTION
    1434/     75B : FA 0F                          ANI     00Fh
    1435/     75D : F9 60                          ORI     060h
    1436/     75F : 5D                             STR     PZ
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 30 - 10/07/24 19:32:40


    1437/     760 : FA 08                          ANI     8
    1438/     762 : CE                             LSZ
    1439/     763 : C4                             NOP               ;INPUT, SO
    1440/     764 : 12                             INC     R2        ;DO INCREMENT NOW
    1441/     765 : DD                             SEP     PZ        ;GO EXECUTE, RESULT IN D
    1442/     766 :                     
    1443/     766 :                                include "TB_IL.asm"  
(1)    1/     766 :                     ;        IF TESTING_IL
(1)    2/     766 :                     ;BUFF       EQU     0DB0h     ;ONLY CHANGE PAGE, UNLESS YOU
(1)    3/     766 :                     ;TVXY       EQU     8
(1)    4/     766 :                     ;TYPEV      EQU     0109h
(1)    5/     766 :                     ;ILPOKE     EQU     0118h
(1)    6/     766 :                     ;ILINPOUT   EQU     0126h
(1)    7/     766 :                     ;KEYV       EQU     0106h
(1)    8/     766 :                     ;ILSAVE     EQU     09FDh
(1)    9/     766 :                     ;ILLOAD     EQU     09FAh
(1)   10/     766 :                     ;MEND       EQU     024h
(1)   11/     766 :                     ;BASIC      EQU     020h
(1)   12/     766 :                     ;ILFLG      EQU     9F8h
(1)   13/     766 :                     ;ILPEEK     EQU     114h
(1)   14/     766 :                     ;        ENDIF
(1)   15/     766 :                     
(1)   16/     766 :                     IL_SX   MACRO stack             ;Duplicate Top number (two bytes) on Stack
(1)   17/     766 :                             DB 00h + (stack & 07h)
(1)   18/     766 :                         ENDM
(1)   19/     766 :                     
(1)   20/     766 :                     IL_NO   MACRO                   ;Duplicate Top number (two bytes) on Stack
(1)   21/     766 :                             DB 08h
(1)   22/     766 :                         ENDM
(1)   23/     766 :                     IL_LB   MACRO val
(1)   24/     766 :                             DB 09H, val & 0FFh      ;Push Literal byte onto stack
(1)   25/     766 :                         ENDM
(1)   26/     766 :                     
(1)   27/     766 :                     IL_LN   MACRO val               ;Push Literal number
(1)   28/     766 :                             DB 0Ah
(1)   29/     766 :                             DW val & 0FFFFh
(1)   30/     766 :                         ENDM
(1)   31/     766 :                     
(1)   32/     766 :                     IL_DS   MACRO                   ;Duplicate Top number (two bytes) on Stack
(1)   33/     766 :                             DB 0Bh
(1)   34/     766 :                         ENDM
(1)   35/     766 :                     
(1)   36/     766 :                     IL_SP   MACRO                   ;Stack Pop
(1)   37/     766 :                             DB 0Ch
(1)   38/     766 :                         ENDM
(1)   39/     766 :                     
(1)   40/     766 :                     IL_SB   MACRO                   ;Save basic pointer
(1)   41/     766 :                             DB 10h
(1)   42/     766 :                         ENDM
(1)   43/     766 :                     
(1)   44/     766 :                     IL_RB   MACRO                   ;Restore basic pointer
(1)   45/     766 :                             DB 11h
(1)   46/     766 :                         ENDM
(1)   47/     766 :                     
(1)   48/     766 :                     IL_FV   MACRO                   ;Fetch Variable
(1)   49/     766 :                             DB 12h
(1)   50/     766 :                         ENDM
(1)   51/     766 :                     
(1)   52/     766 :                     IL_SV   MACRO                   ;Store Variable
(1)   53/     766 :                             DB 13H
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 31 - 10/07/24 19:32:40


(1)   54/     766 :                         ENDM
(1)   55/     766 :                     
(1)   56/     766 :                     IL_GS   MACRO                   ;GOSUB Save
(1)   57/     766 :                             DB 14H
(1)   58/     766 :                         ENDM
(1)   59/     766 :                     
(1)   60/     766 :                     IL_RS   MACRO                   ;Restore Saved Line
(1)   61/     766 :                             DB 15H
(1)   62/     766 :                         ENDM
(1)   63/     766 :                     
(1)   64/     766 :                     IL_GO   MACRO                   ;GOTO
(1)   65/     766 :                             DB 16H
(1)   66/     766 :                         ENDM
(1)   67/     766 :                     
(1)   68/     766 :                     IL_NE   MACRO                   ;Negate(Two's Complement)
(1)   69/     766 :                             DB 17H
(1)   70/     766 :                         ENDM
(1)   71/     766 :                     
(1)   72/     766 :                     IL_AD   MACRO                   ;Add
(1)   73/     766 :                             DB 18H
(1)   74/     766 :                         ENDM
(1)   75/     766 :                     
(1)   76/     766 :                     IL_SU   MACRO                   ;Subtract
(1)   77/     766 :                             DB 19H
(1)   78/     766 :                         ENDM
(1)   79/     766 :                     
(1)   80/     766 :                     IL_MP   MACRO                   ;Multiply
(1)   81/     766 :                             DB 1AH
(1)   82/     766 :                         ENDM
(1)   83/     766 :                     
(1)   84/     766 :                     IL_DV   MACRO                   ;Divide
(1)   85/     766 :                             DB 1BH
(1)   86/     766 :                         ENDM
(1)   87/     766 :                     
(1)   88/     766 :                     IL_CP   MACRO                   ;Compare
(1)   89/     766 :                             DB 1CH
(1)   90/     766 :                         ENDM
(1)   91/     766 :                     
(1)   92/     766 :                     IL_NX   MACRO                   ;Next BASIC Statement
(1)   93/     766 :                             DB 1DH
(1)   94/     766 :                         ENDM
(1)   95/     766 :                     
(1)   96/     766 :                     IL_LS   MACRO                   ;List the program
(1)   97/     766 :                             DB 1FH
(1)   98/     766 :                         ENDM
(1)   99/     766 :                     
(1)  100/     766 :                     IL_PN   MACRO                   ;Print Number
(1)  101/     766 :                             DB 20H
(1)  102/     766 :                         ENDM
(1)  103/     766 :                     
(1)  104/     766 :                     IL_PQ   MACRO                   ;Print String
(1)  105/     766 :                             DB 21H
(1)  106/     766 :                         ENDM
(1)  107/     766 :                     
(1)  108/     766 :                     IL_PT   MACRO                   ;Print Tab
(1)  109/     766 :                             DB 22H
(1)  110/     766 :                         ENDM
(1)  111/     766 :                     
(1)  112/     766 :                     IL_NL   MACRO                   ;New Line
(1)  113/     766 :                             DB 23H
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 32 - 10/07/24 19:32:40


(1)  114/     766 :                         ENDM
(1)  115/     766 :                     
(1)  116/     766 :                     IL_PC   MACRO char, endchar     ;Print literal string  
(1)  117/     766 :                             DB 24h
(1)  118/     766 :                             IF char>''
(1)  119/     766 :                             DB char
(1)  120/     766 :                             ENDIF
(1)  121/     766 :                             IF endchar>''
(1)  122/     766 :                             DB endchar | 80h
(1)  123/     766 :                             ENDIF             
(1)  124/     766 :                         ENDM
(1)  125/     766 :                     
(1)  126/     766 :                     IL_GL   MACRO                   ;Get Input Line.
(1)  127/     766 :                             DB 27h
(1)  128/     766 :                         ENDM
(1)  129/     766 :                     
(1)  130/     766 :                     IL_IL   MACRO                   ;Insert Basic line  
(1)  131/     766 :                             DB 2Ah
(1)  132/     766 :                         ENDM
(1)  133/     766 :                     
(1)  134/     766 :                     IL_MT   MACRO                   ;Mark the basic program space empty
(1)  135/     766 :                             DB 2Bh
(1)  136/     766 :                         ENDM
(1)  137/     766 :                     
(1)  138/     766 :                     IL_XQ   MACRO                   ;Execute
(1)  139/     766 :                             DB 2Ch
(1)  140/     766 :                         ENDM
(1)  141/     766 :                     
(1)  142/     766 :                     IL_WS   MACRO                   ;Stop
(1)  143/     766 :                             DB 2Dh
(1)  144/     766 :                         ENDM
(1)  145/     766 :                     
(1)  146/     766 :                     IL_US   MACRO                   ;Machine Language Subroutine
(1)  147/     766 :                             DB 2Eh
(1)  148/     766 :                         ENDM
(1)  149/     766 :                     
(1)  150/     766 :                     IL_RT   MACRO                   ;IL Subroutine Return
(1)  151/     766 :                             DB 2Fh
(1)  152/     766 :                         ENDM
(1)  153/     766 :                     
(1)  154/     766 :                     IL_JS   MACRO addr              ;IL Subroutine Call
(1)  155/     766 :                             DW 3000H | addr-STRT & 7FFh
(1)  156/     766 :                         ENDM
(1)  157/     766 :                     
(1)  158/     766 :                     IL_J    MACRO addr              ;Jump
(1)  159/     766 :                             DW 3800H | addr-STRT & 7FFh
(1)  160/     766 :                         ENDM
(1)  161/     766 :                     
(1)  162/     766 :                     IL_BR_B MACRO  addr             ;Relative Branch Back
(1)  163/     766 :                             DB 60h - (1+$-addr)
(1)  164/     766 :                         ENDM
(1)  165/     766 :                     
(1)  166/     766 :                     IL_BR_F MACRO  addr             ;Relative Branch Forward
(1)  167/     766 :                             DB 60h + (addr-$-1)
(1)  168/     766 :                         ENDM
(1)  169/     766 :                     
(1)  170/     766 :                     IL_BC MACRO  addr, char, endchar;String Match Branch
(1)  171/     766 :                             DB 80h + ((addr-$-1)&31)
(1)  172/     766 :                             IF char > ''
(1)  173/     766 :                             DB char
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 33 - 10/07/24 19:32:40


(1)  174/     766 :                             ENDIF
(1)  175/     766 :                             DB endchar | 80h               
(1)  176/     766 :                         ENDM
(1)  177/     766 :                     
(1)  178/     766 :                     IL_BV MACRO  addr               ;Branch if not a Variable
(1)  179/     766 :                             DB 0A0h + ((addr-$-1)&31)
(1)  180/     766 :                         ENDM
(1)  181/     766 :                     
(1)  182/     766 :                     IL_BN   MACRO  addr             ;Branch if not a number
(1)  183/     766 :                             DB 0C0h + ((addr-$-1)&31)
(1)  184/     766 :                         ENDM
(1)  185/     766 :                     
(1)  186/     766 :                     IL_BE   MACRO  addr             ;Branch if not end of line
(1)  187/     766 :                             DB 0E0h + ((addr-$-1)&31)
(1)  188/     766 :                         ENDM
(1)  189/     766 :                     
(1)  190/     766 :                     IL_ENDCHAR  MACRO char
(1)  191/     766 :                             DB char | 80h
(1)  192/     766 :                         ENDM
(1)  193/     766 :                     
(1)  194/     766 :                     IL_CHAR  MACRO char, endchar
(1)  195/     766 :                             IF char>0
(1)  196/     766 :                             DB char
(1)  197/     766 :                             ENDIF
(1)  198/     766 :                             DB endchar | 80h
(1)  199/     766 :                         ENDM
(1)  200/     766 :                     
(1)  201/     766 : (MACRO)             STRT    IL_PC ':', 11h          ;':Q^'  Start Of IL Program
(1)  201/     766 : 24                          DB 24h
(1)  201/     767 : =>TRUE                      IF ':'>''
(1)  201/     767 : 3A                          DB ':'
(1)  201/     768 : [201]                       ENDIF
(1)  201/     768 : =>TRUE                      IF 11H>''
(1)  201/     768 : 91                          DB 11H | 80h
(1)  201/     769 : [201]                       ENDIF             
(1)  202/     769 : (MACRO)                     IL_GL                   ;GL
(1)  202/     769 : 27                          DB 27h
(1)  203/     76A : (MACRO)                     IL_SB                   ;SB
(1)  203/     76A : 10                          DB 10h
(1)  204/     76B : (MACRO)                     IL_BE LO                ;BE      :LO
(1)  204/     76B : E1                          DB 0E0h + ((LO-$-1)&31)
(1)  205/     76C : (MACRO)                     IL_BR_B STRT            ;BR      :STRT
(1)  205/     76C : 59                          DB 60h - (1+$-STRT)
(1)  206/     76D : (MACRO)             LO      IL_BN STMT              ;BN      :STMT
(1)  206/     76D : C5                          DB 0C0h + ((STMT-$-1)&31)
(1)  207/     76E : (MACRO)                     IL_IL                   ;IL
(1)  207/     76E : 2A                          DB 2Ah
(1)  208/     76F : (MACRO)                     IL_BR_B STRT            ;BR      :STRT
(1)  208/     76F : 56                          DB 60h - (1+$-STRT)
(1)  209/     770 : (MACRO)             XEC     IL_SB                   ;SB
(1)  209/     770 : 10                          DB 10h
(1)  210/     771 : (MACRO)                     IL_RB                   ;RB
(1)  210/     771 : 11                          DB 11h
(1)  211/     772 : (MACRO)                     IL_XQ                   ;XQ
(1)  211/     772 : 2C                          DB 2Ch
(1)  212/     773 : (MACRO)             STMT    IL_BC GOTO, "LE", 'T'   ;BC      :GOTO     'LET'
(1)  212/     773 : 8B                          DB 80h + ((GOTO-$-1)&31)
(1)  212/     774 : =>TRUE                      IF "LE" > ''
(1)  212/     774 : 4C 45                       DB "LE"
(1)  212/     776 : [212]                       ENDIF
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 34 - 10/07/24 19:32:40


(1)  212/     776 : D4                          DB 'T' | 80h               
(1)  213/     777 : (MACRO)                     IL_BV $+1               ;BV      * !18
(1)  213/     777 : A0                          DB 0A0h + (($+1-$-1)&31)
(1)  214/     778 : (MACRO)                     IL_BC $+1, 0, '='       ;BC      * !20     '='         
(1)  214/     778 : 80                          DB 80h + (($+1-$-1)&31)
(1)  214/     779 : =>FALSE                     IF 0 > ''
(1)  214/     779 :                             DB 0
(1)  214/     779 : [214]                       ENDIF
(1)  214/     779 : BD                          DB '=' | 80h               
(1)  215/     77A : (MACRO)             LET     IL_JS EXPR              ;JS      :EXPR
(1)  215/     77A : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  216/     77C : (MACRO)                     IL_BE $+1               ;BE      * !23
(1)  216/     77C : E0                          DB 0E0h + (($+1-$-1)&31)
(1)  217/     77D : (MACRO)                     IL_SV                   ;SV
(1)  217/     77D : 13                          DB 13H
(1)  218/     77E : (MACRO)                     IL_NX                   ;NX
(1)  218/     77E : 1D                          DB 1DH
(1)  219/     77F : (MACRO)             GOTO    IL_BC PRNT, 'G','O'     ;BC      :PRNT     'GO'      
(1)  219/     77F : 94                          DB 80h + ((PRNT-$-1)&31)
(1)  219/     780 : =>TRUE                      IF 'G' > ''
(1)  219/     780 : 47                          DB 'G'
(1)  219/     781 : [219]                       ENDIF
(1)  219/     781 : CF                          DB 'O' | 80h               
(1)  220/     782 : (MACRO)                     IL_BC GOSB, 'T','O'     ;BC      :GOSB     'TO'
(1)  220/     782 : 88                          DB 80h + ((GOSB-$-1)&31)
(1)  220/     783 : =>TRUE                      IF 'T' > ''
(1)  220/     783 : 54                          DB 'T'
(1)  220/     784 : [220]                       ENDIF
(1)  220/     784 : CF                          DB 'O' | 80h               
(1)  221/     785 : (MACRO)                     IL_JS EXPR              ;JS      :EXPR
(1)  221/     785 : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  222/     787 : (MACRO)                     IL_BE $+1               ;BE      * !34
(1)  222/     787 : E0                          DB 0E0h + (($+1-$-1)&31)
(1)  223/     788 : (MACRO)                     IL_SB                   ;SB
(1)  223/     788 : 10                          DB 10h
(1)  224/     789 : (MACRO)                     IL_RB                   ;RB
(1)  224/     789 : 11                          DB 11h
(1)  225/     78A : (MACRO)                     IL_GO                   ;GO
(1)  225/     78A : 16                          DB 16H
(1)  226/     78B : (MACRO)             GOSB    IL_BC $+1, "SU", 'B'    ;BC      * !39     'SUB'
(1)  226/     78B : 80                          DB 80h + (($+1-$-1)&31)
(1)  226/     78C : =>TRUE                      IF "SU" > ''
(1)  226/     78C : 53 55                       DB "SU"
(1)  226/     78E : [226]                       ENDIF
(1)  226/     78E : C2                          DB 'B' | 80h               
(1)  227/     78F : (MACRO)                     IL_JS EXPR              ;JS      :EXPR
(1)  227/     78F : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  228/     791 : (MACRO)                     IL_BE $+1               ;BE      * !44
(1)  228/     791 : E0                          DB 0E0h + (($+1-$-1)&31)
(1)  229/     792 : (MACRO)                     IL_GS                   ;GS
(1)  229/     792 : 14                          DB 14H
(1)  230/     793 : (MACRO)                     IL_GO                   ;GO
(1)  230/     793 : 16                          DB 16H
(1)  231/     794 : (MACRO)             PRNT    IL_BC SKIP_, 'P', 'R'   ;BC      :SKIP     'PR'
(1)  231/     794 : 90                          DB 80h + ((SKIP_-$-1)&31)
(1)  231/     795 : =>TRUE                      IF 'P' > ''
(1)  231/     795 : 50                          DB 'P'
(1)  231/     796 : [231]                       ENDIF
(1)  231/     796 : D2                          DB 'R' | 80h               
(1)  232/     797 : (MACRO)                     IL_BC P0, "IN", 'T'     ;BC      :P0       'INT'
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 35 - 10/07/24 19:32:40


(1)  232/     797 : 83                          DB 80h + ((P0-$-1)&31)
(1)  232/     798 : =>TRUE                      IF "IN" > ''
(1)  232/     798 : 49 4E                       DB "IN"
(1)  232/     79A : [232]                       ENDIF
(1)  232/     79A : D4                          DB 'T' | 80h               
(1)  233/     79B : (MACRO)             P0      IL_BE P3                ;BE      :P3
(1)  233/     79B : E5                          DB 0E0h + ((P3-$-1)&31)
(1)  234/     79C : (MACRO)                     IL_BR_F S3              ;BR      Z233
(1)  234/     79C : 71                          DB 60h + (S3-$-1)
(1)  235/     79D : (MACRO)             P1      IL_BC S1, 0, ';'        ;BC      Z234      ';'
(1)  235/     79D : 88                          DB 80h + ((S1-$-1)&31)
(1)  235/     79E : =>FALSE                     IF 0 > ''
(1)  235/     79E :                             DB 0
(1)  235/     79E : [235]                       ENDIF
(1)  235/     79E : BB                          DB ';' | 80h               
(1)  236/     79F : (MACRO)             P2      IL_BE P3                ;BE      :P3
(1)  236/     79F : E1                          DB 0E0h + ((P3-$-1)&31)
(1)  237/     7A0 : (MACRO)                     IL_NX                   ;NX
(1)  237/     7A0 : 1D                          DB 1DH
(1)  238/     7A1 : (MACRO)             P3      IL_BC S4, 0, '"'        ;BC      Z235      '"'
(1)  238/     7A1 : 8F                          DB 80h + ((S4-$-1)&31)
(1)  238/     7A2 : =>FALSE                     IF 0 > ''
(1)  238/     7A2 :                             DB 0
(1)  238/     7A2 : [238]                       ENDIF
(1)  238/     7A2 : A2                          DB '"' | 80h               
(1)  239/     7A3 : (MACRO)                     IL_PQ                   ;PQ
(1)  239/     7A3 : 21                          DB 21H
(1)  240/     7A4 : (MACRO)                     IL_BR_B P1              ;BR      :P1
(1)  240/     7A4 : 58                          DB 60h - (1+$-P1)
(1)  241/     7A5 : (MACRO)             SKIP_   IL_BR_B IF_             ;BR      :IF
(1)  241/     7A5 : 6F                          DB 60h - (1+$-IF_)
(1)  242/     7A6 : (MACRO)             S1      IL_BC S2, 0, ','        ;Z234       BC      Z236      ','
(1)  242/     7A6 : 83                          DB 80h + ((S2-$-1)&31)
(1)  242/     7A7 : =>FALSE                     IF 0 > ''
(1)  242/     7A7 :                             DB 0
(1)  242/     7A7 : [242]                       ENDIF
(1)  242/     7A7 : AC                          DB ',' | 80h               
(1)  243/     7A8 : (MACRO)                     IL_PT                   ;PT
(1)  243/     7A8 : 22                          DB 22H
(1)  244/     7A9 : (MACRO)                     IL_BR_B P2              ;BR      :P2
(1)  244/     7A9 : 55                          DB 60h - (1+$-P2)
(1)  245/     7AA : (MACRO)             S2      IL_BC S3, 0, ':'        ;Z236       BC      Z233      ':'
(1)  245/     7AA : 83                          DB 80h + ((S3-$-1)&31)
(1)  245/     7AB : =>FALSE                     IF 0 > ''
(1)  245/     7AB :                             DB 0
(1)  245/     7AB : [245]                       ENDIF
(1)  245/     7AB : BA                          DB ':' | 80h               
(1)  246/     7AC : (MACRO)                     IL_PC 0, 13h            ;PC                'S^'
(1)  246/     7AC : 24                          DB 24h
(1)  246/     7AD : =>FALSE                     IF 0>''
(1)  246/     7AD :                             DB 0
(1)  246/     7AD : [246]                       ENDIF
(1)  246/     7AD : =>TRUE                      IF 13H>''
(1)  246/     7AD : 93                          DB 13H | 80h
(1)  246/     7AE : [246]                       ENDIF             
(1)  247/     7AE : (MACRO)             S3      IL_BE $+1               ;Z233       BE      * !73
(1)  247/     7AE : E0                          DB 0E0h + (($+1-$-1)&31)
(1)  248/     7AF : (MACRO)                     IL_NL                   ;NL
(1)  248/     7AF : 23                          DB 23H
(1)  249/     7B0 : (MACRO)                     IL_NX                   ;NX
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 36 - 10/07/24 19:32:40


(1)  249/     7B0 : 1D                          DB 1DH
(1)  250/     7B1 : (MACRO)             S4      IL_JS EXPR
(1)  250/     7B1 : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  251/     7B3 : (MACRO)                     IL_PN                   ;PN
(1)  251/     7B3 : 20                          DB 20H
(1)  252/     7B4 : (MACRO)                     IL_BR_B P1
(1)  252/     7B4 : 48                          DB 60h - (1+$-P1)
(1)  253/     7B5 : (MACRO)             IF_     IL_BC INPT, 'I', 'F'    ;BC      :INPT     'IF'
(1)  253/     7B5 : 91                          DB 80h + ((INPT-$-1)&31)
(1)  253/     7B6 : =>TRUE                      IF 'I' > ''
(1)  253/     7B6 : 49                          DB 'I'
(1)  253/     7B7 : [253]                       ENDIF
(1)  253/     7B7 : C6                          DB 'F' | 80h               
(1)  254/     7B8 : (MACRO)                     IL_JS EXPR
(1)  254/     7B8 : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  255/     7BA : (MACRO)                     IL_JS RELOP             ;JS      RELOP
(1)  255/     7BA : 32 37                       DW 3000H | RELOP-STRT & 7FFh
(1)  256/     7BC : (MACRO)                     IL_JS EXPR
(1)  256/     7BC : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  257/     7BE : (MACRO)                     IL_BC I1, "THE", 'N'    ;BC      :I1       'THEN' 
(1)  257/     7BE : 84                          DB 80h + ((I1-$-1)&31)
(1)  257/     7BF : =>TRUE                      IF "THE" > ''
(1)  257/     7BF : 54 48 45                    DB "THE"
(1)  257/     7C2 : [257]                       ENDIF
(1)  257/     7C2 : CE                          DB 'N' | 80h               
(1)  258/     7C3 : (MACRO)             I1      IL_CP                   ;CP
(1)  258/     7C3 : 1C                          DB 1CH
(1)  259/     7C4 : (MACRO)                     IL_NX                   ;NX
(1)  259/     7C4 : 1D                          DB 1DH
(1)  260/     7C5 : (MACRO)                     IL_J STMT
(1)  260/     7C5 : 38 0D                       DW 3800H | STMT-STRT & 7FFh
(1)  261/     7C7 : (MACRO)             INPT    IL_BC RETN_, "INPU", 'T';BC      :RETN     'INPUT'
(1)  261/     7C7 : 9A                          DB 80h + ((RETN_-$-1)&31)
(1)  261/     7C8 : =>TRUE                      IF "INPU" > ''
(1)  261/     7C8 : 49 4E 50 55                 DB "INPU"
(1)  261/     7CC : [261]                       ENDIF
(1)  261/     7CC : D4                          DB 'T' | 80h               
(1)  262/     7CD : (MACRO)             I0      IL_BV $+1               ;Z242       BV      * !104
(1)  262/     7CD : A0                          DB 0A0h + (($+1-$-1)&31)
(1)  263/     7CE : (MACRO)                     IL_SB                   ;SB
(1)  263/     7CE : 10                          DB 10h
(1)  264/     7CF : (MACRO)                     IL_BE I3                ;BE      Z238
(1)  264/     7CF : E7                          DB 0E0h + ((I3-$-1)&31)
(1)  265/     7D0 : (MACRO)             I2      IL_PC "? ", 11h         ;Z239       PC                '? Q^'
(1)  265/     7D0 : 24                          DB 24h
(1)  265/     7D1 : =>TRUE                      IF "? ">''
(1)  265/     7D1 : 3F 20                       DB "? "
(1)  265/     7D3 : [265]                       ENDIF
(1)  265/     7D3 : =>TRUE                      IF 11H>''
(1)  265/     7D3 : 91                          DB 11H | 80h
(1)  265/     7D4 : [265]                       ENDIF             
(1)  266/     7D4 : (MACRO)                     IL_GL                   ;GL
(1)  266/     7D4 : 27                          DB 27h
(1)  267/     7D5 : (MACRO)                     IL_BE I3                ;BE      Z238
(1)  267/     7D5 : E1                          DB 0E0h + ((I3-$-1)&31)
(1)  268/     7D6 : (MACRO)                     IL_BR_B I2              ;BR      Z239
(1)  268/     7D6 : 59                          DB 60h - (1+$-I2)
(1)  269/     7D7 : (MACRO)             I3      IL_BC I4, 0, ","        ;Z238       BC      Z240      ','
(1)  269/     7D7 : 81                          DB 80h + ((I4-$-1)&31)
(1)  269/     7D8 : =>FALSE                     IF 0 > ''
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 37 - 10/07/24 19:32:40


(1)  269/     7D8 :                             DB 0
(1)  269/     7D8 : [269]                       ENDIF
(1)  269/     7D8 : AC                          DB "," | 80h               
(1)  270/     7D9 : (MACRO)             I4      IL_JS EXPR
(1)  270/     7D9 : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  271/     7DB : (MACRO)                     IL_SV                   ;SV
(1)  271/     7DB : 13                          DB 13H
(1)  272/     7DC : (MACRO)                     IL_RB                   ;RB
(1)  272/     7DC : 11                          DB 11h
(1)  273/     7DD : (MACRO)                     IL_BC I5, 0, ','        ;BC      Z241      ','
(1)  273/     7DD : 82                          DB 80h + ((I5-$-1)&31)
(1)  273/     7DE : =>FALSE                     IF 0 > ''
(1)  273/     7DE :                             DB 0
(1)  273/     7DE : [273]                       ENDIF
(1)  273/     7DE : AC                          DB ',' | 80h               
(1)  274/     7DF : (MACRO)                     IL_BR_B I0              ;BR      Z242
(1)  274/     7DF : 4D                          DB 60h - (1+$-I0)
(1)  275/     7E0 : (MACRO)             I5      IL_BE $+1               ;Z241      BE      * !123
(1)  275/     7E0 : E0                          DB 0E0h + (($+1-$-1)&31)
(1)  276/     7E1 : (MACRO)                     IL_NX                   ;NX
(1)  276/     7E1 : 1D                          DB 1DH
(1)  277/     7E2 : (MACRO)             RETN_   IL_BC END, 'RETUR', 'N' ;BC      :END      'RETURN'
(1)  277/     7E2 : 89                          DB 80h + ((END-$-1)&31)
(1)  277/     7E3 : =>TRUE                      IF 'RETUR' > ''
(1)  277/     7E3 : 52 45 54 55 52              DB 'RETUR'
(1)  277/     7E8 : [277]                       ENDIF
(1)  277/     7E8 : CE                          DB 'N' | 80h               
(1)  278/     7E9 : (MACRO)                     IL_BE $+1               ;BE      * !132
(1)  278/     7E9 : E0                          DB 0E0h + (($+1-$-1)&31)
(1)  279/     7EA : (MACRO)                     IL_RS                   ;RS
(1)  279/     7EA : 15                          DB 15H
(1)  280/     7EB : (MACRO)                     IL_NX                   ;NX
(1)  280/     7EB : 1D                          DB 1DH
(1)  281/     7EC : (MACRO)             END     IL_BC LIST_, "EN", 'D'  ;BC      :LIST     'END'
(1)  281/     7EC : 85                          DB 80h + ((LIST_-$-1)&31)
(1)  281/     7ED : =>TRUE                      IF "EN" > ''
(1)  281/     7ED : 45 4E                       DB "EN"
(1)  281/     7EF : [281]                       ENDIF
(1)  281/     7EF : C4                          DB 'D' | 80h               
(1)  282/     7F0 : (MACRO)                     IL_BE $+1               ;BE      * !139
(1)  282/     7F0 : E0                          DB 0E0h + (($+1-$-1)&31)
(1)  283/     7F1 : (MACRO)                     IL_WS                   ;WS
(1)  283/     7F1 : 2D                          DB 2Dh
(1)  284/     7F2 : (MACRO)             LIST_   IL_BC RUN_, "LIS", 'T'  ;BC      :RUN      'LIST'
(1)  284/     7F2 : 9A                          DB 80h + ((RUN_-$-1)&31)
(1)  284/     7F3 : =>TRUE                      IF "LIS" > ''
(1)  284/     7F3 : 4C 49 53                    DB "LIS"
(1)  284/     7F6 : [284]                       ENDIF
(1)  284/     7F6 : D4                          DB 'T' | 80h               
(1)  285/     7F7 : (MACRO)                     IL_BE L1                ;BE      Z243
(1)  285/     7F7 : E7                          DB 0E0h + ((L1-$-1)&31)
(1)  286/     7F8 : (MACRO)                     IL_LN 0001h             ;LN      #0001
(1)  286/     7F8 : 0A                          DB 0Ah
(1)  286/     7F9 : 00 01                       DW 0001H & 0FFFFh
(1)  287/     7FB : (MACRO)                     IL_LN 7FFFh             ;LN      #7FFF
(1)  287/     7FB : 0A                          DB 0Ah
(1)  287/     7FC : 7F FF                       DW 7FFFH & 0FFFFh
(1)  288/     7FE : (MACRO)                     IL_BR_F L2              ;BR      Z244
(1)  288/     7FE : 64                          DB 60h + (L2-$-1)
(1)  289/     7FF : (MACRO)             L1      IL_JS EXPR
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 38 - 10/07/24 19:32:40


(1)  289/     7FF : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  290/     801 : (MACRO)                     IL_JS PE4               ;JS      Z245
(1)  290/     801 : 32 31                       DW 3000H | PE4-STRT & 7FFh
(1)  291/     803 : (MACRO)             L2      IL_BE $+1               ;BE      * !158
(1)  291/     803 : E0                          DB 0E0h + (($+1-$-1)&31)
(1)  292/     804 : (MACRO)                     IL_PC 0,0               ;Z244       PC                '@^@^@^@^J^@^'
(1)  292/     804 : 24                          DB 24h
(1)  292/     805 : =>FALSE                     IF 0>''
(1)  292/     805 :                             DB 0
(1)  292/     805 : [292]                       ENDIF
(1)  292/     805 : =>FALSE                     IF 0>''
(1)  292/     805 :                             DB 0 | 80h
(1)  292/     805 : [292]                       ENDIF             
(1)  293/     805 : 00 00 00 00 0A 80           DB 0,0,0,0,0Ah,80h      ;--
(1)  294/     80B : (MACRO)                     IL_LS                   ;LS
(1)  294/     80B : 1F                          DB 1FH
(1)  295/     80C : (MACRO)                     IL_NX                   ;NX
(1)  295/     80C : 1D                          DB 1DH
(1)  296/     80D : (MACRO)             RUN_    IL_BC CLER, "RU",'N'    ;BC      :CLER     'RUN'
(1)  296/     80D : 85                          DB 80h + ((CLER-$-1)&31)
(1)  296/     80E : =>TRUE                      IF "RU" > ''
(1)  296/     80E : 52 55                       DB "RU"
(1)  296/     810 : [296]                       ENDIF
(1)  296/     810 : CE                          DB 'N' | 80h               
(1)  297/     811 : (MACRO)                     IL_J XEC
(1)  297/     811 : 38 0A                       DW 3800H | XEC-STRT & 7FFh
(1)  298/     813 : (MACRO)             CLER    IL_BC PLOT, "CLEA",'R'  ;BC      :PLOT     'CLEAR'
(1)  298/     813 : 86                          DB 80h + ((PLOT-$-1)&31)
(1)  298/     814 : =>TRUE                      IF "CLEA" > ''
(1)  298/     814 : 43 4C 45 41                 DB "CLEA"
(1)  298/     818 : [298]                       ENDIF
(1)  298/     818 : D2                          DB 'R' | 80h               
(1)  299/     819 : (MACRO)                     IL_MT                   ;MT
(1)  299/     819 : 2B                          DB 2Bh
(1)  300/     81A : (MACRO)             PLOT    IL_BC PO1, "PLO",'T'    ;BC      Z246      'PLOT'
(1)  300/     81A : 9A                          DB 80h + ((PO1-$-1)&31)
(1)  300/     81B : =>TRUE                      IF "PLO" > ''
(1)  300/     81B : 50 4C 4F                    DB "PLO"
(1)  300/     81E : [300]                       ENDIF
(1)  300/     81E : D4                          DB 'T' | 80h               
(1)  301/     81F : (MACRO)                     IL_JS EXPR
(1)  301/     81F : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  302/     821 : (MACRO)                     IL_BC PO2, 0, ','       ;BC      Z247      ','
(1)  302/     821 : 95                          DB 80h + ((PO2-$-1)&31)
(1)  302/     822 : =>FALSE                     IF 0 > ''
(1)  302/     822 :                             DB 0
(1)  302/     822 : [302]                       ENDIF
(1)  302/     822 : AC                          DB ',' | 80h               
(1)  303/     823 : (MACRO)                     IL_DS                   ;DS
(1)  303/     823 : 0B                          DB 0Bh
(1)  304/     824 : (MACRO)                     IL_DS                   ;DS
(1)  304/     824 : 0B                          DB 0Bh
(1)  305/     825 : (MACRO)                     IL_LN 42                ;LN      42
(1)  305/     825 : 0A                          DB 0Ah
(1)  305/     826 : 00 2A                       DW 42 & 0FFFFh
(1)  306/     828 : (MACRO)                     IL_JS RELOP1            ;JS      Z248      COMPARE >0 AND <42
(1)  306/     828 : 32 62                       DW 3000H | RELOP1-STRT & 7FFh
(1)  307/     82A : (MACRO)                     IL_LN 64                ;LN      64        MULTIPLY BY 64
(1)  307/     82A : 0A                          DB 0Ah
(1)  307/     82B : 00 40                       DW 64 & 0FFFFh
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 39 - 10/07/24 19:32:40


(1)  308/     82D : (MACRO)                     IL_MP                   ;MP
(1)  308/     82D : 1A                          DB 1AH
(1)  309/     82E : (MACRO)                     IL_LN 64                ;LN      64
(1)  309/     82E : 0A                          DB 0Ah
(1)  309/     82F : 00 40                       DW 64 & 0FFFFh
(1)  310/     831 : (MACRO)                     IL_JS EXPRJS            ;JS      EXPRJS    GET NEXT EXPR AND COMP >0 AND <64
(1)  310/     831 : 32 5A                       DW 3000H | EXPRJS-STRT & 7FFh
(1)  311/     833 : (MACRO)                     IL_AD                   ;AD                ADD TOGETHER (X*64+Y)
(1)  311/     833 : 18                          DB 18H
(1)  312/     834 : (MACRO)                     IL_BR_F PO3             ;BR      Z250      SKIP JUMPS
(1)  312/     834 : 64                          DB 60h + (PO3-$-1)
(1)  313/     835 : (MACRO)             PO1     IL_J POKE
(1)  313/     835 : 31 02                       DW 3800H | POKE-STRT & 7FFh
(1)  314/     837 : (MACRO)             PO2     IL_J PO4                ;Z247       J       Z251
(1)  314/     837 : 30 F4                       DW 3800H | PO4-STRT & 7FFh
(1)  315/     839 : (MACRO)             PO3     IL_LN BUFF<<3           ;Z250       LN      BUFF<<3         BUFF*8
(1)  315/     839 : 0A                          DB 0Ah
(1)  315/     83A : 6D 80                       DW BUFF<<3 & 0FFFFh
(1)  316/     83C : (MACRO)                     IL_AD                   ;AD                ADD (BUFF*8)+(X*64+Y)
(1)  316/     83C : 18                          DB 18H
(1)  317/     83D : (MACRO)                     IL_DS                   ;DS
(1)  317/     83D : 0B                          DB 0Bh
(1)  318/     83E : (MACRO)                     IL_LN 8                 ;LN      8
(1)  318/     83E : 0A                          DB 0Ah
(1)  318/     83F : 00 08                       DW 8 & 0FFFFh
(1)  319/     841 : (MACRO)                     IL_DV                   ;DV                ((BUFF*8)+(X*64+Y))/8
(1)  319/     841 : 1B                          DB 1BH
(1)  320/     842 : (MACRO)                     IL_DS                   ;DS
(1)  320/     842 : 0B                          DB 0Bh
(1)  321/     843 : (MACRO)                     IL_SX 4                 ;SX 4
(1)  321/     843 : 04                          DB 00h + (4 & 07h)
(1)  322/     844 : (MACRO)                     IL_SX 2                 ;SX 2
(1)  322/     844 : 02                          DB 00h + (2 & 07h)
(1)  323/     845 : (MACRO)                     IL_SX 5                 ;SX 5
(1)  323/     845 : 05                          DB 00h + (5 & 07h)
(1)  324/     846 : (MACRO)                     IL_SX 3                 ;SX 3
(1)  324/     846 : 03                          DB 00h + (3 & 07h)
(1)  325/     847 : (MACRO)                     IL_SX 5                 ;SX 5
(1)  325/     847 : 05                          DB 00h + (5 & 07h)
(1)  326/     848 : (MACRO)                     IL_LN 8                 ;LN      8
(1)  326/     848 : 0A                          DB 0Ah
(1)  326/     849 : 00 08                       DW 8 & 0FFFFh
(1)  327/     84B : (MACRO)                     IL_MP                   ;MP                 MULTIPLY BY 8
(1)  327/     84B : 1A                          DB 1AH
(1)  328/     84C : (MACRO)                     IL_SU                   ;SU                 GET REMANDER
(1)  328/     84C : 19                          DB 19H
(1)  329/     84D : (MACRO)                     IL_LB TVXY+2            ;LB      TVXY+2
(1)  329/     84D : 09 0A                       DB 09H, TVXY+2 & 0FFh      ;Push Literal byte onto stack
(1)  330/     84F : (MACRO)                     IL_SX 2                 ;SX 2
(1)  330/     84F : 02                          DB 00h + (2 & 07h)
(1)  331/     850 : (MACRO)                     IL_SV                   ;SV                 STORE NEW BIT POINTER
(1)  331/     850 : 13                          DB 13H
(1)  332/     851 : (MACRO)                     IL_LB TVXY              ;LB      TVXY
(1)  332/     851 : 09 08                       DB 09H, TVXY & 0FFh      ;Push Literal byte onto stack
(1)  333/     853 : (MACRO)                     IL_SX 2                 ;SX 2
(1)  333/     853 : 02                          DB 00h + (2 & 07h)
(1)  334/     854 : (MACRO)                     IL_SX 1                 ;SX 1
(1)  334/     854 : 01                          DB 00h + (1 & 07h)
(1)  335/     855 : (MACRO)                     IL_SV                   ;SV                 STORE NEW CURSOR
(1)  335/     855 : 13                          DB 13H
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 40 - 10/07/24 19:32:40


(1)  336/     856 : (MACRO)                     IL_BC PO5, '', ','      ;BC      Z252      ','
(1)  336/     856 : 8F                          DB 80h + ((PO5-$-1)&31)
(1)  336/     857 : =>FALSE                     IF '' > ''
(1)  336/     857 :                             DB ''
(1)  336/     857 : [336]                       ENDIF
(1)  336/     857 : AC                          DB ',' | 80h               
(1)  337/     858 : (MACRO)                     IL_JS EXPR
(1)  337/     858 : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  338/     85A : (MACRO)             PO4     IL_BE $+1               ;Z251       BE      * !245
(1)  338/     85A : E0                          DB 0E0h + (($+1-$-1)&31)
(1)  339/     85B : (MACRO)                     IL_LN TYPEV             ;LN      TYPEV
(1)  339/     85B : 0A                          DB 0Ah
(1)  339/     85C : 01 09                       DW TYPEV & 0FFFFh
(1)  340/     85E : (MACRO)                     IL_SX 2                 ;SX 2
(1)  340/     85E : 02                          DB 00h + (2 & 07h)
(1)  341/     85F : (MACRO)                     IL_SX 1                 ;SX 1
(1)  341/     85F : 01                          DB 00h + (1 & 07h)
(1)  342/     860 : (MACRO)                     IL_SX 3                 ;SX 3
(1)  342/     860 : 03                          DB 00h + (3 & 07h)
(1)  343/     861 : (MACRO)                     IL_SX 1                 ;SX 1
(1)  343/     861 : 01                          DB 00h + (1 & 07h)
(1)  344/     862 : (MACRO)                     IL_DS                   ;DS
(1)  344/     862 : 0B                          DB 0Bh
(1)  345/     863 : (MACRO)                     IL_US                   ;US                CALL TYPEV AND OUTPUT BYTE
(1)  345/     863 : 2E                          DB 2Eh
(1)  346/     864 : (MACRO)                     IL_SP                   ;SP                POP RETURNED VALUE
(1)  346/     864 : 0C                          DB 0Ch
(1)  347/     865 : (MACRO)                     IL_NX                   ;NX                NEXT STATEMENT
(1)  347/     865 : 1D                          DB 1DH
(1)  348/     866 : (MACRO)             PO5     IL_BE $+1               ;Z252       BE      * !257
(1)  348/     866 : E0                          DB 0E0h + (($+1-$-1)&31)
(1)  349/     867 : (MACRO)                     IL_NX                   ;NX
(1)  349/     867 : 1D                          DB 1DH
(1)  350/     868 : (MACRO)             POKE    IL_BC OUT_, "POK", 'E'  ;BC      :OUT      'POKE'
(1)  350/     868 : 8A                          DB 80h + ((OUT_-$-1)&31)
(1)  350/     869 : =>TRUE                      IF "POK" > ''
(1)  350/     869 : 50 4F 4B                    DB "POK"
(1)  350/     86C : [350]                       ENDIF
(1)  350/     86C : C5                          DB 'E' | 80h               
(1)  351/     86D : (MACRO)                     IL_LN ILPOKE            ;LN      ILPOKE
(1)  351/     86D : 0A                          DB 0Ah
(1)  351/     86E : 01 18                       DW ILPOKE & 0FFFFh
(1)  352/     870 : (MACRO)                     IL_JS EXPR              ;JS      :EXPR
(1)  352/     870 : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  353/     872 : (MACRO)                     IL_BR_F OU1             ;BR      Z253
(1)  353/     872 : 6C                          DB 60h + (OU1-$-1)
(1)  354/     873 : (MACRO)             OUT_    IL_BC SAVE, "OU", 'T'   ;BC      :SAVE     'OUT'
(1)  354/     873 : 91                          DB 80h + ((SAVE-$-1)&31)
(1)  354/     874 : =>TRUE                      IF "OU" > ''
(1)  354/     874 : 4F 55                       DB "OU"
(1)  354/     876 : [354]                       ENDIF
(1)  354/     876 : D4                          DB 'T' | 80h               
(1)  355/     877 : (MACRO)                     IL_LN ILINPOUT          ;LN      ILINPOUT
(1)  355/     877 : 0A                          DB 0Ah
(1)  355/     878 : 01 26                       DW ILINPOUT & 0FFFFh
(1)  356/     87A : (MACRO)                     IL_LN 8                 ;LN      8
(1)  356/     87A : 0A                          DB 0Ah
(1)  356/     87B : 00 08                       DW 8 & 0FFFFh
(1)  357/     87D : (MACRO)                     IL_JS EXPRJS            ;JS      Z249      GET EXPR AND COMP >0 AND <8
(1)  357/     87D : 32 5A                       DW 3000H | EXPRJS-STRT & 7FFh
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 41 - 10/07/24 19:32:40


(1)  358/     87F : (MACRO)             OU1     IL_JS PE4               ;Z253       JS      Z245      CHECK FOR ,AND GET EXPR
(1)  358/     87F : 32 31                       DW 3000H | PE4-STRT & 7FFh
(1)  359/     881 : (MACRO)                     IL_BE $+1               ;BE      * !284
(1)  359/     881 : E0                          DB 0E0h + (($+1-$-1)&31)
(1)  360/     882 : (MACRO)                     IL_US                   ;US                CALL ILINPOUT OR ILPOKE
(1)  360/     882 : 2E                          DB 2Eh
(1)  361/     883 : (MACRO)                     IL_SP                   ;SP                POP RETURNED VALUE
(1)  361/     883 : 0C                          DB 0Ch
(1)  362/     884 : (MACRO)                     IL_NX                   ;NX                NEXT STATEMENT
(1)  362/     884 : 1D                          DB 1DH
(1)  363/     885 : (MACRO)             SAVE    IL_BC SA1, "SAV", 'E'   ;BC      Z254      'SAVE'
(1)  363/     885 : 9E                          DB 80h + ((SA1-$-1)&31)
(1)  363/     886 : =>TRUE                      IF "SAV" > ''
(1)  363/     886 : 53 41 56                    DB "SAV"
(1)  363/     889 : [363]                       ENDIF
(1)  363/     889 : C5                          DB 'E' | 80h               
(1)  364/     88A : (MACRO)                     IL_BE $+1               ;BE      * !293
(1)  364/     88A : E0                          DB 0E0h + (($+1-$-1)&31)
(1)  365/     88B : (MACRO)                     IL_PC "TURN ON RECOR",'D';PC                'TURN ON RECORD'
(1)  365/     88B : 24                          DB 24h
(1)  365/     88C : =>TRUE                      IF "TURN ON RECOR">''
(1)  365/     88C : 54 55 52 4E 20 4F           DB "TURN ON RECOR"
              892 : 4E 20 52 45 43 4F 
              898 : 52                
(1)  365/     899 : [365]                       ENDIF
(1)  365/     899 : =>TRUE                      IF 'D'>''
(1)  365/     899 : C4                          DB 'D' | 80h
(1)  365/     89A : [365]                       ENDIF             
(1)  366/     89A : (MACRO)                     IL_NL                   ;NL
(1)  366/     89A : 23                          DB 23H
(1)  367/     89B : (MACRO)                     IL_PC "HIT KE", 'Y'     ;PC                'HIT KEY'
(1)  367/     89B : 24                          DB 24h
(1)  367/     89C : =>TRUE                      IF "HIT KE">''
(1)  367/     89C : 48 49 54 20 4B 45           DB "HIT KE"
(1)  367/     8A2 : [367]                       ENDIF
(1)  367/     8A2 : =>TRUE                      IF 'Y'>''
(1)  367/     8A2 : D9                          DB 'Y' | 80h
(1)  367/     8A3 : [367]                       ENDIF             
(1)  368/     8A3 : (MACRO)                     IL_BR_F SA2             ;BR      Z255
(1)  368/     8A3 : 62                          DB 60h + (SA2-$-1)
(1)  369/     8A4 : (MACRO)             SA1     IL_J LOAD               ;Z254       J       :LOAD
(1)  369/     8A4 : 31 5C                       DW 3800H | LOAD-STRT & 7FFh
(1)  370/     8A6 : (MACRO)             SA2     IL_LN KEYV              ;Z255       LN      KEYV
(1)  370/     8A6 : 0A                          DB 0Ah
(1)  370/     8A7 : 01 06                       DW KEYV & 0FFFFh
(1)  371/     8A9 : (MACRO)                     IL_DS                   ;DS
(1)  371/     8A9 : 0B                          DB 0Bh
(1)  372/     8AA : (MACRO)                     IL_DS                   ;DS
(1)  372/     8AA : 0B                          DB 0Bh
(1)  373/     8AB : (MACRO)                     IL_US                   ;US                CALL KEY INPUT
(1)  373/     8AB : 2E                          DB 2Eh
(1)  374/     8AC : (MACRO)                     IL_SP                   ;SP                POP RETURNED VALUE
(1)  374/     8AC : 0C                          DB 0Ch
(1)  375/     8AD : (MACRO)                     IL_NL                   ;NL                NEW LINE
(1)  375/     8AD : 23                          DB 23H
(1)  376/     8AE : (MACRO)                     IL_LN ILSAVE            ;LN      ILSAVE
(1)  376/     8AE : 0A                          DB 0Ah
(1)  376/     8AF : 09 FC                       DW ILSAVE & 0FFFFh
(1)  377/     8B1 : (MACRO)                     IL_LB MEND              ;LB      MEND
(1)  377/     8B1 : 09 24                       DB 09H, MEND & 0FFh      ;Push Literal byte onto stack
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 42 - 10/07/24 19:32:40


(1)  378/     8B3 : (MACRO)                     IL_FV                   ;FV
(1)  378/     8B3 : 12                          DB 12h
(1)  379/     8B4 : (MACRO)                     IL_LB BASIC             ;LB      BASIC
(1)  379/     8B4 : 09 20                       DB 09H, BASIC & 0FFh      ;Push Literal byte onto stack
(1)  380/     8B6 : (MACRO)                     IL_FV                   ;FV
(1)  380/     8B6 : 12                          DB 12h
(1)  381/     8B7 : (MACRO)                     IL_SU                   ;SU                END PROGRAM-BEGIN PROGRAM
(1)  381/     8B7 : 19                          DB 19H
(1)  382/     8B8 : (MACRO)                     IL_LN 256               ;LN      256
(1)  382/     8B8 : 0A                          DB 0Ah
(1)  382/     8B9 : 01 00                       DW 256 & 0FFFFh
(1)  383/     8BB : (MACRO)                     IL_AD                   ;AD                ADD 256 ????
(1)  383/     8BB : 18                          DB 18H
(1)  384/     8BC : (MACRO)                     IL_LB BASIC             ;LB      BASIC
(1)  384/     8BC : 09 20                       DB 09H, BASIC & 0FFh      ;Push Literal byte onto stack
(1)  385/     8BE : (MACRO)                     IL_FV                   ;FV
(1)  385/     8BE : 12                          DB 12h
(1)  386/     8BF : (MACRO)                     IL_US                   ;US                CALL ILSAVE
(1)  386/     8BF : 2E                          DB 2Eh
(1)  387/     8C0 : (MACRO)                     IL_SP                   ;SP                POP RETURNED VALUE
(1)  387/     8C0 : 0C                          DB 0Ch
(1)  388/     8C1 : (MACRO)                     IL_NX                   ;NX                NEXT STATEMENT
(1)  388/     8C1 : 1D                          DB 1DH
(1)  389/     8C2 : (MACRO)             LOAD    IL_BC LO1, "LOA",'D'    ;BC      Z256      'LOAD'
(1)  389/     8C2 : 86                          DB 80h + ((LO1-$-1)&31)
(1)  389/     8C3 : =>TRUE                      IF "LOA" > ''
(1)  389/     8C3 : 4C 4F 41                    DB "LOA"
(1)  389/     8C6 : [389]                       ENDIF
(1)  389/     8C6 : C4                          DB 'D' | 80h               
(1)  390/     8C7 : (MACRO)                     IL_BE $+1               ;BE      * !354
(1)  390/     8C7 : E0                          DB 0E0h + (($+1-$-1)&31)
(1)  391/     8C8 : (MACRO)                     IL_BR_F LO2             ;BR      Z257
(1)  391/     8C8 : 62                          DB 60h + (LO2-$-1)
(1)  392/     8C9 : (MACRO)             LO1     IL_J REM                ;Z256       J       Z258
(1)  392/     8C9 : 31 85                       DW 3800H | REM-STRT & 7FFh
(1)  393/     8CB : (MACRO)             LO2     IL_LB MEND              ;Z257       LB      MEND
(1)  393/     8CB : 09 24                       DB 09H, MEND & 0FFh      ;Push Literal byte onto stack
(1)  394/     8CD : (MACRO)                     IL_LN ILLOAD            ;LN      ILLOAD
(1)  394/     8CD : 0A                          DB 0Ah
(1)  394/     8CE : 09 F9                       DW ILLOAD & 0FFFFh
(1)  395/     8D0 : (MACRO)                     IL_LN 1                 ;LN      1
(1)  395/     8D0 : 0A                          DB 0Ah
(1)  395/     8D1 : 00 01                       DW 1 & 0FFFFh
(1)  396/     8D3 : (MACRO)                     IL_LB BASIC             ;LB      BASIC
(1)  396/     8D3 : 09 20                       DB 09H, BASIC & 0FFh      ;Push Literal byte onto stack
(1)  397/     8D5 : (MACRO)                     IL_FV                   ;FV
(1)  397/     8D5 : 12                          DB 12h
(1)  398/     8D6 : (MACRO)                     IL_US                   ;US                CALL ILLOAD
(1)  398/     8D6 : 2E                          DB 2Eh
(1)  399/     8D7 : (MACRO)                     IL_BR_F LO3             ;BR      Z259      ILLOAD SKIPS THIS IF NO ERROR
(1)  399/     8D7 : 66                          DB 60h + (LO3-$-1)
(1)  400/     8D8 : (MACRO)                     IL_LN 018h              ;LN      0x18      SPARE STACK SIZE-1,DOES NOT GET IT?
(1)  400/     8D8 : 0A                          DB 0Ah
(1)  400/     8D9 : 00 18                       DW 018H & 0FFFFh
(1)  401/     8DB : (MACRO)                     IL_AD                   ;AD                ADD TO RETURN VALUE
(1)  401/     8DB : 18                          DB 18H
(1)  402/     8DC : (MACRO)                     IL_SV                   ;SV                SAVE MEM END
(1)  402/     8DC : 13                          DB 13H
(1)  403/     8DD : (MACRO)                     IL_WS                   ;WS                WARM START
(1)  403/     8DD : 2D                          DB 2Dh
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 43 - 10/07/24 19:32:40


(1)  404/     8DE : (MACRO)             LO3     IL_NL                   ;Z259       NL
(1)  404/     8DE : 23                          DB 23H
(1)  405/     8DF : (MACRO)                     IL_PC "TAPE ERRO", 'R'  ;PC                'TAPE ERROR'
(1)  405/     8DF : 24                          DB 24h
(1)  405/     8E0 : =>TRUE                      IF "TAPE ERRO">''
(1)  405/     8E0 : 54 41 50 45 20 45           DB "TAPE ERRO"
              8E6 : 52 52 4F          
(1)  405/     8E9 : [405]                       ENDIF
(1)  405/     8E9 : =>TRUE                      IF 'R'>''
(1)  405/     8E9 : D2                          DB 'R' | 80h
(1)  405/     8EA : [405]                       ENDIF             
(1)  406/     8EA : (MACRO)                     IL_MT                   ;MT
(1)  406/     8EA : 2B                          DB 2Bh
(1)  407/     8EB : (MACRO)             REM     IL_BC DFLT, "RE",'M'    ;Z258       BC      :DFLT     'REM'
(1)  407/     8EB : 84                          DB 80h + ((DFLT-$-1)&31)
(1)  407/     8EC : =>TRUE                      IF "RE" > ''
(1)  407/     8EC : 52 45                       DB "RE"
(1)  407/     8EE : [407]                       ENDIF
(1)  407/     8EE : CD                          DB 'M' | 80h               
(1)  408/     8EF : (MACRO)                     IL_NX                   ;NX
(1)  408/     8EF : 1D                          DB 1DH
(1)  409/     8F0 : (MACRO)             DFLT    IL_BV $+1               ;BV      * !395
(1)  409/     8F0 : A0                          DB 0A0h + (($+1-$-1)&31)
(1)  410/     8F1 : (MACRO)                     IL_BC $+1, '', '='      ;BC      * !397    '='
(1)  410/     8F1 : 80                          DB 80h + (($+1-$-1)&31)
(1)  410/     8F2 : =>FALSE                     IF '' > ''
(1)  410/     8F2 :                             DB ''
(1)  410/     8F2 : [410]                       ENDIF
(1)  410/     8F2 : BD                          DB '=' | 80h               
(1)  411/     8F3 : (MACRO)                     IL_J LET                ;J       :LET
(1)  411/     8F3 : 38 14                       DW 3800H | LET-STRT & 7FFh
(1)  412/     8F5 : (MACRO)             EXPR    IL_BC EX1, '', '-'      ;BC      Z260      '-'
(1)  412/     8F5 : 85                          DB 80h + ((EX1-$-1)&31)
(1)  412/     8F6 : =>FALSE                     IF '' > ''
(1)  412/     8F6 :                             DB ''
(1)  412/     8F6 : [412]                       ENDIF
(1)  412/     8F6 : AD                          DB '-' | 80h               
(1)  413/     8F7 : (MACRO)                     IL_JS TERM              ;JS      :TERM
(1)  413/     8F7 : 31 A6                       DW 3000H | TERM-STRT & 7FFh
(1)  414/     8F9 : (MACRO)                     IL_NE                   ;NE
(1)  414/     8F9 : 17                          DB 17H
(1)  415/     8FA : (MACRO)                     IL_BR_F EX3             ;BR      Z261
(1)  415/     8FA : 64                          DB 60h + (EX3-$-1)
(1)  416/     8FB : (MACRO)             EX1     IL_BC EX2, '','+'       ;Z260       BC      Z262      '+'
(1)  416/     8FB : 81                          DB 80h + ((EX2-$-1)&31)
(1)  416/     8FC : =>FALSE                     IF '' > ''
(1)  416/     8FC :                             DB ''
(1)  416/     8FC : [416]                       ENDIF
(1)  416/     8FC : AB                          DB '+' | 80h               
(1)  417/     8FD : (MACRO)             EX2     IL_JS TERM              ;Z262       JS      :TERM
(1)  417/     8FD : 31 A6                       DW 3000H | TERM-STRT & 7FFh
(1)  418/     8FF : (MACRO)             EX3     IL_BC EX4, '','+'       ;Z261       BC      Z263      '+'
(1)  418/     8FF : 85                          DB 80h + ((EX4-$-1)&31)
(1)  418/     900 : =>FALSE                     IF '' > ''
(1)  418/     900 :                             DB ''
(1)  418/     900 : [418]                       ENDIF
(1)  418/     900 : AB                          DB '+' | 80h               
(1)  419/     901 : (MACRO)                     IL_JS TERM              ;JS      :TERM
(1)  419/     901 : 31 A6                       DW 3000H | TERM-STRT & 7FFh
(1)  420/     903 : (MACRO)                     IL_AD                   ;AD
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 44 - 10/07/24 19:32:40


(1)  420/     903 : 18                          DB 18H
(1)  421/     904 : (MACRO)                     IL_BR_B EX3             ;BR      Z261
(1)  421/     904 : 5A                          DB 60h - (1+$-EX3)
(1)  422/     905 : (MACRO)             EX4     IL_BC ERT, '','-'       ;Z263       BC      Z264      '-'
(1)  422/     905 : 85                          DB 80h + ((ERT-$-1)&31)
(1)  422/     906 : =>FALSE                     IF '' > ''
(1)  422/     906 :                             DB ''
(1)  422/     906 : [422]                       ENDIF
(1)  422/     906 : AD                          DB '-' | 80h               
(1)  423/     907 : (MACRO)                     IL_JS TERM              ;JS      :TERM
(1)  423/     907 : 31 A6                       DW 3000H | TERM-STRT & 7FFh
(1)  424/     909 : (MACRO)                     IL_SU                   ;SU
(1)  424/     909 : 19                          DB 19H
(1)  425/     90A : (MACRO)                     IL_BR_B EX3             ;BR      Z261
(1)  425/     90A : 54                          DB 60h - (1+$-EX3)
(1)  426/     90B : (MACRO)             ERT     IL_RT                   ;Z264       RT
(1)  426/     90B : 2F                          DB 2Fh
(1)  427/     90C : (MACRO)             TERM    IL_JS RND               ;JS      :RND
(1)  427/     90C : 31 B5                       DW 3000H | RND-STRT & 7FFh
(1)  428/     90E : (MACRO)             TE1     IL_BC TE2, '','*'       ;Z266       BC      Z265      '*'
(1)  428/     90E : 85                          DB 80h + ((TE2-$-1)&31)
(1)  428/     90F : =>FALSE                     IF '' > ''
(1)  428/     90F :                             DB ''
(1)  428/     90F : [428]                       ENDIF
(1)  428/     90F : AA                          DB '*' | 80h               
(1)  429/     910 : (MACRO)                     IL_JS RND               ;JS      :RND
(1)  429/     910 : 31 B5                       DW 3000H | RND-STRT & 7FFh
(1)  430/     912 : (MACRO)                     IL_MP                   ;MP
(1)  430/     912 : 1A                          DB 1AH
(1)  431/     913 : (MACRO)                     IL_BR_B TE1             ;BR      Z266
(1)  431/     913 : 5A                          DB 60h - (1+$-TE1)
(1)  432/     914 : (MACRO)             TE2     IL_BC TER, '','/'       ;Z265       BC      Z267      '/'
(1)  432/     914 : 85                          DB 80h + ((TER-$-1)&31)
(1)  432/     915 : =>FALSE                     IF '' > ''
(1)  432/     915 :                             DB ''
(1)  432/     915 : [432]                       ENDIF
(1)  432/     915 : AF                          DB '/' | 80h               
(1)  433/     916 : (MACRO)                     IL_JS RND               ;JS      :RND
(1)  433/     916 : 31 B5                       DW 3000H | RND-STRT & 7FFh
(1)  434/     918 : (MACRO)                     IL_DV                   ;DV
(1)  434/     918 : 1B                          DB 1BH
(1)  435/     919 : (MACRO)                     IL_BR_B TE1             ;BR      Z266
(1)  435/     919 : 54                          DB 60h - (1+$-TE1)
(1)  436/     91A : (MACRO)             TER     IL_RT                   ;Z267       RT
(1)  436/     91A : 2F                          DB 2Fh
(1)  437/     91B : (MACRO)             RND     IL_BC RUSR, "RND",'('   ;BC      Z268      'RND('
(1)  437/     91B : 99                          DB 80h + ((RUSR-$-1)&31)
(1)  437/     91C : =>TRUE                      IF "RND" > ''
(1)  437/     91C : 52 4E 44                    DB "RND"
(1)  437/     91F : [437]                       ENDIF
(1)  437/     91F : A8                          DB '(' | 80h               
(1)  438/     920 : (MACRO)                     IL_LN 8080h             ;LN      0x8080
(1)  438/     920 : 0A                          DB 0Ah
(1)  438/     921 : 80 80                       DW 8080H & 0FFFFh
(1)  439/     923 : (MACRO)                     IL_FV                   ;FV
(1)  439/     923 : 12                          DB 12h
(1)  440/     924 : (MACRO)                     IL_LN 0929h             ;LN      0x0929
(1)  440/     924 : 0A                          DB 0Ah
(1)  440/     925 : 09 29                       DW 0929H & 0FFFFh
(1)  441/     927 : (MACRO)                     IL_MP                   ;MP
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 45 - 10/07/24 19:32:40


(1)  441/     927 : 1A                          DB 1AH
(1)  442/     928 : (MACRO)                     IL_LN 1A85h             ;LN      0x1A85
(1)  442/     928 : 0A                          DB 0Ah
(1)  442/     929 : 1A 85                       DW 1A85H & 0FFFFh
(1)  443/     92B : (MACRO)                     IL_AD                   ;AD
(1)  443/     92B : 18                          DB 18H
(1)  444/     92C : (MACRO)                     IL_SV                   ;SV
(1)  444/     92C : 13                          DB 13H
(1)  445/     92D : (MACRO)                     IL_LB 80h               ;LB      0x80
(1)  445/     92D : 09 80                       DB 09H, 80H & 0FFh      ;Push Literal byte onto stack
(1)  446/     92F : (MACRO)                     IL_FV                   ;FV
(1)  446/     92F : 12                          DB 12h
(1)  447/     930 : (MACRO)                     IL_SX 1                 ;SX 1
(1)  447/     930 : 01                          DB 00h + (1 & 07h)
(1)  448/     931 : (MACRO)                     IL_DS                   ;DS
(1)  448/     931 : 0B                          DB 0Bh
(1)  449/     932 : (MACRO)                     IL_JS PEXPR             ;JS      Z269
(1)  449/     932 : 32 2C                       DW 3000H | PEXPR-STRT & 7FFh
(1)  450/     934 : (MACRO)                     IL_BR_F RN1             ;BR      Z270
(1)  450/     934 : 61                          DB 60h + (RN1-$-1)
(1)  451/     935 : (MACRO)             RUSR    IL_BR_F USR
(1)  451/     935 : 72                          DB 60h + (USR-$-1)
(1)  452/     936 : (MACRO)             RN1     IL_DS                   ;Z270       DS
(1)  452/     936 : 0B                          DB 0Bh
(1)  453/     937 : (MACRO)                     IL_SX 4                 ;SX 4
(1)  453/     937 : 04                          DB 00h + (4 & 07h)
(1)  454/     938 : (MACRO)                     IL_SX 2                 ;SX 2
(1)  454/     938 : 02                          DB 00h + (2 & 07h)
(1)  455/     939 : (MACRO)                     IL_SX 3                 ;SX 3
(1)  455/     939 : 03                          DB 00h + (3 & 07h)
(1)  456/     93A : (MACRO)                     IL_SX 5                 ;SX 5
(1)  456/     93A : 05                          DB 00h + (5 & 07h)
(1)  457/     93B : (MACRO)                     IL_SX 3                 ;SX 3
(1)  457/     93B : 03                          DB 00h + (3 & 07h)
(1)  458/     93C : (MACRO)                     IL_DV                   ;DV
(1)  458/     93C : 1B                          DB 1BH
(1)  459/     93D : (MACRO)                     IL_MP                   ;MP
(1)  459/     93D : 1A                          DB 1AH
(1)  460/     93E : (MACRO)                     IL_SU                   ;SU
(1)  460/     93E : 19                          DB 19H
(1)  461/     93F : (MACRO)                     IL_DS                   ;DS
(1)  461/     93F : 0B                          DB 0Bh
(1)  462/     940 : (MACRO)                     IL_LB 6                 ;LB      6
(1)  462/     940 : 09 06                       DB 09H, 6 & 0FFh      ;Push Literal byte onto stack
(1)  463/     942 : (MACRO)                     IL_LN 0                 ;LN      0
(1)  463/     942 : 0A                          DB 0Ah
(1)  463/     943 : 00 00                       DW 0 & 0FFFFh
(1)  464/     945 : (MACRO)                     IL_CP                   ;CP
(1)  464/     945 : 1C                          DB 1CH
(1)  465/     946 : (MACRO)                     IL_NE                   ;NE
(1)  465/     946 : 17                          DB 17H
(1)  466/     947 : (MACRO)                     IL_RT                   ;RT
(1)  466/     947 : 2F                          DB 2Fh
(1)  467/     948 : (MACRO)             USR     IL_BC INP, "USR",'('    ;BC      :INP      'USR('
(1)  467/     948 : 8E                          DB 80h + ((INP-$-1)&31)
(1)  467/     949 : =>TRUE                      IF "USR" > ''
(1)  467/     949 : 55 53 52                    DB "USR"
(1)  467/     94C : [467]                       ENDIF
(1)  467/     94C : A8                          DB '(' | 80h               
(1)  468/     94D : (MACRO)                     IL_JS EXPR              ;JS      :EXPR
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 46 - 10/07/24 19:32:40


(1)  468/     94D : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  469/     94F : (MACRO)                     IL_JS PE4               ;JS      Z245
(1)  469/     94F : 32 31                       DW 3000H | PE4-STRT & 7FFh
(1)  470/     951 : (MACRO)                     IL_JS PE4               ;JS      Z245
(1)  470/     951 : 32 31                       DW 3000H | PE4-STRT & 7FFh
(1)  471/     953 : (MACRO)                     IL_BC $+1, '',')'       ;BC      * !495    ')'
(1)  471/     953 : 80                          DB 80h + (($+1-$-1)&31)
(1)  471/     954 : =>FALSE                     IF '' > ''
(1)  471/     954 :                             DB ''
(1)  471/     954 : [471]                       ENDIF
(1)  471/     954 : A9                          DB ')' | 80h               
(1)  472/     955 : (MACRO)                     IL_US                   ;US
(1)  472/     955 : 2E                          DB 2Eh
(1)  473/     956 : (MACRO)                     IL_RT                   ;RT
(1)  473/     956 : 2F                          DB 2Fh
(1)  474/     957 : (MACRO)             INP     IL_BC FLG, "INP",'('    ;BC      :FLG      'INP('
(1)  474/     957 : 91                          DB 80h + ((FLG-$-1)&31)
(1)  474/     958 : =>TRUE                      IF "INP" > ''
(1)  474/     958 : 49 4E 50                    DB "INP"
(1)  474/     95B : [474]                       ENDIF
(1)  474/     95B : A8                          DB '(' | 80h               
(1)  475/     95C : (MACRO)                     IL_LN ILINPOUT          ;LN      ILINPOUT
(1)  475/     95C : 0A                          DB 0Ah
(1)  475/     95D : 01 26                       DW ILINPOUT & 0FFFFh
(1)  476/     95F : (MACRO)                     IL_LN 8                 ;LN      8
(1)  476/     95F : 0A                          DB 0Ah
(1)  476/     960 : 00 08                       DW 8 & 0FFFFh
(1)  477/     962 : (MACRO)                     IL_JS EXPRJS            ;JS      Z249      GET EXPR AND COMP >0 AND <8
(1)  477/     962 : 32 5A                       DW 3000H | EXPRJS-STRT & 7FFh
(1)  478/     964 : (MACRO)                     IL_LN 8                 ;LN      8         ADD 8 TO OP FOR INPUT
(1)  478/     964 : 0A                          DB 0Ah
(1)  478/     965 : 00 08                       DW 8 & 0FFFFh
(1)  479/     967 : (MACRO)                     IL_AD                   ;AD
(1)  479/     967 : 18                          DB 18H
(1)  480/     968 : (MACRO)                     IL_BR_F PE1             ;BR      Z271
(1)  480/     968 : 7D                          DB 60h + (PE1-$-1)
(1)  481/     969 : (MACRO)             FLG     IL_BC PEEK_, "FLG",'('  ;BC      :PEEK     'FLG('
(1)  481/     969 : 91                          DB 80h + ((PEEK_-$-1)&31)
(1)  481/     96A : =>TRUE                      IF "FLG" > ''
(1)  481/     96A : 46 4C 47                    DB "FLG"
(1)  481/     96D : [481]                       ENDIF
(1)  481/     96D : A8                          DB '(' | 80h               
(1)  482/     96E : (MACRO)                     IL_LN ILFLG             ;LN      ILFLG     FLG WAS NEVER DOCUMENTED
(1)  482/     96E : 0A                          DB 0Ah
(1)  482/     96F : 09 F7                       DW ILFLG & 0FFFFh
(1)  483/     971 : (MACRO)                     IL_LN 5                 ;LN      5
(1)  483/     971 : 0A                          DB 0Ah
(1)  483/     972 : 00 05                       DW 5 & 0FFFFh
(1)  484/     974 : (MACRO)                     IL_JS EXPRJS            ;JS      Z249      GET EXPR AND COMP >0 AND <5
(1)  484/     974 : 32 5A                       DW 3000H | EXPRJS-STRT & 7FFh
(1)  485/     976 : (MACRO)                     IL_LN 1                 ;LN      1
(1)  485/     976 : 0A                          DB 0Ah
(1)  485/     977 : 00 01                       DW 1 & 0FFFFh
(1)  486/     979 : (MACRO)                     IL_SU                   ;SU                SUB 1
(1)  486/     979 : 19                          DB 19H
(1)  487/     97A : (MACRO)                     IL_BR_F PE1             ;BR      Z271
(1)  487/     97A : 6B                          DB 60h + (PE1-$-1)
(1)  488/     97B : (MACRO)             PEEK_   IL_BC PE5, "PEEK",'('   ;BC      Z272      'PEEK('
(1)  488/     97B : 8F                          DB 80h + ((PE5-$-1)&31)
(1)  488/     97C : =>TRUE                      IF "PEEK" > ''
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 47 - 10/07/24 19:32:40


(1)  488/     97C : 50 45 45 4B                 DB "PEEK"
(1)  488/     980 : [488]                       ENDIF
(1)  488/     980 : A8                          DB '(' | 80h               
(1)  489/     981 : (MACRO)                     IL_LN ILPEEK            ;LN      ILPEEK
(1)  489/     981 : 0A                          DB 0Ah
(1)  489/     982 : 01 14                       DW ILPEEK & 0FFFFh
(1)  490/     984 : (MACRO)                     IL_JS EXPR              ;JS      :EXPR
(1)  490/     984 : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  491/     986 : (MACRO)             PE1     IL_BC $+1, '',')'       ;Z271       BC      * !546    ')'
(1)  491/     986 : 80                          DB 80h + (($+1-$-1)&31)
(1)  491/     987 : =>FALSE                     IF '' > ''
(1)  491/     987 :                             DB ''
(1)  491/     987 : [491]                       ENDIF
(1)  491/     987 : A9                          DB ')' | 80h               
(1)  492/     988 : (MACRO)                     IL_DS                   ;DS
(1)  492/     988 : 0B                          DB 0Bh
(1)  493/     989 : (MACRO)                     IL_US                   ;US
(1)  493/     989 : 2E                          DB 2Eh
(1)  494/     98A : (MACRO)                     IL_RT                   ;RT
(1)  494/     98A : 2F                          DB 2Fh
(1)  495/     98B : (MACRO)             PE5     IL_BV PE2               ;Z272       BV      Z273
(1)  495/     98B : A2                          DB 0A0h + ((PE2-$-1)&31)
(1)  496/     98C : (MACRO)                     IL_FV                   ;FV
(1)  496/     98C : 12                          DB 12h
(1)  497/     98D : (MACRO)                     IL_RT                   ;RT
(1)  497/     98D : 2F                          DB 2Fh
(1)  498/     98E : (MACRO)             PE2     IL_BN PE3               ;Z273       BN      Z274
(1)  498/     98E : C1                          DB 0C0h + ((PE3-$-1)&31)
(1)  499/     98F : (MACRO)                     IL_RT                   ;RT
(1)  499/     98F : 2F                          DB 2Fh
(1)  500/     990 : (MACRO)             PE3     IL_BC $+1, '','('       ;Z274       BC      * !556    '('
(1)  500/     990 : 80                          DB 80h + (($+1-$-1)&31)
(1)  500/     991 : =>FALSE                     IF '' > ''
(1)  500/     991 :                             DB ''
(1)  500/     991 : [500]                       ENDIF
(1)  500/     991 : A8                          DB '(' | 80h               
(1)  501/     992 : (MACRO)             PEXPR   IL_JS EXPR              ;JS      :EXPR
(1)  501/     992 : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  502/     994 : (MACRO)                     IL_BC $+1, '', ')'      ;BC      * !560    ')'
(1)  502/     994 : 80                          DB 80h + (($+1-$-1)&31)
(1)  502/     995 : =>FALSE                     IF '' > ''
(1)  502/     995 :                             DB ''
(1)  502/     995 : [502]                       ENDIF
(1)  502/     995 : A9                          DB ')' | 80h               
(1)  503/     996 : (MACRO)                     IL_RT                   ;RT
(1)  503/     996 : 2F                          DB 2Fh
(1)  504/     997 : (MACRO)             PE4     IL_BC PE6, '',','       ;Z245       BC      Z275      ','
(1)  504/     997 : 83                          DB 80h + ((PE6-$-1)&31)
(1)  504/     998 : =>FALSE                     IF '' > ''
(1)  504/     998 :                             DB ''
(1)  504/     998 : [504]                       ENDIF
(1)  504/     998 : AC                          DB ',' | 80h               
(1)  505/     999 : (MACRO)                     IL_J EXPR               ;JS      :EXPR
(1)  505/     999 : 31 8F                       DW 3800H | EXPR-STRT & 7FFh
(1)  506/     99B : (MACRO)             PE6     IL_DS                   ;Z275       DS
(1)  506/     99B : 0B                          DB 0Bh
(1)  507/     99C : (MACRO)                     IL_RT                   ;RT
(1)  507/     99C : 2F                          DB 2Fh
(1)  508/     99D : (MACRO)             RELOP   IL_BC RELESS, '','='    ;Z237       BC      Z276      '='
(1)  508/     99D : 84                          DB 80h + ((RELESS-$-1)&31)
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 48 - 10/07/24 19:32:40


(1)  508/     99E : =>FALSE                     IF '' > ''
(1)  508/     99E :                             DB ''
(1)  508/     99E : [508]                       ENDIF
(1)  508/     99E : BD                          DB '=' | 80h               
(1)  509/     99F : (MACRO)                     IL_LB 2                 ;LB      2
(1)  509/     99F : 09 02                       DB 09H, 2 & 0FFh      ;Push Literal byte onto stack
(1)  510/     9A1 : (MACRO)                     IL_RT                   ;RT
(1)  510/     9A1 : 2F                          DB 2Fh
(1)  511/     9A2 : (MACRO)             RELESS  IL_BC REMORE2, '', '<'  ;Z276       BC      Z277      '<'
(1)  511/     9A2 : 8E                          DB 80h + ((REMORE2-$-1)&31)
(1)  511/     9A3 : =>FALSE                     IF '' > ''
(1)  511/     9A3 :                             DB ''
(1)  511/     9A3 : [511]                       ENDIF
(1)  511/     9A3 : BC                          DB '<' | 80h               
(1)  512/     9A4 : (MACRO)                     IL_BC REMORE, '', '='   ;BC      Z278      '='
(1)  512/     9A4 : 84                          DB 80h + ((REMORE-$-1)&31)
(1)  512/     9A5 : =>FALSE                     IF '' > ''
(1)  512/     9A5 :                             DB ''
(1)  512/     9A5 : [512]                       ENDIF
(1)  512/     9A5 : BD                          DB '=' | 80h               
(1)  513/     9A6 : (MACRO)                     IL_LB 3                 ;LB      3
(1)  513/     9A6 : 09 03                       DB 09H, 3 & 0FFh      ;Push Literal byte onto stack
(1)  514/     9A8 : (MACRO)                     IL_RT                   ;RT
(1)  514/     9A8 : 2F                          DB 2Fh
(1)  515/     9A9 : (MACRO)             REMORE  IL_BC REMORE1, '','>'   ;Z278       BC      Z279      '>'
(1)  515/     9A9 : 84                          DB 80h + ((REMORE1-$-1)&31)
(1)  515/     9AA : =>FALSE                     IF '' > ''
(1)  515/     9AA :                             DB ''
(1)  515/     9AA : [515]                       ENDIF
(1)  515/     9AA : BE                          DB '>' | 80h               
(1)  516/     9AB : (MACRO)                     IL_LB 5                 ;LB      5
(1)  516/     9AB : 09 05                       DB 09H, 5 & 0FFh      ;Push Literal byte onto stack
(1)  517/     9AD : (MACRO)                     IL_RT                   ;RT
(1)  517/     9AD : 2F                          DB 2Fh
(1)  518/     9AE : (MACRO)             REMORE1 IL_LB 1                 ;Z279       LB      1
(1)  518/     9AE : 09 01                       DB 09H, 1 & 0FFh      ;Push Literal byte onto stack
(1)  519/     9B0 : (MACRO)                     IL_RT                   ;RT
(1)  519/     9B0 : 2F                          DB 2Fh
(1)  520/     9B1 : (MACRO)             REMORE2 IL_BC $+1, '','>'       ;Z277       BC      * !589    '>'
(1)  520/     9B1 : 80                          DB 80h + (($+1-$-1)&31)
(1)  520/     9B2 : =>FALSE                     IF '' > ''
(1)  520/     9B2 :                             DB ''
(1)  520/     9B2 : [520]                       ENDIF
(1)  520/     9B2 : BE                          DB '>' | 80h               
(1)  521/     9B3 : (MACRO)                     IL_BC RELESS1, '','='   ;BC      Z280      '='
(1)  521/     9B3 : 84                          DB 80h + ((RELESS1-$-1)&31)
(1)  521/     9B4 : =>FALSE                     IF '' > ''
(1)  521/     9B4 :                             DB ''
(1)  521/     9B4 : [521]                       ENDIF
(1)  521/     9B4 : BD                          DB '=' | 80h               
(1)  522/     9B5 : (MACRO)                     IL_LB 6                 ;LB      6
(1)  522/     9B5 : 09 06                       DB 09H, 6 & 0FFh      ;Push Literal byte onto stack
(1)  523/     9B7 : (MACRO)                     IL_RT                   ;RT
(1)  523/     9B7 : 2F                          DB 2Fh
(1)  524/     9B8 : (MACRO)             RELESS1 IL_BC RELESS2, '','<'   ;Z280       BC      Z281      '<'
(1)  524/     9B8 : 84                          DB 80h + ((RELESS2-$-1)&31)
(1)  524/     9B9 : =>FALSE                     IF '' > ''
(1)  524/     9B9 :                             DB ''
(1)  524/     9B9 : [524]                       ENDIF
(1)  524/     9B9 : BC                          DB '<' | 80h               
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm(TB_IL.asm) - Page 49 - 10/07/24 19:32:40


(1)  525/     9BA : (MACRO)                     IL_LB 5                 ;LB      5
(1)  525/     9BA : 09 05                       DB 09H, 5 & 0FFh      ;Push Literal byte onto stack
(1)  526/     9BC : (MACRO)                     IL_RT                   ;RT
(1)  526/     9BC : 2F                          DB 2Fh
(1)  527/     9BD : (MACRO)             RELESS2 IL_LB 4                 ;Z281       LB      4
(1)  527/     9BD : 09 04                       DB 09H, 4 & 0FFh      ;Push Literal byte onto stack
(1)  528/     9BF : (MACRO)                     IL_RT                   ;RT
(1)  528/     9BF : 2F                          DB 2Fh
(1)  529/     9C0 : (MACRO)             EXPRJS  IL_JS EXPR              ;JS      :EXPR
(1)  529/     9C0 : 31 8F                       DW 3000H | EXPR-STRT & 7FFh
(1)  530/     9C2 : (MACRO)                     IL_DS                   ;DS
(1)  530/     9C2 : 0B                          DB 0Bh
(1)  531/     9C3 : (MACRO)                     IL_DS                   ;DS
(1)  531/     9C3 : 0B                          DB 0Bh
(1)  532/     9C4 : (MACRO)                     IL_SX 6                 ;SX 6
(1)  532/     9C4 : 06                          DB 00h + (6 & 07h)
(1)  533/     9C5 : (MACRO)                     IL_SX 1                 ;SX 1
(1)  533/     9C5 : 01                          DB 00h + (1 & 07h)
(1)  534/     9C6 : (MACRO)                     IL_SX 7                 ;SX 7
(1)  534/     9C6 : 07                          DB 00h + (7 & 07h)
(1)  535/     9C7 : (MACRO)                     IL_SX 1                 ;SX 1
(1)  535/     9C7 : 01                          DB 00h + (1 & 07h)
(1)  536/     9C8 : (MACRO)             RELOP1  IL_LB 1                 ;Z248       LB      1
(1)  536/     9C8 : 09 01                       DB 09H, 1 & 0FFh      ;Push Literal byte onto stack
(1)  537/     9CA : (MACRO)                     IL_SX 2                 ;SX 2
(1)  537/     9CA : 02                          DB 00h + (2 & 07h)
(1)  538/     9CB : (MACRO)                     IL_SX 1                 ;SX 1
(1)  538/     9CB : 01                          DB 00h + (1 & 07h)
(1)  539/     9CC : (MACRO)                     IL_CP                   ;CP
(1)  539/     9CC : 1C                          DB 1CH
(1)  540/     9CD : (MACRO)                     IL_BR_F $+1             ;BR      * !616
(1)  540/     9CD : 60                          DB 60h + ($+1-$-1)
(1)  541/     9CE : (MACRO)                     IL_LB 6                 ;LB      6
(1)  541/     9CE : 09 06                       DB 09H, 6 & 0FFh      ;Push Literal byte onto stack
(1)  542/     9D0 : (MACRO)                     IL_LN 0                 ;LN      0
(1)  542/     9D0 : 0A                          DB 0Ah
(1)  542/     9D1 : 00 00                       DW 0 & 0FFFFh
(1)  543/     9D3 : (MACRO)                     IL_CP                   ;CP
(1)  543/     9D3 : 1C                          DB 1CH
(1)  544/     9D4 : (MACRO)                     IL_BR_F $+1             ;BR      * !623
(1)  544/     9D4 : 60                          DB 60h + ($+1-$-1)
(1)  545/     9D5 : (MACRO)             ENDIL   IL_RT                   ;RT                 End Of IL Program
(1)  545/     9D5 : 2F                          DB 2Fh
    1444/     9D6 :                     
    1445/     9D6 : F8 84               TVON       LDI     (INTERUPT)&255  ;SETUP INTERRUPT ROUTINE
    1446/     9D8 : A1                             PLO     R1
    1447/     9D9 : F8 0C                          LDI     (INTERUPT)>>8
    1448/     9DB : B1                             PHI     R1
    1449/     9DC : 34 DC               -          B1      -         ;LOOP UNTIL EF1 GOES FALSE
    1450/     9DE :                     ;                  (EF1 brackets the 1861 interrupt request)
    1451/     9DE : 69                             INP     1         ;TURN ON 1861
    1452/     9DF : E3                             SEX     R3
    1453/     9E0 : 70                             RET               ;ENABLE INTERRUPTS
    1454/     9E1 : (MACRO)                        RETURN
    1454/     9E1 : D5                          SEP R5
    1455/     9E2 : 00                             DB 00
    1456/     9E3 : F9 34               Z283       ORI     034h      ;MAKE FLG BRANCH
    1457/     9E5 : BF                             PHI     RF        ;SAVE HIGH F
    1458/     9E6 : 2D                             DEC     RD
    1459/     9E7 : ED                             SEX     RD        ;X=D
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 50 - 10/07/24 19:32:40


    1460/     9E8 : 8D                             GLO     RD        ;GLO D TO BRANCH TOO
    1461/     9E9 : AF                             PLO     RF        ;SAVE IN LOW F
    1462/     9EA : F8 D5                          LDI     0D5h       ;STORE RETURN
    1463/     9EC : 73                             STXD
    1464/     9ED : F8 9D                          LDI     09Dh       ;LDI0      STORE CLEAR
    1465/     9EF : 73                             STXD
    1466/     9F0 : 8F                             GLO     RF        ;STORE BRANCH TOO ADDRESS
    1467/     9F1 : 73                             STXD
    1468/     9F2 : 9F                             GHI     RF        ;STORE BRANCH INSTUCTION
    1469/     9F3 : 5D                             STR     RD
    1470/     9F4 : F8 01                          LDI     1         ;LOAD 1
    1471/     9F6 : DD                             SEP     RD        ;EXAMPLE  34XX  9D D5 BRANCH SKIPS C
    1472/     9F7 : 30 E3               ILFLG      BR      Z283
    1473/     9F9 : C0 0A 28            ILLOAD     LBR     Z284
    1474/     9FC : F8 F0               ILSAVE     LDI     0F0h        ;SAVE TO TAPE
    1475/     9FE : BC                             PHI     RC
    1476/     9FF : F8 65                          LDI     065h
    1477/     A01 : AC                             PLO     RC
    1478/     A02 : F8 80                          LDI     080h
    1479/     A04 : BD                             PHI     RD
    1480/     A05 : FF 00               Z285       SMI     0
    1481/     A07 : DC                             SEP     RC         ;GOSUB #F065 ROM CALLS
    1482/     A08 : 9D                             GHI     RD
    1483/     A09 : 3A 05                          BNZ     Z285
    1484/     A0B : 7B                  Z287       SEQ
    1485/     A0C : 4A                             LDA     RA
    1486/     A0D : BF                             PHI     RF
    1487/     A0E : F8 09                          LDI     9
    1488/     A10 : AF                             PLO     RF
    1489/     A11 : AD                             PLO     RD
    1490/     A12 : FE                             SHL
    1491/     A13 : DC                  Z286       SEP     RC
    1492/     A14 : 2F                             DEC     RF
    1493/     A15 : 9F                             GHI     RF
    1494/     A16 : FE                             SHL
    1495/     A17 : BF                             PHI     RF
    1496/     A18 : 8F                             GLO     RF
    1497/     A19 : 3A 13                          BNZ     Z286
    1498/     A1B : 8D                             GLO     RD
    1499/     A1C : F6                             SHR
    1500/     A1D : DC                             SEP     RC
    1501/     A1E : 28                             DEC     R8
    1502/     A1F : 98                             GHI     R8
    1503/     A20 : 3A 0B                          BNZ     Z287
    1504/     A22 : DC                             SEP     RC
    1505/     A23 : DC                             SEP     RC
    1506/     A24 : DC                             SEP     RC
    1507/     A25 : DC                             SEP     RC
    1508/     A26 : 7A                             REQ
    1509/     A27 : (MACRO)                        RETURN
    1509/     A27 : D5                          SEP R5
    1510/     A28 : F8 F0               Z284       LDI     0F0h        ;LOAD FROM TAPE
    1511/     A2A : BC                             PHI     RC
    1512/     A2B : F8 BA                          LDI     0BAh
    1513/     A2D : AC                             PLO     RC
    1514/     A2E : F8 F9               Z288       LDI     0F9h
    1515/     A30 : BD                             PHI     RD
    1516/     A31 : DC                  Z289       SEP     RC         ;GOSUB #F0BA ROM CALLS
    1517/     A32 : 3B 2E                          BNF     Z288
    1518/     A34 : 9D                             GHI     RD
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 51 - 10/07/24 19:32:40


    1519/     A35 : 3A 31                          BNZ     Z289
    1520/     A37 : DC                  Z290       SEP     RC
    1521/     A38 : 33 37                          BDF     Z290
    1522/     A3A : F8 01                          LDI     1
    1523/     A3C : BD                             PHI     RD
    1524/     A3D : AD                             PLO     RD
    1525/     A3E : DC                  Z291       SEP     RC
    1526/     A3F : 9D                             GHI     RD
    1527/     A40 : 7E                             SHLC
    1528/     A41 : BD                             PHI     RD
    1529/     A42 : 3B 3E                          BNF     Z291
    1530/     A44 : DC                             SEP     RC
    1531/     A45 : 8D                             GLO     RD
    1532/     A46 : F6                             SHR
    1533/     A47 : 33 58                          BDF     Z292
    1534/     A49 : 9D                             GHI     RD
    1535/     A4A : 5A                             STR     RA
    1536/     A4B : EA                             SEX     RA
    1537/     A4C : 64                             OUT     4
    1538/     A4D : FC FF                          ADI     0FFh
    1539/     A4F : 88                             GLO     R8
    1540/     A50 : 7E                             SHLC
    1541/     A51 : A8                             PLO     R8
    1542/     A52 : FA 03                          ANI     003h
    1543/     A54 : 3A 37                          BNZ     Z290
    1544/     A56 : 19                             INC     R9
    1545/     A57 : 8A                             GLO     RA
    1546/     A58 : (MACRO)             Z292       RETURN
    1546/     A58 : D5                          SEP R5
    1547/     A59 :                     
    1548/     A59 : 9E                  INPUTR     GHI     RE         ;INPUT FROM KEYBOARD ROUTINE
    1549/     A5A : 32 AF                          BZ      KEYIN
    1550/     A5C : (MACRO)             Z293       SERIAL_B      Z293       ;SERIAL INPUT ROUTINE
    1550/     A5C : 37 5C                               B4 Z293
    1551/     A5E : F6                             SHR
    1552/     A5F : (MACRO)                        CALL    Z158
    1552/     A5F : D4                          SEP R4
    1552/     A60 : 00 F9                       dw Z158
    1553/     A62 : (MACRO)                        SERIAL_B      INPUTR
    1553/     A62 : 37 59                               B4 INPUTR
    1554/     A64 : F8 7F                          LDI     07Fh
    1555/     A66 : AF                  Z298       PLO     RF
    1556/     A67 : 9E                             GHI     RE
    1557/     A68 : F6                             SHR
    1558/     A69 : (MACRO)                        SERIAL_B      Z294
    1558/     A69 : 37 6F                               B4 Z294
    1559/     A6B : 3B 70                          BNF     Z295
    1560/     A6D : 7B                             SEQ
    1561/     A6E : 38                             SKP
    1562/     A6F : 7A                  Z294       REQ
    1563/     A70 : (MACRO)             Z295       CALL    SERIAL_DELAY
    1563/     A70 : D4                          SEP R4
    1563/     A71 : 00 F6                       dw SERIAL_DELAY
    1564/     A73 : 8F                             GLO     RF
    1565/     A74 : F6                             SHR
    1566/     A75 : AF                             PLO     RF
    1567/     A76 : (MACRO)                        SERIAL_BN    Z297
    1567/     A76 : 3F 7A                               BN4 Z297
    1568/     A78 : F9 80                          ORI     080h
    1569/     A7A : 33 66               Z297       BDF     Z298
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 52 - 10/07/24 19:32:40


    1570/     A7C :                     ;           GHI RE
    1571/     A7C :                     ;           SHR
    1572/     A7C :                     ;           SERIAL_B  +       ; Short branch on EF4=1
    1573/     A7C :                     ;           SEQ            ; Set Q=1
    1574/     A7C :                     ;           SKP            ; Skip next byte
    1575/     A7C :                     ;+		   REQ            ; Reset Q=0
    1576/     A7C : 7A                             REQ
    1577/     A7D : (MACRO)                        CALL   SERIAL_DELAY    ; Set P=R4 as program counter
    1577/     A7D : D4                          SEP R4
    1577/     A7E : 00 F6                       dw SERIAL_DELAY
    1578/     A80 : 8F                             GLO RF         ; Get low register RF
    1579/     A81 : (MACRO)                        RETURN
    1579/     A81 : D5                          SEP R5
    1580/     A82 :                     
    1581/     A82 : AC                  OUTPUTR    PLO     RC         ;OUTPUT TO SCREEN ROUTINE
    1582/     A83 : BC                             PHI     RC
    1583/     A84 : 9E                             GHI     RE
    1584/     A85 : 3A 8A                          BNZ     Z299
    1585/     A87 : 8C                             GLO     RC
    1586/     A88 : 30 B9                          BR      DISP
    1587/     A8A : F8 0A               Z299       LDI     00Ah        ;SERIAL OUTPUT ROUTINE
    1588/     A8C : AF                             PLO     RF
    1589/     A8D : (MACRO)                        CALL    SERIAL_DELAY
    1589/     A8D : D4                          SEP R4
    1589/     A8E : 00 F6                       dw SERIAL_DELAY
    1590/     A90 : FC 00                          ADI     0
    1591/     A92 : (MACRO)             Z300       CALL    SERIAL_DELAY
    1591/     A92 : D4                          SEP R4
    1591/     A93 : 00 F6                       dw SERIAL_DELAY
    1592/     A95 : C7                             LSNF
    1593/     A96 : 7A                             REQ
    1594/     A97 : 38                             SKP
    1595/     A98 : 7B                             SEQ
    1596/     A99 : 9C                             GHI     RC
    1597/     A9A : FF 00                          SMI     0
    1598/     A9C : 76                             SHRC
    1599/     A9D : BC                             PHI     RC
    1600/     A9E : 2F                             DEC     RF
    1601/     A9F : 8F                             GLO     RF
    1602/     AA0 : 3A 92                          BNZ     Z300
    1603/     AA2 : 8C                             GLO     RC
    1604/     AA3 : (MACRO)                        RETURN
    1604/     AA3 : D5                          SEP R5
    1605/     AA4 : (MACRO)             BLINK      FETCH   TIME_+2;   LOOK AT TIMER
    1605/     AA4 : D7                          SEP R7
    1605/     AA5 : 0F                          db (TIME_+2)&255
    1606/     AA6 : FE                             SHL
    1607/     AA7 : FE                             SHL
    1608/     AA8 : FE                             SHL
    1609/     AA9 : 3A B2                          BNZ     Z301
    1610/     AAB : 7E                             SHLC               ;EVERY HALF SECOND
    1611/     AAC : (MACRO)                        CALL    TVD        ;TOGGLE CURSOR
    1611/     AAC : D4                          SEP R4
    1611/     AAD : 0A D8                       dw TVD
    1612/     AAF : (MACRO)             KEYIN      CALL    TVON       ;TURN DISPLAY ON
    1612/     AAF : D4                          SEP R4
    1612/     AB0 : 09 D6                       dw TVON
    1613/     AB2 : (MACRO)             Z301       KB_BN     BLINK      ;WAIT FOR KEYIN
    1613/     AB2 : 3E A4                               BN3 BLINK
    1614/     AB4 : 9D                             GHI     RD
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 53 - 10/07/24 19:32:40


    1615/     AB5 : (MACRO)                        CALL    TVD        ;TURN CURSOR OFF
    1615/     AB5 : D4                          SEP R4
    1615/     AB6 : 0A D8                       dw TVD
    1616/     AB8 : (MACRO)                        KB_INP             ;GET KEYIN
    1616/     AB8 : 6F                                  INP   7
    1617/     AB9 : (MACRO)             DISP       CALL    TVD        ;DISPLAY CHAR
    1617/     AB9 : D4                          SEP R4
    1617/     ABA : 0A D8                       dw TVD
    1618/     ABC : AE                             PLO     RE
    1619/     ABD : FB 0A                          XRI     00Ah       ;IF <LF>
    1620/     ABF : 32 C5                          BZ      HOLD       ;YES
    1621/     AC1 : (MACRO)                        SERIAL_B  HOLD     ;ALSO HOLD ON EF4
    1621/     AC1 : 37 C5                               B4 HOLD
    1622/     AC3 : 8E                             GLO     RE
    1623/     AC4 : (MACRO)                        RETURN
    1623/     AC4 : D5                          SEP R5
    1624/     AC5 : (MACRO)             HOLD       CALL    TVON       ;TURN DISPLAY ON
    1624/     AC5 : D4                          SEP R4
    1624/     AC6 : 09 D6                       dw TVON
    1625/     AC8 : F8 0C               TVOFF      LDI     00Ch       ;TV OFF AND DELAY
    1626/     ACA : BF                             PHI     RF
    1627/     ACB : 2F                  -          DEC     RF
    1628/     ACC : 9F                             GHI     RF
    1629/     ACD : 3A CB                          BNZ     -
    1630/     ACF : (MACRO)             -          SERIAL_B      -     ;THEN WAIT FOR /4
    1630/     ACF : 37 CF                               B4 -
    1631/     AD1 : E3                             SEX     R3
    1632/     AD2 : 61                             OUT     1           ;TURN DISPLAY OFF
    1633/     AD3 : 00                             IDL
    1634/     AD4 : 8E                             GLO     RE
    1635/     AD5 : 71                             DIS
    1636/     AD6 : (MACRO)                        RETURN
    1636/     AD6 : D5                          SEP R5
    1637/     AD7 :                     ;
    1638/     AD7 :                     ;       (ORG in last 40 bytes of page)
    1639/     AD7 :                     ;
    1640/     AD7 :                     ; Character Formatter - ASCII character in ACC.
    1641/     AD7 :                     ;
    1642/     AD7 :                                align 8
    1643/     AD8 : FA 7F               TVD        ANI     07Fh       ;SET HIGH BIT TO 0
    1644/     ADA : AE                             PLO     RE         ;SAVE FOR EXIT
    1645/     ADB : FF 60                          SMI     060h       ;CHECK FOR UPPER CASE
    1646/     ADD : 8E                             GLO     RE
    1647/     ADE : 3B E3                          BNF     Z304       ;IF NOT JUMP
    1648/     AE0 : FF 20                          SMI     020h       ;CONVERT TO UPPERCASE
    1649/     AE2 : AE                             PLO     RE
    1650/     AE3 : E2                  Z304       SEX     R2
    1651/     AE4 : 8A                             GLO     RA         ;SAVE RA ON STACK
    1652/     AE5 : 73                             STXD
    1653/     AE6 : 9A                             GHI     RA
    1654/     AE7 : 73                             STXD
    1655/     AE8 : 89                             GLO     R9         ;SAVE R9 ON STACK
    1656/     AE9 : 73                             STXD
    1657/     AEA : 99                             GHI     R9
    1658/     AEB : 73                             STXD
    1659/     AEC : 88                             GLO     R8         ;SAVE R8 ON STACK
    1660/     AED : 73                             STXD
    1661/     AEE : 98                             GHI     R8
    1662/     AEF : 73                             STXD
    1663/     AF0 : F8 1E                          LDI     (SHFT)&255       ;SET UP SHIFT PC
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 54 - 10/07/24 19:32:40


    1664/     AF2 : AA                             PLO     RA
    1665/     AF3 : F8 0C                          LDI     (SHFT)>>8
    1666/     AF5 : BA                             PHI     RA
    1667/     AF6 : (MACRO)                        FETCH   TVXY            ;TVXY GET POINTER R8 = *0008-9
    1667/     AF6 : D7                          SEP R7
    1667/     AF7 : 08                          db (TVXY)&255
    1668/     AF8 : B8                             PHI     R8         ;WHICH IS CURSOR
    1669/     AF9 : 4D                             LDA     RD
    1670/     AFA : A8                             PLO     R8
    1671/     AFB : 4D                             LDA     RD         ;D = *000A AND BIT POINTER
    1672/     AFC : FA 07                          ANI     7          ;ONLY WONT LOW 3 BITS
    1673/     AFE : B9                             PHI     R9
    1674/     AFF : (MACRO)                        FETCH   BS         ;BS IS THIS CANCEL
    1674/     AFF : D7                          SEP R7
    1674/     B00 : 13                          db (BS)&255
    1675/     B01 : 8E                             GLO     RE
    1676/     B02 : F3                             XOR                ;AT BS+1=CANCEL
    1677/     B03 : 32 4E                          BZ      DOTON
    1678/     B05 : 8E                             GLO     RE
    1679/     B06 : FF 7F                          SMI     07Fh       ;IGNORE <DEL>=7F
    1680/     B08 : 32 20                          BZ      EXIT2
    1681/     B0A : FC 5F                          ADI     05Fh
    1682/     B0C : 33 A8                          BDF     CHAR       ;IS IT PRINTABLE
    1683/     B0E : FC 13                          ADI     013h
    1684/     B10 : 32 71                          BZ      ODBYTE     ;IS IT <CR>
    1685/     B12 : FC 01                          ADI     1
    1686/     B14 : 32 5F                          BZ      OCBYTE     ;IS IT CLEARSCREEN
    1687/     B16 : FC 02                          ADI     2
    1688/     B18 : 32 55                          BZ      OABYTE     ;IS IF <LF>
    1689/     B1A : FC 09                          ADI     9
    1690/     B1C : 32 4E                          BZ      DOTON      ;1 = TURN DOT ON
    1691/     B1E : 3B 46                          BNF     DOTOFF     ;0 = TURN DOT OFF
    1692/     B20 : (MACRO)             EXIT2      FETCH   01Ah       ;01Ah RD = #001B
    1692/     B20 : D7                          SEP R7
    1692/     B21 : 1A                          db (01AH)&255
    1693/     B22 : 99                             GHI     R9
    1694/     B23 : FA 07                          ANI     7
    1695/     B25 : B9                             PHI     R9
    1696/     B26 : FC FE                          ADI     0FEh
    1697/     B28 : 88                             GLO     R8
    1698/     B29 : 7E                             SHLC
    1699/     B2A : F3                             XOR
    1700/     B2B : FA 07                          ANI     7
    1701/     B2D : F3                             XOR
    1702/     B2E : 5D                             STR     RD
    1703/     B2F : (MACRO)                        FETCH   TVXY+1     ;TVXY+1 RD = #000A
    1703/     B2F : D7                          SEP R7
    1703/     B30 : 09                          db (TVXY+1)&255
    1704/     B31 : 99                             GHI     R9
    1705/     B32 : 73                             STXD               ;STORE BIT POINTER
    1706/     B33 : 88                             GLO     R8
    1707/     B34 : 73                             STXD               ;STORE DISPLAY LOCATION
    1708/     B35 : 98                             GHI     R8
    1709/     B36 : 73                             STXD
    1710/     B37 : 12                             INC     R2         ;RESTORE R8
    1711/     B38 : 42                             LDA     R2
    1712/     B39 : B8                             PHI     R8
    1713/     B3A : 42                             LDA     R2
    1714/     B3B : A8                             PLO     R8
    1715/     B3C : 42                             LDA     R2         ;RESTORE R9
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 55 - 10/07/24 19:32:40


    1716/     B3D : B9                             PHI     R9
    1717/     B3E : 42                             LDA     R2
    1718/     B3F : A9                             PLO     R9
    1719/     B40 : 42                             LDA     R2         ;RESTORE RA
    1720/     B41 : BA                             PHI     RA
    1721/     B42 : 02                             LDN     R2
    1722/     B43 : AA                             PLO     RA
    1723/     B44 : 8E                             GLO     RE         ;GET SAVED CHARACTER
    1724/     B45 : (MACRO)                        RETURN
    1724/     B45 : D5                          SEP R5
    1725/     B46 : F8 80               DOTOFF     LDI     080h       ;POINT TO BIT
    1726/     B48 : DA                             SEP     RA
    1727/     B49 : FB FF                          XRI     0FFh       ;MAKE AND MASK
    1728/     B4B : F2                             AND
    1729/     B4C : 30 52                          BR      DOTON+4
    1730/     B4E : F8 80               DOTON      LDI     080h
    1731/     B50 : DA                             SEP     RA
    1732/     B51 : F1                             OR
    1733/     B52 : 58                             STR     R8
    1734/     B53 : 30 20                          BR      EXIT2
    1735/     B55 : 88                  OABYTE     GLO     R8         ;0A ROUTINE   DOWN LINE
    1736/     B56 : FC 30                          ADI     030h
    1737/     B58 : A8                             PLO     R8
    1738/     B59 : 98                             GHI     R8
    1739/     B5A : 7C 00                          ADCI    0
    1740/     B5C : B8                             PHI     R8
    1741/     B5D : 30 77                          BR      Z306
    1742/     B5F : F8 3F               OCBYTE     LDI     (BUFX-1)&255  ;0C ROUTINE   CLEAR SCREEN
    1743/     B61 : A8                             PLO     R8
    1744/     B62 : F8 0F                          LDI     (BUFX-1)>>8
    1745/     B64 : B8                             PHI     R8
    1746/     B65 : E8                             SEX     R8         ;REPEAT...
    1747/     B66 : 9D                  CLRS       GHI     RD         ;CLEAR BYTE
    1748/     B67 : 73                             STXD               ;DECREMENT POINTER
    1749/     B68 : 88                             GLO     R8
    1750/     B69 : FF B0                          SMI     (BUFF)&255 ;HAS POINTER REACHED
    1751/     B6B : 98                             GHI     R8         ;START OF BUFFER
    1752/     B6C : 7F 0D                          SMBI    (BUFF)>>8
    1753/     B6E : 33 66                          BDF     CLRS       ;...UNTIL DONE
    1754/     B70 : 60                             IRX                ;CONTINUE TO <CR>
    1755/     B71 : 9D                  ODBYTE     GHI     RD         ;0D ROUTINE   CARRAGE RETURN
    1756/     B72 : B9                             PHI     R9         ;LEFT END OF LINE
    1757/     B73 : 88                             GLO     R8
    1758/     B74 : FA F8                          ANI     0F8h       ;OF BYTE * 8
    1759/     B76 : A8                             PLO     R8
    1760/     B77 : 88                  Z306       GLO     R8         ;CHEAK FOR BOTTOM OF SCREEN
    1761/     B78 : FF 08                          SMI     (BUFE)&255
    1762/     B7A : 98                             GHI     R8
    1763/     B7B : 7F 0F                          SMBI    (BUFE)>>8
    1764/     B7D : 3B 20                          BNF     EXIT2
    1765/     B7F : F8 B0                          LDI     (BUFF)&255
    1766/     B81 : AF                             PLO     RF
    1767/     B82 : 88                             GLO     R8
    1768/     B83 : FC B0                          ADI     (BUFF)&255
    1769/     B85 : FA F8                          ANI     0F8h
    1770/     B87 : AA                             PLO     RA
    1771/     B88 : F8 0D                          LDI     (BUFF)>>8
    1772/     B8A : BF                             PHI     RF
    1773/     B8B : 7C 00                          ADCI    0
    1774/     B8D : BA                             PHI     RA
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 56 - 10/07/24 19:32:40


    1775/     B8E : 4A                  Z308       LDA     RA         ;SCROLL SCREEN
    1776/     B8F : 5F                  Z309       STR     RF
    1777/     B90 : 1F                             INC     RF
    1778/     B91 : 8F                             GLO     RF
    1779/     B92 : FF 08                          SMI     (BUFE)&255
    1780/     B94 : 9F                             GHI     RF
    1781/     B95 : 7F 0F                          SMBI    (BUFE)>>8
    1782/     B97 : 3B 8E                          BNF     Z308
    1783/     B99 : 8F                             GLO     RF
    1784/     B9A : FF 40                          SMI     (BUFX)&255
    1785/     B9C : 9D                             GHI     RD
    1786/     B9D : 3B 8F                          BNF     Z309
    1787/     B9F : 88                             GLO     R8
    1788/     BA0 : FA 07                          ANI     7
    1789/     BA2 : A8                             PLO     R8
    1790/     BA3 : F8 0F                          LDI     (BUFE-8)>>8
    1791/     BA5 : B8                             PHI     R8
    1792/     BA6 : 30 20                          BR      EXIT2
    1793/     BA8 : 8E                  CHAR       GLO     RE         ;20 BYTE - 5A BYTE ROUTINE
    1794/     BA9 : FE                             SHL                ;INDEX INTO CHARACTER TABLE
    1795/     BAA : FC 76                          ADI     (CTBL-64)&255
    1796/     BAC : AF                             PLO     RF
    1797/     BAD : 9D                             GHI     RD
    1798/     BAE : 7C 0C                          ADCI    (CTBL-64)>>8
    1799/     BB0 : BF                             PHI     RF
    1800/     BB1 : (MACRO)                        FETCH   MASK-1
    1800/     BB1 : D7                          SEP R7
    1800/     BB2 : 0B                          db (MASK-1)&255
    1801/     BB3 : 4F                             LDA     RF         ;GET BIT MASK
    1802/     BB4 : 5D                             STR     RD         ;SAVE IT
    1803/     BB5 : 4F                             LDA     RF
    1804/     BB6 : FC 36                          ADI     (DOTS)&255
    1805/     BB8 : AF                             PLO     RF         ;POINT TO DOT MATRIX
    1806/     BB9 : 9D                             GHI     RD
    1807/     BBA : 7C 0D                          ADCI    (DOTS)>>8
    1808/     BBC : BF                             PHI     RF
    1809/     BBD : 99                             GHI     R9         ;SAVE CURSOR POSITION
    1810/     BBE : 52                             STR     R2
    1811/     BBF : 22                             DEC     R2
    1812/     BC0 : 0D                             LDN     RD         ;POSITION BIT MASK
    1813/     BC1 : FA 07                          ANI     7
    1814/     BC3 : B9                             PHI     R9
    1815/     BC4 : 0D                             LDN     RD
    1816/     BC5 : FA F8                          ANI     0F8h       ;IT IS LEFT 5 BITS
    1817/     BC7 : DA                             SEP     RA
    1818/     BC8 : 1A                             INC     RA         ;CANCEL 2ND CO-CALL
    1819/     BC9 : 1A                             INC     RA
    1820/     BCA : A9                             PLO     R9         ;SAVE MASK
    1821/     BCB : 12                             INC     R2
    1822/     BCC : E2                             SEX     R2         ;PREPARE TO FIND RELATIVE SHIFT
    1823/     BCD : 0D                             LDN     RD
    1824/     BCE : FA 07                          ANI     7
    1825/     BD0 : F5                             SD                 ;(X=2)
    1826/     BD1 : B9                             PHI     R9
    1827/     BD2 : 89                             GLO     R9         ;SAVE NEW MASK
    1828/     BD3 : 5D                             STR     RD
    1829/     BD4 : 4F                  CHRL       LDA     RF         ;GET SOME DOTS
    1830/     BD5 : ED                             SEX     RD
    1831/     BD6 : F2                             AND                ;MASK INTO THIS CHARACTER
    1832/     BD7 : DA                             SEP     RA         ;SHIFT IT
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 57 - 10/07/24 19:32:40


    1833/     BD8 : F1                             OR                 ;INSERT INTO BUFFER
    1834/     BD9 : 58                             STR     R8
    1835/     BDA : DA                             SEP     RA         ;UP TO NEXT LINE
    1836/     BDB : 33 D4                          BDF     CHRL
    1837/     BDD : 0D                             LDN     RD         ;CHECK FOR SPLIT WORD
    1838/     BDE : DA                             SEP     RA
    1839/     BDF : 1A                             INC     RA         ;DON'T WANT COUNTER
    1840/     BE0 : 1A                             INC     RA
    1841/     BE1 : 3B FC                          BNF     Z310       ;NOT SPLIT
    1842/     BE3 : 8F                             GLO     RF         ;BACK UP DOT POINTER
    1843/     BE4 : FF 06                          SMI     6
    1844/     BE6 : AF                             PLO     RF
    1845/     BE7 : 18                             INC     R8         ;POINT TO NEXT WORD
    1846/     BE8 : 88                             GLO     R8
    1847/     BE9 : FA 07                          ANI     7
    1848/     BEB : 3A F6                          BNZ     Z311
    1849/     BED : 99                             GHI     R9         ;OOPS,NEXT LINE
    1850/     BEE : FA 87                          ANI     087h
    1851/     BF0 : F9 50                          ORI     050h
    1852/     BF2 : B9                             PHI     R9
    1853/     BF3 : 2A                             DEC     RA
    1854/     BF4 : 2A                             DEC     RA
    1855/     BF5 : DA                             SEP     RA
    1856/     BF6 : 99                  Z311       GHI     R9         ;CONVERT TO LEFT SHIFT
    1857/     BF7 : F9 F8                          ORI     0F8h
    1858/     BF9 : B9                             PHI     R9
    1859/     BFA : 30 D4                          BR     CHRL       ;GO DO IT AGAIN
    1860/     BFC : E2                  Z310       SEX     R2
    1861/     BFD : F9 80                          ORI     080h
    1862/     BFF : 38                             SKP                ;FIND RIGHT EDGE
    1863/     C00 : 19                  Z312       INC     R9
    1864/     C01 : F6                             SHR
    1865/     C02 : 3B 00                          BNF     Z312       ;OF MASK
    1866/     C04 : 89                             GLO     R9
    1867/     C05 : FD 09                          SDI     9          ;ANY LEFT?
    1868/     C07 : B9                             PHI     R9
    1869/     C08 : FF 08                          SMI     8
    1870/     C0A : 3B 19                          BNF     CSTK       ;YES
    1871/     C0C : B9                             PHI     R9         ;NO, ADVANCE WORD
    1872/     C0D : 18                             INC     R8
    1873/     C0E : 88                             GLO     R8
    1874/     C0F : FA 07                          ANI     7
    1875/     C11 : 3A 19                          BNZ     CSTK
    1876/     C13 : F8 50                          LDI     050h
    1877/     C15 : B9                             PHI     R9
    1878/     C16 : 2A                             DEC     RA
    1879/     C17 : 2A                             DEC     RA
    1880/     C18 : DA                             SEP     RA
    1881/     C19 : C4                  CSTK       NOP
    1882/     C1A : C0 0B 77                       LBR     Z306
    1883/     C1D : D3                  Z324       SEP     R3         ;< EXIT
    1884/     C1E : 52                  SHFT       STR     R2         ;>ENTER SAVE BITS TO SHIFT
    1885/     C1F : 88                             GLO     R8         ;NOTE IF ADDRESS IS OUTSIDE DISPLAY
    1886/     C20 : FF B0                          SMI     (BUFF)&255
    1887/     C22 : 98                             GHI     R8         ;ONLY WORRY ABOUT TOO LOW
    1888/     C23 : 7F 0D                          SMBI    (BUFF)>>8
    1889/     C25 : 9D                             GHI     RD         ;IF SO, RETURN 0
    1890/     C26 : 3B 47                          BNF     Z314       ;SO PROGRAM ISN'T DESTROYED
    1891/     C28 : 99                             GHI     R9         ;LOOK AT COUNTER
    1892/     C29 : FA 87                          ANI     087h       ;MASK OUT WORD COUNTER
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 58 - 10/07/24 19:32:40


    1893/     C2B : A9                             PLO     R9
    1894/     C2C : 32 45                          BZ      Z315       ;NO SHIFT
    1895/     C2E : FE                             SHL
    1896/     C2F : 33 3A                          BDF     Z316       ;LEFT
    1897/     C31 : 02                  Z317       LDN     R2         ;SHIFT RIGHT ONCE
    1898/     C32 : F6                             SHR
    1899/     C33 : 52                             STR     R2
    1900/     C34 : 29                             DEC     R9
    1901/     C35 : 89                             GLO     R9
    1902/     C36 : 3A 31                          BNZ     Z317       ;REPEAT N TIMES
    1903/     C38 : 30 46                          BR      Z318       ;DONE
    1904/     C3A : F6                  Z316       SHR                ;LEFT SHIFT
    1905/     C3B : FD 08                          SDI     008h       ;SET UP COUNTER
    1906/     C3D : A9                             PLO     R9
    1907/     C3E : 02                  Z319       LDN     R2         ;DO IT
    1908/     C3F : FE                             SHL
    1909/     C40 : 52                             STR     R2
    1910/     C41 : 29                             DEC     R9
    1911/     C42 : 89                             GLO     R9
    1912/     C43 : 3A 3E                          BNZ     Z319       ;REPEAT
    1913/     C45 : FE                  Z315       SHL                ;CLEAR CARRY
    1914/     C46 : 02                  Z318       LDN     R2         ;GET BITS
    1915/     C47 : E8                  Z314       SEX     R8
    1916/     C48 : D3                             SEP     R3         ;EXIT, C=SHIFT OFF RIGHT
    1917/     C49 : 30 4D                          BR      Z320       ;SECOND ENTRY POINT
    1918/     C4B : 30 1E                          BR      SHFT       ;OPTIONAL RERUNS
    1919/     C4D :                     ;
    1920/     C4D :                     ; Count words, moving pointer up
    1921/     C4D :                     ;
    1922/     C4D : 99                  Z320       GHI     R9
    1923/     C4E : FC 18                          ADI     018h       ;CONVERT IF NEGATIVE, ADD 1
    1924/     C50 : 3B 54                          BNF     Z321
    1925/     C52 : F9 80                          ORI     080h       ;(RESTORE SIGN)
    1926/     C54 : FA F7               Z321       ANI     0F7h
    1927/     C56 : B9                             PHI     R9
    1928/     C57 : FE                             SHL                ;SIGN IN C
    1929/     C58 : FA E0                          ANI     0E0h       ;IS THIS END?
    1930/     C5A : FB C0                          XRI     0C0h
    1931/     C5C : 3A 70                          BNZ     Z322       ;NO
    1932/     C5E : 99                             GHI     R9         ;YES, RESTORE ORIGINAL
    1933/     C5F : FA 07                          ANI     7
    1934/     C61 : 3B 65                          BNF     Z323
    1935/     C63 : F9 F8                          ORI     0F8h       ;(NEGATIVE)
    1936/     C65 : B9                  Z323       PHI     R9
    1937/     C66 : 88                             GLO     R8         ;BUMP R8 BACK TO BOTTOM
    1938/     C67 : FC 28                          ADI     028h
    1939/     C69 : A8                             PLO     R8
    1940/     C6A : 98                             GHI     R8
    1941/     C6B : 7C 00                          ADCI    0
    1942/     C6D : B8                             PHI     R8
    1943/     C6E : 30 1D                          BR      Z324       ;C=0
    1944/     C70 : 88                  Z322       GLO     R8         ;GO TO NEXT LINE UP
    1945/     C71 : FF 08                          SMI     8
    1946/     C73 : A8                             PLO     R8
    1947/     C74 : 98                             GHI     R8
    1948/     C75 : 7F 00                          SMBI    0
    1949/     C77 : B8                             PHI     R8
    1950/     C78 : 30 1D                          BR      Z324       ;C=1
    1951/     C7A :                     ;
    1952/     C7A :                     ; Interrupt service routine for 1861
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 59 - 10/07/24 19:32:40


    1953/     C7A :                     ;
    1954/     C7A : F8 03               Z327       LDI     3
    1955/     C7C : A0                             PLO     R0
    1956/     C7D : E2                             SEX     R2
    1957/     C7E :                                ;Restore XX
    1958/     C7E : 42                             LDA     R2
    1959/     C7F : A8                             PLO     XX
    1960/     C80 : 42                             LDA     R2
    1961/     C81 : B8                             PHI     XX
    1962/     C82 : 42                             LDA     R2         ;RECOVER D
    1963/     C83 : 70                             RET                ;< EXIT
    1964/     C84 : C4                  INTERUPT   NOP                ;> ENTRY DISPLAY INT. ROUTINE
    1965/     C85 : 22                             DEC     R2
    1966/     C86 : 78                             SAV                ;SAVE T
    1967/     C87 : 22                             DEC     R2
    1968/     C88 : 73                             STXD               ;SAVE D
    1969/     C89 : F8 0D                          LDI     (BUFF)>>8
    1970/     C8B : B0                             PHI     R0         ;SET UP R0 FOR DMA
    1971/     C8C : F8 B0                          LDI     (BUFF)&255
    1972/     C8E : A0                             PLO     R0
    1973/     C8F : 34 8F               -          B1      -          ;SYNCHRONIZE
    1974/     C91 : 80                  DISPLP     GLO     R0
    1975/     C92 : 20                             DEC     R0
    1976/     C93 : A0                             PLO     R0
    1977/     C94 : E2                             SEX     R2         ;NOT A NOP
    1978/     C95 : 20                             DEC     R0
    1979/     C96 : A0                             PLO     R0         ;THREE LINES PER PIXEL
    1980/     C97 : 90                             GHI     R0         ;LAST LINE
    1981/     C98 : FB 0F                          XRI     (BUFE)>>8  ;IS NEW PAGE
    1982/     C9A : 3A 91                          BNZ     DISPLP
    1983/     C9C :                     ; Update Time
    1984/     C9C : 98                             GHI     XX
    1985/     C9D : 73                             STXD
    1986/     C9E : 88                             GLO     XX
    1987/     C9F : 52                             STR     R2
    1988/     CA0 : F8 00                          LDI     0
    1989/     CA2 : B8                             PHI     XX
    1990/     CA3 : F8 0F                          LDI     (TIME_+2)&255 ;NOW UPDATE CLOCK
    1991/     CA5 : A8                             PLO     XX
    1992/     CA6 : 08                             LDN     XX
    1993/     CA7 : FC 01                          ADI     1          ;INCREMENT FRAME COUNT
    1994/     CA9 : 58                             STR     XX
    1995/     CAA : FF 3D                          SMI     03Dh       ;ONE SECOND
    1996/     CAC : 3B 7A                          BNF     Z327       ;NOT YET
    1997/     CAE : 58                             STR     XX         ;IF YES,
    1998/     CAF : 28                             DEC     XX
    1999/     CB0 : 08                             LDN     XX           ;BUMP SECONDS
    2000/     CB1 : FC 01                          ADI     1
    2001/     CB3 : 58                             STR     XX
    2002/     CB4 : 30 7A                          BR      Z327
    2003/     CB6 : 86 08               CTBL       DW      08608h     ;SP MASK BYTE AND DATA POINTER
    2004/     CB8 : 82 0A                          DW      0820Ah     ;! MASK BYTE AND DATA POINTER
    2005/     CBA : E5 08                          DW      0E508h     ;" MASK BYTE AND DATA POINTER
    2006/     CBC : F8 23                          DW      0F823h     ;# MASK BYTE AND DATA POINTER
    2007/     CBE : E4 35                          DW      0E435h     ;$ MASK BYTE AND DATA POINTER
    2008/     CC0 : E5 5A                          DW      0E55Ah     ;% MASK BYTE AND DATA POINTER
    2009/     CC2 : F4 23                          DW      0F423h     ;& MASK BYTE AND DATA POINTER
    2010/     CC4 : C2 00                          DW      0C200h     ;' MASK BYTE AND DATA POINTER
    2011/     CC6 : C1 11                          DW      0C111h     ;( MASK BYTE AND DATA POINTER
    2012/     CC8 : C2 11                          DW      0C211h     ;) MASK BYTE AND DATA POINTER
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 60 - 10/07/24 19:32:40


    2013/     CCA : E0 3C                          DW      0E03Ch     ;* MASK BYTE AND DATA POINTER
    2014/     CCC : E5 47                          DW      0E547h     ;+ MASK BYTE AND DATA POINTER
    2015/     CCE : C3 07                          DW      0C307h     ;, MASK BYTE AND DATA POINTER
    2016/     CD0 : C4 41                          DW      0C441h     ;- MASK BYTE AND DATA POINTER
    2017/     CD2 : 84 07                          DW      08407h     ;. MASK BYTE AND DATA POINTER
    2018/     CD4 : E5 29                          DW      0E529h     ;/ MASK BYTE AND DATA POINTER
    2019/     CD6 : E1 11                          DW      0E111h     ;0 MASK BYTE AND DATA POINTER
    2020/     CD8 : E2 43                          DW      0E243h     ;1 MASK BYTE AND DATA POINTER
    2021/     CDA : E4 4F                          DW      0E44Fh     ;2 MASK BYTE AND DATA POINTER
    2022/     CDC : E1 03                          DW      0E103h     ;3 MASK BYTE AND DATA POINTER
    2023/     CDE : E0 1D                          DW      0E01Dh     ;4 MASK BYTE AND DATA POINTER
    2024/     CE0 : E0 42                          DW      0E042h     ;5 MASK BYTE AND DATA POINTER
    2025/     CE2 : E2 49                          DW      0E249h     ;6 MASK BYTE AND DATA POINTER
    2026/     CE4 : E0 73                          DW      0E073h     ;7 MASK BYTE AND DATA POINTER
    2027/     CE6 : E3 03                          DW      0E303h     ;8 MASK BYTE AND DATA POINTER
    2028/     CE8 : E0 49                          DW      0E049h     ;9 MASK BYTE AND DATA POINTER
    2029/     CEA : 83 04                          DW      08304h     ;: MASK BYTE AND DATA POINTER
    2030/     CEC : C3 35                          DW      0C335h     ;; MASK BYTE AND DATA POINTER
    2031/     CEE : E5 41                          DW      0E541h     ;< MASK BYTE AND DATA POINTER
    2032/     CF0 : E5 03                          DW      0E503h     ;= MASK BYTE AND DATA POINTER
    2033/     CF2 : E5 17                          DW      0E517h     ;> MASK BYTE AND DATA POINTER
    2034/     CF4 : E0 5A                          DW      0E05Ah     ;? MASK BYTE AND DATA POINTER
    2035/     CF6 : E0 79                          DW      0E079h     ;@ MASK BYTE AND DATA POINTER
    2036/     CF8 : E1 2F                          DW      0E12Fh     ;A MASK BYTE AND DATA POINTER
    2037/     CFA : E5 6D                          DW      0E56Dh     ;B MASK BYTE AND DATA POINTER
    2038/     CFC : E4 17                          DW      0E417h     ;C MASK BYTE AND DATA POINTER
    2039/     CFE : E2 17                          DW      0E217h     ;D MASK BYTE AND DATA POINTER
    2040/     D00 : E5 60                          DW      0E560h     ;E MASK BYTE AND DATA POINTER
    2041/     D02 : E5 34                          DW      0E534h     ;F MASK BYTE AND DATA POINTER
    2042/     D04 : E2 4F                          DW      0E24Fh     ;G MASK BYTE AND DATA POINTER
    2043/     D06 : E3 3B                          DW      0E33Bh     ;H MASK BYTE AND DATA POINTER
    2044/     D08 : 82 17                          DW      08217h     ;I MASK BYTE AND DATA POINTER
    2045/     D0A : E1 55                          DW      0E155h     ;J MASK BYTE AND DATA POINTER
    2046/     D0C : E0 60                          DW      0E060h     ;K MASK BYTE AND DATA POINTER
    2047/     D0E : E3 43                          DW      0E343h     ;L MASK BYTE AND DATA POINTER
    2048/     D10 : F9 6D                          DW      0F96Dh     ;M MASK BYTE AND DATA POINTER
    2049/     D12 : F4 1D                          DW      0F41Dh     ;N MASK BYTE AND DATA POINTER
    2050/     D14 : E0 17                          DW      0E017h     ;O MASK BYTE AND DATA POINTER
    2051/     D16 : E5 73                          DW      0E573h     ;P MASK BYTE AND DATA POINTER
    2052/     D18 : E0 0B                          DW      0E00Bh     ;Q MASK BYTE AND DATA POINTER
    2053/     D1A : E5 3B                          DW      0E53Bh     ;R MASK BYTE AND DATA POINTER
    2054/     D1C : E0 29                          DW      0E029h     ;S MASK BYTE AND DATA POINTER
    2055/     D1E : E0 66                          DW      0E066h     ;T MASK BYTE AND DATA POINTER
    2056/     D20 : E2 1D                          DW      0E21Dh     ;U MASK BYTE AND DATA POINTER
    2057/     D22 : E3 79                          DW      0E379h     ;V MASK BYTE AND DATA POINTER
    2058/     D24 : FB 2E                          DW      0FB2Eh     ;W MASK BYTE AND DATA POINTER
    2059/     D26 : E2 60                          DW      0E260h     ;X MASK BYTE AND DATA POINTER
    2060/     D28 : E2 73                          DW      0E273h     ;Y MASK BYTE AND DATA POINTER
    2061/     D2A : E0 35                          DW      0E035h     ;Z MASK BYTE AND DATA POINTER
    2062/     D2C : C0 17                          DW      0C017h     ;[ MASK BYTE AND DATA POINTER
    2063/     D2E : E3 29                          DW      0E329h     ;\ MASK BYTE AND DATA POINTER
    2064/     D30 : C1 17                          DW      0C117h     ;] MASK BYTE AND DATA POINTER
    2065/     D32 : E2 00                          DW      0E200h     ;^ MASK BYTE AND DATA POINTER
    2066/     D34 : E5 07                          DW      0E507h     ;_ MASK BYTE AND DATA POINTER
    2067/     D36 : 00 00               DOTS       DW      00000h     ;START OF DOT TABLE
    2068/     D38 : 80 80                          DW      08080h
    2069/     D3A : E8 97                          DW      0E897h
    2070/     D3C : A8 97                          DW      0A897h
    2071/     D3E : 68 40                          DW      06840h
    2072/     D40 : 40 20                          DW      04020h
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 61 - 10/07/24 19:32:40


    2073/     D42 : 40 AD                          DW      040ADh
    2074/     D44 : B6 AD                          DW      0B6ADh
    2075/     D46 : 44 04                          DW      04404h
    2076/     D48 : 20 56                          DW      02056h
    2077/     D4A : DD 57                          DW      0DD57h
    2078/     D4C : 20 00                          DW      02000h
    2079/     D4E : F4 AA                          DW      0F4AAh
    2080/     D50 : A9 AA                          DW      0A9AAh
    2081/     D52 : F4 00                          DW      0F400h
    2082/     D54 : 39 E9                          DW      039E9h
    2083/     D56 : AB AD                          DW      0ABADh
    2084/     D58 : 29 00                          DW      02900h
    2085/     D5A : 55 FA                          DW      055FAh
    2086/     D5C : 54 F8                          DW      054F8h
    2087/     D5E : 54 00                          DW      05400h
    2088/     D60 : C0 24                          DW      0C024h
    2089/     D62 : 4A 91                          DW      04A91h
    2090/     D64 : 60 0A                          DW      0600Ah
    2091/     D66 : 55 75                          DW      05575h
    2092/     D68 : 51 51                          DW      05151h
    2093/     D6A : 20 14                          DW      02014h
    2094/     D6C : EC 86                          DW      0EC86h
    2095/     D6E : 4C 27                          DW      04C27h
    2096/     D70 : E4 00                          DW      0E400h
    2097/     D72 : 15 15                          DW      01515h
    2098/     D74 : BE 55                          DW      0BE55h
    2099/     D76 : B6 00                          DW      0B600h
    2100/     D78 : 01 C2                          DW      001C2h
    2101/     D7A : 3C D2                          DW      03CD2h
    2102/     D7C : 91 F0                          DW      091F0h
    2103/     D7E : 10 02                          DW      01002h
    2104/     D80 : 57 2A                          DW      0572Ah
    2105/     D82 : 70 A0                          DW      070A0h
    2106/     D84 : 58 00                          DW      05800h
    2107/     D86 : DE 68                          DW      0DE68h
    2108/     D88 : A4 62                          DW      0A462h
    2109/     D8A : 1C 06                          DW      01C06h
    2110/     D8C : 23 55                          DW      02355h
    2111/     D8E : 15 18                          DW      01518h
    2112/     D90 : 10 51                          DW      01051h
    2113/     D92 : 04 22                          DW      00422h
    2114/     D94 : A1 44                          DW      0A144h
    2115/     D96 : 00 AF                          DW      000AFh
    2116/     D98 : AC D6                          DW      0ACD6h
    2117/     D9A : AC AF                          DW      0ACAFh
    2118/     D9C : 00 42                          DW      00042h
    2119/     D9E : 42 5F                          DW      0425Fh
    2120/     DA0 : 52 F9                          DW      052F9h
    2121/     DA2 : 10 00                          DW      01000h
    2122/     DA4 : 46 45                          DW      04645h
    2123/     DA6 : 56 6D                          DW      0566Dh
    2124/     DA8 : 46 00                          DW      04600h
    2125/     DAA : 94 94                          DW      09494h
    2126/     DAC : 56 2D                          DW      0562Dh
    2127/     DAE : EE 00                          DW      0EE00h
    2128/     DB0 : 68 94                          DW      06894h
    2129/     DB2 : B4 B4                          DW      0B4B4h
    2130/     DB4 : 54 00                          DW      05400h
    2131/     DB6 : DF                             SEP     RF
    2132/     DB7 :                     
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 62 - 10/07/24 19:32:40


 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 63 - 10/07/24 19:32:40


  Symbol Table (* = unused):
  --------------------------

 AC :                            0A - |  AEPTR :                         1A C |
 AESTK :                         80 C |  AIL :                           1E C |
 APOP :                         2C5 C |  APUSH :                        354 C |
*ARCHITECTURE :                                      "x86_64-unknown-linux" - |
 ATMSG :                        3BD C |  BACK :                         298 C |
 BASIC :                         20 C |  BELL :                         3A9 C |
 BERR :                         54B C | *BIGENDIAN :                      0 - |
 BLINK :                       0AA4 C |  BNEXT :                        588 C |
 BP :                            0B - |  BPOP :                         2C9 C |
 BPUSH :                        359 C | *BRANCHEXT :                      0 - |
 BREAK :                        546 C |  BREAKV :                       10C C |
 BRKTST :                       0EA C |  BS :                            13 C |
 BUFE :                        0F08 - |  BUFF :                        0DB0 - |
 BUFX :                        0F40 - |  CALL_ :                        12A C |
 CALL_S :                       129 C |  CAN :                           14 C |
 CANCL :                        5D7 C | *CASESENSITIVE :                  0 - |
 CEQ :                          48F C |  CHAR :                        0BA8 C |
 CHIN :                         5EC C |  CHRL :                        0BD4 C |
 CLEAR :                        204 C |  CLER :                         813 C |
 CLRS :                        0B66 C |  CLT :                          492 C |
 CMPR :                         46C C |  COLD :                         1B0 C |
 COLDV :                        100 C |  CONST :                        11C C |
*CONSTPI :        3.141592653589793 - |  CONT :                         538 C |
 CRLF :                         3D5 C |  CSTK :                        0C19 C |
 CTBL :                        0CB6 C | *DATE :                  "10/07/24" - |
 DFLT :                         8F0 C |  DISP :                        0AB9 C |
 DISPLP :                      0C91 C |  DIVL :                         4EA C |
 DNEG :                         513 C |  DOIT :                         242 C |
 DOTOFF :                      0B46 C |  DOTON :                       0B4E C |
 DOTS :                        0D36 C |  DUPS :                         34E C |
 END :                          7EC C | *ENDIL :                        9D5 C |
 ERR :                          37F C |  ERT :                          90B C |
 EX1 :                          8FB C |  EX2 :                          8FD C |
 EX3 :                          8FF C |  EX4 :                          905 C |
 EXIT :                         3B5 C |  EXIT2 :                       0B20 C |
 EXPR :                         8F5 C |  EXPRJS :                       9C0 C |
*FALSE :                          0 - |  FEND :                         612 C |
 FETCH_ :                       14B C |  FIN :                          3B1 C |
 FIND :                         5FE C | *FINDX :                        608 C |
 FLG :                          969 C |  FLINE :                        60D C |
 FORCE :                        3CC C | *FULLPMMU :                       1 - |
 GETLN :                        5AA C |  GLINO :                        698 C |
 GOAL :                         565 C |  GOSB :                         78B C |
 GOTO :                         77F C | *HAS64 :                          1 - |
*HASDSP :                         0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  HMUCH :                        6D9 C |
 HOLD :                        0AC5 C |  HOOK :                         349 C |
 HOOP :                         625 C |  HOP :                          2A0 C |
 I0 :                           7CD C |  I1 :                           7C3 C |
 I2 :                           7D0 C |  I3 :                           7D7 C |
 I4 :                           7D9 C |  I5 :                           7E0 C |
 IADD :                         49B C |  IDIV :                         4CB C |
 IF_ :                          7B5 C |  IIL :                          228 C |
 ILFLG :                        9F7 C |  ILINPOUT :                     126 C |
 ILLOAD :                       9F9 C |  ILPEEK :                       114 C |
 ILPOKE :                       118 C |  ILSAVE :                       9FC C |
 IMUL :                         4A7 C |  IND :                          367 C |
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 64 - 10/07/24 19:32:40


 INEG :                         50E C | *INEXTMODE :                      0 - |
*INLWORDMODE :                    0 - | *INMAXMODE :                      0 - |
 INP :                          957 C |  INPT :                         7C7 C |
 INPUTR :                      0A59 C | *INSRCMODE :                      0 - |
 INSRT :                        6A2 C | *INSUPMODE :                      0 - |
 INSX :                         74E C |  INTERUPT :                    0C84 C |
 IO :                           751 C |  ISUB :                         498 C |
*JHOP :                         334 C |  JMP :                          27A C |
 KEYIN :                       0AAF C |  KEYV :                         106 C |
 KLOOP :                        5B2 C |  L1 :                           7FF C |
 L2 :                           803 C |  LEND :                          19 C |
 LET :                          77A C |  LINE :                          30 C |
 LINO :                          28 C |  LIST :                         63C C |
*LISTON :                         1 - |  LIST_ :                        7F2 C |
 LIT1 :                         341 C |  LITN :                         344 C |
 LIX :                          67B C |  LLINE :                        650 C |
 LLOOP :                        667 C |  LO :                           76D C |
 LO1 :                          8C9 C |  LO2 :                          8CB C |
 LO3 :                          8DE C |  LOAD :                         8C2 C |
*MACEXP :                         7 - |  MAL :                          323 C |
 MASK :                          0C C |  MATCH :                        31F C |
 MEND :                          24 C | *MOMCPU :                      1802 - |
*MOMCPUNAME :                "1802" - |  MONITOR :                    0F000 - |
 MORE :                         71E C |  MULC :                         4C5 C |
 MULL :                         4B1 C |  NEG :                          518 C |
 NEGX :                         521 C | *NESTMAX :                      100 - |
 NEW :                          6BA C |  NEXT :                         22D C |
 NHOP :                         31C C |  NM10 :                         305 C |
 NONBL :                        2AA C | *NONBX :                        2B4 C |
 NTAPE :                        5A1 C |  NUMB :                         2FB C |
 NXA :                           1C C |  NXT :                          529 C |
 OABYTE :                      0B55 C |  OCBYTE :                      0B5F C |
 ODBYTE :                      0B71 C |  OU1 :                          87F C |
 OUTPUTR :                     0A82 C |  OUT_ :                         873 C |
 P0 :                           79B C |  P1 :                           79D C |
 P2 :                           79F C |  P3 :                           7A1 C |
*PACKING :                        0 - |  PAD :                           15 C |
*PADDING :                        1 - |  PADS :                         3DF C |
 PAGE :                           0 C |  PC :                             9 - |
 PDIV :                         4E3 C |  PDVL :                         42E C |
 PE1 :                          986 C |  PE2 :                          98E C |
 PE3 :                          990 C |  PE4 :                          997 C |
 PE5 :                          98B C |  PE6 :                          99B C |
 PEEK :                         122 C |  PEEK_ :                        97B C |
 PEND :                         21A C |  PEXPR :                        992 C |
 PLF :                          3EF C |  PLOT :                         81A C |
 PO1 :                          835 C |  PO2 :                          837 C |
 PO3 :                          839 C |  PO4 :                          85A C |
 PO5 :                          866 C |  POKE :                         868 C |
 PRN :                          418 C |  PRNA :                         415 C |
 PRNL :                         43E C |  PRNT :                         794 C |
 PRP :                          425 C |  PRS :                          379 C |
 PZ :                            0D - |  QUOTE :                        370 C |
 R0 :                             0 - |  R1 :                             1 - |
 R2 :                             2 - |  R3 :                             3 - |
 R4 :                             4 - |  R5 :                             5 - |
 R6 :                             6 - |  R7 :                             7 - |
 R8 :                             8 - |  R9 :                             9 - |
 RA :                            0A - | *RB :                            0B - |
 RC :                            0C - |  RD :                            0D - |
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 65 - 10/07/24 19:32:40


 RE :                            0E - | *RELAXED :                        0 - |
 RELESS :                       9A2 C |  RELESS1 :                      9B8 C |
 RELESS2 :                      9BD C |  RELOP :                        99D C |
 RELOP1 :                       9C8 C |  REM :                          8EB C |
 REMORE :                       9A9 C |  REMORE1 :                      9AE C |
 REMORE2 :                      9B1 C |  RETN :                         2D3 C |
 RETN_ :                        7E2 C |  RETURN_ :                      13C C |
 RETURN_S :                     13B C |  RF :                            0F - |
 RN1 :                          936 C |  RND :                          91B C |
 RSBP :                         448 C |  RSTR :                         56D C |
 RTN :                          581 C |  RUN :                          542 C |
 RUN_ :                         80D C |  RUSR :                         935 C |
 S1 :                           7A6 C |  S2 :                           7AA C |
 S3 :                           7AE C |  S4 :                           7B1 C |
 SA1 :                          8A4 C |  SA2 :                          8A6 C |
 SAV :                          681 C |  SAVE :                         885 C |
 SCAN :                         1C6 C |  SEP5 :                         366 C |
 SERIAL_DELAY :                 0F6 C |  SHAL :                         522 C |
 SHCL :                         524 C |  SHFT :                        0C1E C |
*SKIP :                         496 C |  SKIP_ :                        7A5 C |
 SP :                            2E C |  SPARE :                         17 C |
 STACK :                         22 C |  STEST :                        337 C |
 STMT :                         773 C |  STOK :                         5DD C |
 STORE :                        2B6 C |  STRNG :                        3C5 C |
 STRT :                         766 C |  STUFF :                        730 C |
 SVBP :                         44B C |  SWAP :                         45E C |
 TAB :                          403 C |  TABLE :                        154 C |
 TABS :                         40A C |  TAPE :                         59E C |
*TAPEMODE :                      16 C |  TBEND :                        1B0 C |
 TBERR :                        25C C |  TBR :                          24B C |
 TE1 :                          90E C |  TE2 :                          914 C |
 TEND :                         2D4 C |  TER :                          91A C |
 TERM :                         90C C | *TIME :                  "19:32:40" - |
 TIME_ :                         0D C |  TJMP :                         26A C |
 TOPS :                          26 C | *TRUE :                           1 - |
 TSTN :                         2F0 C |  TSTR :                         3C2 C |
 TSTV :                         2DD C |  TTOK :                         59C C |
 TTOP :                         58B C |  TTYCC :                         1B C |
 TVD :                         0AD8 C | *TVOFF :                       0AC8 C |
 TVON :                         9D6 C |  TVXY :                           8 C |
 TYPER :                        3F4 C |  TYPEV :                        109 C |
*TYX :                          45D C |  USR :                          948 C |
*VERSION :                     142F - |  WARM :                         1ED C |
 WORK :                          2A C |  X :                             0F - |
 XCHG :                         285 C |  XEC :                          770 C |
 XEQ :                           18 C |  XFER :                         560 C |
 XINIT :                        54E C |  XX :                             8 - |
 Z148 :                         0E1 C |  Z149 :                         0BB C |
 Z150 :                         0BF C |  Z151 :                         0C7 C |
 Z152 :                         0D3 C |  Z153 :                         0C4 C |
 Z154 :                         0DE C |  Z156 :                         0F2 C |
 Z157 :                         0FF C |  Z158 :                         0F9 C |
 Z165 :                         0B6 C |  Z283 :                         9E3 C |
 Z284 :                        0A28 C |  Z285 :                        0A05 C |
 Z286 :                        0A13 C |  Z287 :                        0A0B C |
 Z288 :                        0A2E C |  Z289 :                        0A31 C |
 Z290 :                        0A37 C |  Z291 :                        0A3E C |
 Z292 :                        0A58 C |  Z293 :                        0A5C C |
 Z294 :                        0A6F C |  Z295 :                        0A70 C |
 Z297 :                        0A7A C |  Z298 :                        0A66 C |
 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 66 - 10/07/24 19:32:40


 Z299 :                        0A8A C |  Z300 :                        0A92 C |
 Z301 :                        0AB2 C |  Z304 :                        0AE3 C |
 Z306 :                        0B77 C |  Z308 :                        0B8E C |
 Z309 :                        0B8F C |  Z310 :                        0BFC C |
 Z311 :                        0BF6 C |  Z312 :                        0C00 C |
 Z314 :                        0C47 C |  Z315 :                        0C45 C |
 Z316 :                        0C3A C |  Z317 :                        0C31 C |
 Z318 :                        0C46 C |  Z319 :                        0C3E C |
 Z320 :                        0C4D C |  Z321 :                        0C54 C |
 Z322 :                        0C70 C |  Z323 :                        0C65 C |
 Z324 :                        0C1D C |  Z327 :                        0C7A C |
*Z80SYNTAX :                      0 - |  __BACK0 :                      52E C |
 __BACK1 :                      9DC C |  __BACK2 :                     0ACB C |
 __BACK3 :                     0ACF C |  __BACK4 :                     0C8F C |

    381 symbols
     38 unused symbols

 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 67 - 10/07/24 19:32:40


  Defined Macros:
  ---------------

CALL                                  | FETCH                                
IL_AD                                 | IL_BC                                
IL_BE                                 | IL_BN                                
IL_BR_B                               | IL_BR_F                              
IL_BV                                 | IL_CHAR                              
IL_CP                                 | IL_DS                                
IL_DV                                 | IL_ENDCHAR                           
IL_FV                                 | IL_GL                                
IL_GO                                 | IL_GS                                
IL_IL                                 | IL_J                                 
IL_JS                                 | IL_LB                                
IL_LN                                 | IL_LS                                
IL_MP                                 | IL_MT                                
IL_NE                                 | IL_NL                                
IL_NO                                 | IL_NX                                
IL_PC                                 | IL_PN                                
IL_PQ                                 | IL_PT                                
IL_RB                                 | IL_RS                                
IL_RT                                 | IL_SB                                
IL_SP                                 | IL_SU                                
IL_SV                                 | IL_SX                                
IL_US                                 | IL_WS                                
IL_XQ                                 | KB_B                                 
KB_BN                                 | KB_INP                               
LDI0                                  | RETURN                               
SERIAL_B                              | SERIAL_BN                            

     52 macros

 AS V1.42 Beta [Bld 172] - Source File Tinybasi_IL.asm - Page 68 - 10/07/24 19:32:40


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.04 seconds assembly time

   2677 lines source file
   3657 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
